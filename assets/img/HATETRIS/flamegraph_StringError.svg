<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1094" onload="init(evt)" viewBox="0 0 1200 1094" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1094" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1077.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1077.00"> </text><svg id="frames" x="10" width="1180"><g><title>[libcuda.so.460.91.03] (1,651 samples, 0.38%)</title><rect x="0.1260%" y="997" width="0.3817%" height="15" fill="rgb(227,0,7)"/><text x="0.3760%" y="1007.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1,349 samples, 0.31%)</title><rect x="1.0898%" y="997" width="0.3119%" height="15" fill="rgb(217,0,24)"/><text x="1.3398%" y="1007.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (2,881 samples, 0.67%)</title><rect x="1.4556%" y="997" width="0.6661%" height="15" fill="rgb(221,193,54)"/><text x="1.7056%" y="1007.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1,072 samples, 0.25%)</title><rect x="1.8738%" y="981" width="0.2478%" height="15" fill="rgb(248,212,6)"/><text x="2.1238%" y="991.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (1,072 samples, 0.25%)</title><rect x="1.8738%" y="965" width="0.2478%" height="15" fill="rgb(208,68,35)"/><text x="2.1238%" y="975.50"></text></g><g><title>core::fmt::Formatter::write_str (926 samples, 0.21%)</title><rect x="1.9076%" y="949" width="0.2141%" height="15" fill="rgb(232,128,0)"/><text x="2.1576%" y="959.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (626 samples, 0.14%)</title><rect x="2.1216%" y="997" width="0.1447%" height="15" fill="rgb(207,160,47)"/><text x="2.3716%" y="1007.50"></text></g><g><title>&lt;mcts_policy::game_rules::Move as core::hash::Hash&gt;::hash (971 samples, 0.22%)</title><rect x="2.5688%" y="981" width="0.2245%" height="15" fill="rgb(228,23,34)"/><text x="2.8188%" y="991.50"></text></g><g><title>hashbrown::map::make_hash (1,276 samples, 0.29%)</title><rect x="2.5075%" y="997" width="0.2950%" height="15" fill="rgb(218,30,26)"/><text x="2.7575%" y="1007.50"></text></g><g><title>[[heap]] (12,947 samples, 2.99%)</title><rect x="0.0566%" y="1013" width="2.9932%" height="15" fill="rgb(220,122,19)"/><text x="0.3066%" y="1023.50">[[h..</text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3,399 samples, 0.79%)</title><rect x="3.0584%" y="997" width="0.7858%" height="15" fill="rgb(250,228,42)"/><text x="3.3084%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (860 samples, 0.20%)</title><rect x="3.6454%" y="981" width="0.1988%" height="15" fill="rgb(240,193,28)"/><text x="3.8954%" y="991.50"></text></g><g><title>alloc::string::String::push_str (860 samples, 0.20%)</title><rect x="3.6454%" y="965" width="0.1988%" height="15" fill="rgb(216,20,37)"/><text x="3.8954%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (860 samples, 0.20%)</title><rect x="3.6454%" y="949" width="0.1988%" height="15" fill="rgb(206,188,39)"/><text x="3.8954%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (860 samples, 0.20%)</title><rect x="3.6454%" y="933" width="0.1988%" height="15" fill="rgb(217,207,13)"/><text x="3.8954%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (860 samples, 0.20%)</title><rect x="3.6454%" y="917" width="0.1988%" height="15" fill="rgb(231,73,38)"/><text x="3.8954%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (756 samples, 0.17%)</title><rect x="3.6695%" y="901" width="0.1748%" height="15" fill="rgb(225,20,46)"/><text x="3.9195%" y="911.50"></text></g><g><title>[libcuda.so.460.91.03] (1,208 samples, 0.28%)</title><rect x="3.8868%" y="997" width="0.2793%" height="15" fill="rgb(210,31,41)"/><text x="4.1368%" y="1007.50"></text></g><g><title>[libcudart-6d56b25a.so.11.0] (556 samples, 0.13%)</title><rect x="4.1661%" y="997" width="0.1285%" height="15" fill="rgb(221,200,47)"/><text x="4.4161%" y="1007.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1,499 samples, 0.35%)</title><rect x="5.7941%" y="997" width="0.3466%" height="15" fill="rgb(226,26,5)"/><text x="6.0441%" y="1007.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (644 samples, 0.15%)</title><rect x="6.2403%" y="933" width="0.1489%" height="15" fill="rgb(249,33,26)"/><text x="6.4903%" y="943.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (644 samples, 0.15%)</title><rect x="6.2403%" y="917" width="0.1489%" height="15" fill="rgb(235,183,28)"/><text x="6.4903%" y="927.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (644 samples, 0.15%)</title><rect x="6.2403%" y="901" width="0.1489%" height="15" fill="rgb(221,5,38)"/><text x="6.4903%" y="911.50"></text></g><g><title>core::fmt::Formatter::write_str (644 samples, 0.15%)</title><rect x="6.2403%" y="885" width="0.1489%" height="15" fill="rgb(247,18,42)"/><text x="6.4903%" y="895.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (1,234 samples, 0.29%)</title><rect x="6.1610%" y="997" width="0.2853%" height="15" fill="rgb(241,131,45)"/><text x="6.4110%" y="1007.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1,143 samples, 0.26%)</title><rect x="6.1820%" y="981" width="0.2643%" height="15" fill="rgb(249,31,29)"/><text x="6.4320%" y="991.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (1,143 samples, 0.26%)</title><rect x="6.1820%" y="965" width="0.2643%" height="15" fill="rgb(225,111,53)"/><text x="6.4320%" y="975.50"></text></g><g><title>core::fmt::Formatter::write_str (1,132 samples, 0.26%)</title><rect x="6.1846%" y="949" width="0.2617%" height="15" fill="rgb(238,160,17)"/><text x="6.4346%" y="959.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (715 samples, 0.17%)</title><rect x="6.4463%" y="997" width="0.1653%" height="15" fill="rgb(214,148,48)"/><text x="6.6963%" y="1007.50"></text></g><g><title>[[stack]] (19,327 samples, 4.47%)</title><rect x="3.0499%" y="1013" width="4.4682%" height="15" fill="rgb(232,36,49)"/><text x="3.2999%" y="1023.50">[[sta..</text></g><g><title>[anon] (1,222 samples, 0.28%)</title><rect x="7.5181%" y="1013" width="0.2825%" height="15" fill="rgb(209,103,24)"/><text x="7.7681%" y="1023.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (434 samples, 0.10%)</title><rect x="8.0690%" y="997" width="0.1003%" height="15" fill="rgb(229,88,8)"/><text x="8.3190%" y="1007.50"></text></g><g><title>[mcts-policy] (1,064 samples, 0.25%)</title><rect x="7.9613%" y="1013" width="0.2460%" height="15" fill="rgb(213,181,19)"/><text x="8.2113%" y="1023.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::Debug for u16&gt;::fmt (597 samples, 0.14%)</title><rect x="8.3051%" y="981" width="0.1380%" height="15" fill="rgb(254,191,54)"/><text x="8.5551%" y="991.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (761 samples, 0.18%)</title><rect x="8.2808%" y="997" width="0.1759%" height="15" fill="rgb(241,83,37)"/><text x="8.5308%" y="1007.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (803 samples, 0.19%)</title><rect x="8.4567%" y="997" width="0.1856%" height="15" fill="rgb(233,36,39)"/><text x="8.7067%" y="1007.50"></text></g><g><title>at::Tensor::add_ (1,754 samples, 0.41%)</title><rect x="8.6694%" y="757" width="0.4055%" height="15" fill="rgb(226,3,54)"/><text x="8.9194%" y="767.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::add__Tensor&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (1,754 samples, 0.41%)</title><rect x="8.6694%" y="741" width="0.4055%" height="15" fill="rgb(245,192,40)"/><text x="8.9194%" y="751.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add__Tensor (1,754 samples, 0.41%)</title><rect x="8.6694%" y="725" width="0.4055%" height="15" fill="rgb(238,167,29)"/><text x="8.9194%" y="735.50"></text></g><g><title>at::cudnn_convolution (2,174 samples, 0.50%)</title><rect x="9.0828%" y="757" width="0.5026%" height="15" fill="rgb(232,182,51)"/><text x="9.3328%" y="767.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool), &amp;torch::autograd::VariableType::(anonymous namespace)::cudnn_convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool&gt; &gt;, at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool)&gt;::call (2,101 samples, 0.49%)</title><rect x="9.0997%" y="741" width="0.4857%" height="15" fill="rgb(231,60,39)"/><text x="9.3497%" y="751.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::cudnn_convolution (2,093 samples, 0.48%)</title><rect x="9.1015%" y="725" width="0.4839%" height="15" fill="rgb(208,69,12)"/><text x="9.3515%" y="735.50"></text></g><g><title>&lt;tch::nn::conv::Conv&lt;[i64: 2]&gt; as tch::nn::module::Module&gt;::forward (4,719 samples, 1.09%)</title><rect x="8.6694%" y="965" width="1.0910%" height="15" fill="rgb(235,93,37)"/><text x="8.9194%" y="975.50"></text></g><g><title>tch::wrappers::tensor_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::conv2d (4,719 samples, 1.09%)</title><rect x="8.6694%" y="949" width="1.0910%" height="15" fill="rgb(213,116,39)"/><text x="8.9194%" y="959.50"></text></g><g><title>tch::wrappers::tensor_fallible_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::f_conv2d (4,719 samples, 1.09%)</title><rect x="8.6694%" y="933" width="1.0910%" height="15" fill="rgb(222,207,29)"/><text x="8.9194%" y="943.50"></text></g><g><title>atg_conv2d (4,719 samples, 1.09%)</title><rect x="8.6694%" y="917" width="1.0910%" height="15" fill="rgb(206,96,30)"/><text x="8.9194%" y="927.50"></text></g><g><title>at::conv2d (4,719 samples, 1.09%)</title><rect x="8.6694%" y="901" width="1.0910%" height="15" fill="rgb(218,138,4)"/><text x="8.9194%" y="911.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_conv2d&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long)&gt;::call (4,719 samples, 1.09%)</title><rect x="8.6694%" y="885" width="1.0910%" height="15" fill="rgb(250,191,14)"/><text x="8.9194%" y="895.50"></text></g><g><title>at::native::conv2d (4,719 samples, 1.09%)</title><rect x="8.6694%" y="869" width="1.0910%" height="15" fill="rgb(239,60,40)"/><text x="8.9194%" y="879.50"></text></g><g><title>at::convolution (4,719 samples, 1.09%)</title><rect x="8.6694%" y="853" width="1.0910%" height="15" fill="rgb(206,27,48)"/><text x="8.9194%" y="863.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long)&gt;::call (4,719 samples, 1.09%)</title><rect x="8.6694%" y="837" width="1.0910%" height="15" fill="rgb(225,35,8)"/><text x="8.9194%" y="847.50"></text></g><g><title>at::native::convolution (4,719 samples, 1.09%)</title><rect x="8.6694%" y="821" width="1.0910%" height="15" fill="rgb(250,213,24)"/><text x="8.9194%" y="831.50"></text></g><g><title>at::_convolution (4,719 samples, 1.09%)</title><rect x="8.6694%" y="805" width="1.0910%" height="15" fill="rgb(247,123,22)"/><text x="8.9194%" y="815.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper__convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool)&gt;::call (4,719 samples, 1.09%)</title><rect x="8.6694%" y="789" width="1.0910%" height="15" fill="rgb(231,138,38)"/><text x="8.9194%" y="799.50"></text></g><g><title>at::native::_convolution (4,719 samples, 1.09%)</title><rect x="8.6694%" y="773" width="1.0910%" height="15" fill="rgb(231,145,46)"/><text x="8.9194%" y="783.50"></text></g><g><title>tch::nn::module::&lt;impl tch::wrappers::tensor::Tensor&gt;::apply (4,859 samples, 1.12%)</title><rect x="8.6660%" y="981" width="1.1234%" height="15" fill="rgb(251,118,11)"/><text x="8.9160%" y="991.50"></text></g><g><title>tch::nn::module::&lt;impl tch::wrappers::tensor::Tensor&gt;::apply_t (3,011 samples, 0.70%)</title><rect x="9.7893%" y="981" width="0.6961%" height="15" fill="rgb(217,147,25)"/><text x="10.0393%" y="991.50"></text></g><g><title>&lt;tch::nn::batch_norm::BatchNorm as tch::nn::module::ModuleT&gt;::forward_t (2,998 samples, 0.69%)</title><rect x="9.7923%" y="965" width="0.6931%" height="15" fill="rgb(247,81,37)"/><text x="10.0423%" y="975.50"></text></g><g><title>tch::wrappers::tensor_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::batch_norm (2,998 samples, 0.69%)</title><rect x="9.7923%" y="949" width="0.6931%" height="15" fill="rgb(209,12,38)"/><text x="10.0423%" y="959.50"></text></g><g><title>tch::wrappers::tensor_fallible_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::f_batch_norm (2,998 samples, 0.69%)</title><rect x="9.7923%" y="933" width="0.6931%" height="15" fill="rgb(227,1,9)"/><text x="10.0423%" y="943.50"></text></g><g><title>atg_batch_norm (2,998 samples, 0.69%)</title><rect x="9.7923%" y="917" width="0.6931%" height="15" fill="rgb(248,47,43)"/><text x="10.0423%" y="927.50"></text></g><g><title>at::batch_norm (2,998 samples, 0.69%)</title><rect x="9.7923%" y="901" width="0.6931%" height="15" fill="rgb(221,10,30)"/><text x="10.0423%" y="911.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_batch_norm&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, at::Tensor (at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (2,998 samples, 0.69%)</title><rect x="9.7923%" y="885" width="0.6931%" height="15" fill="rgb(210,229,1)"/><text x="10.0423%" y="895.50"></text></g><g><title>at::native::batch_norm (2,998 samples, 0.69%)</title><rect x="9.7923%" y="869" width="0.6931%" height="15" fill="rgb(222,148,37)"/><text x="10.0423%" y="879.50"></text></g><g><title>at::_batch_norm_impl_index (2,998 samples, 0.69%)</title><rect x="9.7923%" y="853" width="0.6931%" height="15" fill="rgb(234,67,33)"/><text x="10.0423%" y="863.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper__batch_norm_impl_index&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (2,998 samples, 0.69%)</title><rect x="9.7923%" y="837" width="0.6931%" height="15" fill="rgb(247,98,35)"/><text x="10.0423%" y="847.50"></text></g><g><title>at::native::_batch_norm_impl_index (2,998 samples, 0.69%)</title><rect x="9.7923%" y="821" width="0.6931%" height="15" fill="rgb(247,138,52)"/><text x="10.0423%" y="831.50"></text></g><g><title>at::cudnn_batch_norm (2,998 samples, 0.69%)</title><rect x="9.7923%" y="805" width="0.6931%" height="15" fill="rgb(213,79,30)"/><text x="10.0423%" y="815.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;torch::autograd::VariableType::(anonymous namespace)::cudnn_batch_norm&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (2,998 samples, 0.69%)</title><rect x="9.7923%" y="789" width="0.6931%" height="15" fill="rgb(246,177,23)"/><text x="10.0423%" y="799.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::cudnn_batch_norm (2,998 samples, 0.69%)</title><rect x="9.7923%" y="773" width="0.6931%" height="15" fill="rgb(230,62,27)"/><text x="10.0423%" y="783.50"></text></g><g><title>at::redispatch::cudnn_batch_norm (2,998 samples, 0.69%)</title><rect x="9.7923%" y="757" width="0.6931%" height="15" fill="rgb(216,154,8)"/><text x="10.0423%" y="767.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_cudnn_batch_norm&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (2,998 samples, 0.69%)</title><rect x="9.7923%" y="741" width="0.6931%" height="15" fill="rgb(244,35,45)"/><text x="10.0423%" y="751.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_cudnn_batch_norm (2,998 samples, 0.69%)</title><rect x="9.7923%" y="725" width="0.6931%" height="15" fill="rgb(251,115,12)"/><text x="10.0423%" y="735.50"></text></g><g><title>at::native::cudnn_batch_norm (2,997 samples, 0.69%)</title><rect x="9.7926%" y="709" width="0.6929%" height="15" fill="rgb(240,54,50)"/><text x="10.0426%" y="719.50"></text></g><g><title>&lt;mcts_policy::neural_net::Net as tch::nn::module::ModuleT&gt;::forward_t (8,863 samples, 2.05%)</title><rect x="8.6613%" y="997" width="2.0490%" height="15" fill="rgb(233,84,52)"/><text x="8.9113%" y="1007.50">&lt;..</text></g><g><title>tch::wrappers::tensor_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::relu (663 samples, 0.15%)</title><rect x="10.5571%" y="981" width="0.1533%" height="15" fill="rgb(207,117,47)"/><text x="10.8071%" y="991.50"></text></g><g><title>tch::wrappers::tensor_fallible_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::f_relu (663 samples, 0.15%)</title><rect x="10.5571%" y="965" width="0.1533%" height="15" fill="rgb(249,43,39)"/><text x="10.8071%" y="975.50"></text></g><g><title>atg_relu (663 samples, 0.15%)</title><rect x="10.5571%" y="949" width="0.1533%" height="15" fill="rgb(209,38,44)"/><text x="10.8071%" y="959.50"></text></g><g><title>at::relu (663 samples, 0.15%)</title><rect x="10.5571%" y="933" width="0.1533%" height="15" fill="rgb(236,212,23)"/><text x="10.8071%" y="943.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::relu&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;&gt; &gt;, at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;)&gt;::call (663 samples, 0.15%)</title><rect x="10.5571%" y="917" width="0.1533%" height="15" fill="rgb(242,79,21)"/><text x="10.8071%" y="927.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::relu (663 samples, 0.15%)</title><rect x="10.5571%" y="901" width="0.1533%" height="15" fill="rgb(211,96,35)"/><text x="10.8071%" y="911.50"></text></g><g><title>at::redispatch::relu (663 samples, 0.15%)</title><rect x="10.5571%" y="885" width="0.1533%" height="15" fill="rgb(253,215,40)"/><text x="10.8071%" y="895.50"></text></g><g><title>c10::Dispatcher::redispatch&lt;at::Tensor, at::Tensor const&amp;&gt; (663 samples, 0.15%)</title><rect x="10.5571%" y="869" width="0.1533%" height="15" fill="rgb(211,81,21)"/><text x="10.8071%" y="879.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_relu&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;&gt; &gt;, at::Tensor (at::Tensor const&amp;)&gt;::call (663 samples, 0.15%)</title><rect x="10.5571%" y="853" width="0.1533%" height="15" fill="rgb(208,190,38)"/><text x="10.8071%" y="863.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_relu (663 samples, 0.15%)</title><rect x="10.5571%" y="837" width="0.1533%" height="15" fill="rgb(235,213,38)"/><text x="10.8071%" y="847.50"></text></g><g><title>at::native::relu (663 samples, 0.15%)</title><rect x="10.5571%" y="821" width="0.1533%" height="15" fill="rgb(237,122,38)"/><text x="10.8071%" y="831.50"></text></g><g><title>at::clamp_min (663 samples, 0.15%)</title><rect x="10.5571%" y="805" width="0.1533%" height="15" fill="rgb(244,218,35)"/><text x="10.8071%" y="815.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_clamp_min&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor (at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (663 samples, 0.15%)</title><rect x="10.5571%" y="789" width="0.1533%" height="15" fill="rgb(240,68,47)"/><text x="10.8071%" y="799.50"></text></g><g><title>at::native::clamp_min (663 samples, 0.15%)</title><rect x="10.5571%" y="773" width="0.1533%" height="15" fill="rgb(210,16,53)"/><text x="10.8071%" y="783.50"></text></g><g><title>at::clamp_min_outf (663 samples, 0.15%)</title><rect x="10.5571%" y="757" width="0.1533%" height="15" fill="rgb(235,124,12)"/><text x="10.8071%" y="767.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_clamp_min_out_out (663 samples, 0.15%)</title><rect x="10.5571%" y="741" width="0.1533%" height="15" fill="rgb(224,169,11)"/><text x="10.8071%" y="751.50"></text></g><g><title>at::native::clamp_min_out (663 samples, 0.15%)</title><rect x="10.5571%" y="725" width="0.1533%" height="15" fill="rgb(250,166,2)"/><text x="10.8071%" y="735.50"></text></g><g><title>at::native::(anonymous namespace)::clamp_min_scalar_kernel_impl (663 samples, 0.15%)</title><rect x="10.5571%" y="709" width="0.1533%" height="15" fill="rgb(242,216,29)"/><text x="10.8071%" y="719.50"></text></g><g><title>at::native::gpu_kernel&lt;__nv_hdl_wrapper_t&lt;false, false, __nv_dl_tag&lt;void (*)(at::TensorIterator&amp;, c10::Scalar), &amp;at::native::(anonymous namespace)::clamp_min_scalar_kernel_impl, 4u&gt;, float (float), float&gt; &gt; (663 samples, 0.15%)</title><rect x="10.5571%" y="693" width="0.1533%" height="15" fill="rgb(230,116,27)"/><text x="10.8071%" y="703.50"></text></g><g><title>at::native::gpu_kernel_impl&lt;__nv_hdl_wrapper_t&lt;false, false, __nv_dl_tag&lt;void (*)(at::TensorIterator&amp;, c10::Scalar), &amp;at::native::(anonymous namespace)::clamp_min_scalar_kernel_impl, 4u&gt;, float (float), float&gt; &gt; (663 samples, 0.15%)</title><rect x="10.5571%" y="677" width="0.1533%" height="15" fill="rgb(228,99,48)"/><text x="10.8071%" y="687.50"></text></g><g><title>&lt;tch::nn::batch_norm::BatchNorm as tch::nn::module::ModuleT&gt;::forward_t (542 samples, 0.13%)</title><rect x="10.7458%" y="997" width="0.1253%" height="15" fill="rgb(253,11,6)"/><text x="10.9958%" y="1007.50"></text></g><g><title>tch::wrappers::tensor_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::batch_norm (542 samples, 0.13%)</title><rect x="10.7458%" y="981" width="0.1253%" height="15" fill="rgb(247,143,39)"/><text x="10.9958%" y="991.50"></text></g><g><title>tch::wrappers::tensor_fallible_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::f_batch_norm (542 samples, 0.13%)</title><rect x="10.7458%" y="965" width="0.1253%" height="15" fill="rgb(236,97,10)"/><text x="10.9958%" y="975.50"></text></g><g><title>atg_batch_norm (542 samples, 0.13%)</title><rect x="10.7458%" y="949" width="0.1253%" height="15" fill="rgb(233,208,19)"/><text x="10.9958%" y="959.50"></text></g><g><title>at::batch_norm (542 samples, 0.13%)</title><rect x="10.7458%" y="933" width="0.1253%" height="15" fill="rgb(216,164,2)"/><text x="10.9958%" y="943.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_batch_norm&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, at::Tensor (at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (542 samples, 0.13%)</title><rect x="10.7458%" y="917" width="0.1253%" height="15" fill="rgb(220,129,5)"/><text x="10.9958%" y="927.50"></text></g><g><title>at::native::batch_norm (542 samples, 0.13%)</title><rect x="10.7458%" y="901" width="0.1253%" height="15" fill="rgb(242,17,10)"/><text x="10.9958%" y="911.50"></text></g><g><title>at::_batch_norm_impl_index (542 samples, 0.13%)</title><rect x="10.7458%" y="885" width="0.1253%" height="15" fill="rgb(242,107,0)"/><text x="10.9958%" y="895.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper__batch_norm_impl_index&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (542 samples, 0.13%)</title><rect x="10.7458%" y="869" width="0.1253%" height="15" fill="rgb(251,28,31)"/><text x="10.9958%" y="879.50"></text></g><g><title>at::native::_batch_norm_impl_index (542 samples, 0.13%)</title><rect x="10.7458%" y="853" width="0.1253%" height="15" fill="rgb(233,223,10)"/><text x="10.9958%" y="863.50"></text></g><g><title>at::cudnn_batch_norm (542 samples, 0.13%)</title><rect x="10.7458%" y="837" width="0.1253%" height="15" fill="rgb(215,21,27)"/><text x="10.9958%" y="847.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;torch::autograd::VariableType::(anonymous namespace)::cudnn_batch_norm&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (542 samples, 0.13%)</title><rect x="10.7458%" y="821" width="0.1253%" height="15" fill="rgb(232,23,21)"/><text x="10.9958%" y="831.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::cudnn_batch_norm (542 samples, 0.13%)</title><rect x="10.7458%" y="805" width="0.1253%" height="15" fill="rgb(244,5,23)"/><text x="10.9958%" y="815.50"></text></g><g><title>at::redispatch::cudnn_batch_norm (542 samples, 0.13%)</title><rect x="10.7458%" y="789" width="0.1253%" height="15" fill="rgb(226,81,46)"/><text x="10.9958%" y="799.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_cudnn_batch_norm&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (542 samples, 0.13%)</title><rect x="10.7458%" y="773" width="0.1253%" height="15" fill="rgb(247,70,30)"/><text x="10.9958%" y="783.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_cudnn_batch_norm (542 samples, 0.13%)</title><rect x="10.7458%" y="757" width="0.1253%" height="15" fill="rgb(212,68,19)"/><text x="10.9958%" y="767.50"></text></g><g><title>at::native::cudnn_batch_norm (542 samples, 0.13%)</title><rect x="10.7458%" y="741" width="0.1253%" height="15" fill="rgb(240,187,13)"/><text x="10.9958%" y="751.50"></text></g><g><title>at::cudnn_convolution (872 samples, 0.20%)</title><rect x="10.8974%" y="789" width="0.2016%" height="15" fill="rgb(223,113,26)"/><text x="11.1474%" y="799.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool), &amp;torch::autograd::VariableType::(anonymous namespace)::cudnn_convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool&gt; &gt;, at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool)&gt;::call (872 samples, 0.20%)</title><rect x="10.8974%" y="773" width="0.2016%" height="15" fill="rgb(206,192,2)"/><text x="11.1474%" y="783.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::cudnn_convolution (872 samples, 0.20%)</title><rect x="10.8974%" y="757" width="0.2016%" height="15" fill="rgb(241,108,4)"/><text x="11.1474%" y="767.50"></text></g><g><title>&lt;tch::nn::conv::Conv&lt;[i64: 2]&gt; as tch::nn::module::Module&gt;::forward (1,037 samples, 0.24%)</title><rect x="10.8711%" y="997" width="0.2397%" height="15" fill="rgb(247,173,49)"/><text x="11.1211%" y="1007.50"></text></g><g><title>tch::wrappers::tensor_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::conv2d (995 samples, 0.23%)</title><rect x="10.8808%" y="981" width="0.2300%" height="15" fill="rgb(224,114,35)"/><text x="11.1308%" y="991.50"></text></g><g><title>tch::wrappers::tensor_fallible_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::f_conv2d (995 samples, 0.23%)</title><rect x="10.8808%" y="965" width="0.2300%" height="15" fill="rgb(245,159,27)"/><text x="11.1308%" y="975.50"></text></g><g><title>atg_conv2d (982 samples, 0.23%)</title><rect x="10.8838%" y="949" width="0.2270%" height="15" fill="rgb(245,172,44)"/><text x="11.1338%" y="959.50"></text></g><g><title>at::conv2d (982 samples, 0.23%)</title><rect x="10.8838%" y="933" width="0.2270%" height="15" fill="rgb(236,23,11)"/><text x="11.1338%" y="943.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_conv2d&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long)&gt;::call (982 samples, 0.23%)</title><rect x="10.8838%" y="917" width="0.2270%" height="15" fill="rgb(205,117,38)"/><text x="11.1338%" y="927.50"></text></g><g><title>at::native::conv2d (982 samples, 0.23%)</title><rect x="10.8838%" y="901" width="0.2270%" height="15" fill="rgb(237,72,25)"/><text x="11.1338%" y="911.50"></text></g><g><title>at::convolution (982 samples, 0.23%)</title><rect x="10.8838%" y="885" width="0.2270%" height="15" fill="rgb(244,70,9)"/><text x="11.1338%" y="895.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long)&gt;::call (982 samples, 0.23%)</title><rect x="10.8838%" y="869" width="0.2270%" height="15" fill="rgb(217,125,39)"/><text x="11.1338%" y="879.50"></text></g><g><title>at::native::convolution (982 samples, 0.23%)</title><rect x="10.8838%" y="853" width="0.2270%" height="15" fill="rgb(235,36,10)"/><text x="11.1338%" y="863.50"></text></g><g><title>at::_convolution (982 samples, 0.23%)</title><rect x="10.8838%" y="837" width="0.2270%" height="15" fill="rgb(251,123,47)"/><text x="11.1338%" y="847.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper__convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool)&gt;::call (982 samples, 0.23%)</title><rect x="10.8838%" y="821" width="0.2270%" height="15" fill="rgb(221,13,13)"/><text x="11.1338%" y="831.50"></text></g><g><title>at::native::_convolution (982 samples, 0.23%)</title><rect x="10.8838%" y="805" width="0.2270%" height="15" fill="rgb(238,131,9)"/><text x="11.1338%" y="815.50"></text></g><g><title>[libcuda.so.460.91.03] (625 samples, 0.14%)</title><rect x="11.5769%" y="981" width="0.1445%" height="15" fill="rgb(211,50,8)"/><text x="11.8269%" y="991.50"></text></g><g><title>[libcuda.so.460.91.03] (2,554 samples, 0.59%)</title><rect x="11.1318%" y="997" width="0.5905%" height="15" fill="rgb(245,182,24)"/><text x="11.3818%" y="1007.50"></text></g><g><title>[libcudart-6d56b25a.so.11.0] (544 samples, 0.13%)</title><rect x="11.7223%" y="997" width="0.1258%" height="15" fill="rgb(242,14,37)"/><text x="11.9723%" y="1007.50"></text></g><g><title>at::_convolution (778 samples, 0.18%)</title><rect x="12.5638%" y="997" width="0.1799%" height="15" fill="rgb(246,228,12)"/><text x="12.8138%" y="1007.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper__convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool)&gt;::call (777 samples, 0.18%)</title><rect x="12.5641%" y="981" width="0.1796%" height="15" fill="rgb(213,55,15)"/><text x="12.8141%" y="991.50"></text></g><g><title>at::native::_convolution (777 samples, 0.18%)</title><rect x="12.5641%" y="965" width="0.1796%" height="15" fill="rgb(209,9,3)"/><text x="12.8141%" y="975.50"></text></g><g><title>at::batch_norm (532 samples, 0.12%)</title><rect x="12.7506%" y="997" width="0.1230%" height="15" fill="rgb(230,59,30)"/><text x="13.0006%" y="1007.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_batch_norm&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, at::Tensor (at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (491 samples, 0.11%)</title><rect x="12.7601%" y="981" width="0.1135%" height="15" fill="rgb(209,121,21)"/><text x="13.0101%" y="991.50"></text></g><g><title>at::native::batch_norm (491 samples, 0.11%)</title><rect x="12.7601%" y="965" width="0.1135%" height="15" fill="rgb(220,109,13)"/><text x="13.0101%" y="975.50"></text></g><g><title>at::_batch_norm_impl_index (491 samples, 0.11%)</title><rect x="12.7601%" y="949" width="0.1135%" height="15" fill="rgb(232,18,1)"/><text x="13.0101%" y="959.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper__batch_norm_impl_index&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (491 samples, 0.11%)</title><rect x="12.7601%" y="933" width="0.1135%" height="15" fill="rgb(215,41,42)"/><text x="13.0101%" y="943.50"></text></g><g><title>at::native::_batch_norm_impl_index (491 samples, 0.11%)</title><rect x="12.7601%" y="917" width="0.1135%" height="15" fill="rgb(224,123,36)"/><text x="13.0101%" y="927.50"></text></g><g><title>at::cudnn_batch_norm (491 samples, 0.11%)</title><rect x="12.7601%" y="901" width="0.1135%" height="15" fill="rgb(240,125,3)"/><text x="13.0101%" y="911.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;torch::autograd::VariableType::(anonymous namespace)::cudnn_batch_norm&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (491 samples, 0.11%)</title><rect x="12.7601%" y="885" width="0.1135%" height="15" fill="rgb(205,98,50)"/><text x="13.0101%" y="895.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::cudnn_batch_norm (491 samples, 0.11%)</title><rect x="12.7601%" y="869" width="0.1135%" height="15" fill="rgb(205,185,37)"/><text x="13.0101%" y="879.50"></text></g><g><title>at::redispatch::cudnn_batch_norm (491 samples, 0.11%)</title><rect x="12.7601%" y="853" width="0.1135%" height="15" fill="rgb(238,207,15)"/><text x="13.0101%" y="863.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_cudnn_batch_norm&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (491 samples, 0.11%)</title><rect x="12.7601%" y="837" width="0.1135%" height="15" fill="rgb(213,199,42)"/><text x="13.0101%" y="847.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_cudnn_batch_norm (491 samples, 0.11%)</title><rect x="12.7601%" y="821" width="0.1135%" height="15" fill="rgb(235,201,11)"/><text x="13.0101%" y="831.50"></text></g><g><title>at::native::cudnn_batch_norm (491 samples, 0.11%)</title><rect x="12.7601%" y="805" width="0.1135%" height="15" fill="rgb(207,46,11)"/><text x="13.0101%" y="815.50"></text></g><g><title>at::conv2d (926 samples, 0.21%)</title><rect x="12.8776%" y="997" width="0.2141%" height="15" fill="rgb(241,35,35)"/><text x="13.1276%" y="1007.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_conv2d&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long)&gt;::call (892 samples, 0.21%)</title><rect x="12.8854%" y="981" width="0.2062%" height="15" fill="rgb(243,32,47)"/><text x="13.1354%" y="991.50"></text></g><g><title>at::native::conv2d (892 samples, 0.21%)</title><rect x="12.8854%" y="965" width="0.2062%" height="15" fill="rgb(247,202,23)"/><text x="13.1354%" y="975.50"></text></g><g><title>at::convolution (892 samples, 0.21%)</title><rect x="12.8854%" y="949" width="0.2062%" height="15" fill="rgb(219,102,11)"/><text x="13.1354%" y="959.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long)&gt;::call (892 samples, 0.21%)</title><rect x="12.8854%" y="933" width="0.2062%" height="15" fill="rgb(243,110,44)"/><text x="13.1354%" y="943.50"></text></g><g><title>at::native::convolution (892 samples, 0.21%)</title><rect x="12.8854%" y="917" width="0.2062%" height="15" fill="rgb(222,74,54)"/><text x="13.1354%" y="927.50"></text></g><g><title>at::_convolution (892 samples, 0.21%)</title><rect x="12.8854%" y="901" width="0.2062%" height="15" fill="rgb(216,99,12)"/><text x="13.1354%" y="911.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper__convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool)&gt;::call (892 samples, 0.21%)</title><rect x="12.8854%" y="885" width="0.2062%" height="15" fill="rgb(226,22,26)"/><text x="13.1354%" y="895.50"></text></g><g><title>at::native::_convolution (892 samples, 0.21%)</title><rect x="12.8854%" y="869" width="0.2062%" height="15" fill="rgb(217,163,10)"/><text x="13.1354%" y="879.50"></text></g><g><title>at::native::reshape_bias (576 samples, 0.13%)</title><rect x="12.9585%" y="853" width="0.1332%" height="15" fill="rgb(213,25,53)"/><text x="13.2085%" y="863.50"></text></g><g><title>at::Tensor::reshape (576 samples, 0.13%)</title><rect x="12.9585%" y="837" width="0.1332%" height="15" fill="rgb(252,105,26)"/><text x="13.2085%" y="847.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_reshape&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ArrayRef&lt;long&gt; &gt; &gt;, at::Tensor (at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;)&gt;::call (576 samples, 0.13%)</title><rect x="12.9585%" y="821" width="0.1332%" height="15" fill="rgb(220,39,43)"/><text x="13.2085%" y="831.50"></text></g><g><title>at::native::reshape (576 samples, 0.13%)</title><rect x="12.9585%" y="805" width="0.1332%" height="15" fill="rgb(229,68,48)"/><text x="13.2085%" y="815.50"></text></g><g><title>at::Tensor::view (576 samples, 0.13%)</title><rect x="12.9585%" y="789" width="0.1332%" height="15" fill="rgb(252,8,32)"/><text x="13.2085%" y="799.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;), &amp;torch::autograd::VariableType::(anonymous namespace)::view&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt; &gt; &gt;, at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;)&gt;::call (576 samples, 0.13%)</title><rect x="12.9585%" y="773" width="0.1332%" height="15" fill="rgb(223,20,43)"/><text x="13.2085%" y="783.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::view (576 samples, 0.13%)</title><rect x="12.9585%" y="757" width="0.1332%" height="15" fill="rgb(229,81,49)"/><text x="13.2085%" y="767.50"></text></g><g><title>at::meta::add_Tensor::meta (464 samples, 0.11%)</title><rect x="13.0916%" y="773" width="0.1073%" height="15" fill="rgb(236,28,36)"/><text x="13.3416%" y="783.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_binary_op (464 samples, 0.11%)</title><rect x="13.0916%" y="757" width="0.1073%" height="15" fill="rgb(249,185,26)"/><text x="13.3416%" y="767.50"></text></g><g><title>at::TensorIteratorBase::build (464 samples, 0.11%)</title><rect x="13.0916%" y="741" width="0.1073%" height="15" fill="rgb(249,174,33)"/><text x="13.3416%" y="751.50"></text></g><g><title>at::Tensor::add_ (709 samples, 0.16%)</title><rect x="13.0916%" y="901" width="0.1639%" height="15" fill="rgb(233,201,37)"/><text x="13.3416%" y="911.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::add__Tensor&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (709 samples, 0.16%)</title><rect x="13.0916%" y="885" width="0.1639%" height="15" fill="rgb(221,78,26)"/><text x="13.3416%" y="895.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add__Tensor (709 samples, 0.16%)</title><rect x="13.0916%" y="869" width="0.1639%" height="15" fill="rgb(250,127,30)"/><text x="13.3416%" y="879.50"></text></g><g><title>at::redispatch::add_ (709 samples, 0.16%)</title><rect x="13.0916%" y="853" width="0.1639%" height="15" fill="rgb(230,49,44)"/><text x="13.3416%" y="863.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::ADInplaceOrView::(anonymous namespace)::add__Tensor&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (709 samples, 0.16%)</title><rect x="13.0916%" y="837" width="0.1639%" height="15" fill="rgb(229,67,23)"/><text x="13.3416%" y="847.50"></text></g><g><title>torch::ADInplaceOrView::(anonymous namespace)::add__Tensor (709 samples, 0.16%)</title><rect x="13.0916%" y="821" width="0.1639%" height="15" fill="rgb(249,83,47)"/><text x="13.3416%" y="831.50"></text></g><g><title>at::redispatch::add_ (709 samples, 0.16%)</title><rect x="13.0916%" y="805" width="0.1639%" height="15" fill="rgb(215,43,3)"/><text x="13.3416%" y="815.50"></text></g><g><title>at::(anonymous namespace)::wrapper_add__Tensor (709 samples, 0.16%)</title><rect x="13.0916%" y="789" width="0.1639%" height="15" fill="rgb(238,154,13)"/><text x="13.3416%" y="799.50"></text></g><g><title>at::convolution (866 samples, 0.20%)</title><rect x="13.0916%" y="997" width="0.2002%" height="15" fill="rgb(219,56,2)"/><text x="13.3416%" y="1007.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long)&gt;::call (866 samples, 0.20%)</title><rect x="13.0916%" y="981" width="0.2002%" height="15" fill="rgb(233,0,4)"/><text x="13.3416%" y="991.50"></text></g><g><title>at::native::convolution (866 samples, 0.20%)</title><rect x="13.0916%" y="965" width="0.2002%" height="15" fill="rgb(235,30,7)"/><text x="13.3416%" y="975.50"></text></g><g><title>at::_convolution (866 samples, 0.20%)</title><rect x="13.0916%" y="949" width="0.2002%" height="15" fill="rgb(250,79,13)"/><text x="13.3416%" y="959.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper__convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool)&gt;::call (866 samples, 0.20%)</title><rect x="13.0916%" y="933" width="0.2002%" height="15" fill="rgb(211,146,34)"/><text x="13.3416%" y="943.50"></text></g><g><title>at::native::_convolution (866 samples, 0.20%)</title><rect x="13.0916%" y="917" width="0.2002%" height="15" fill="rgb(228,22,38)"/><text x="13.3416%" y="927.50"></text></g><g><title>at::native::empty_cuda (833 samples, 0.19%)</title><rect x="13.5168%" y="757" width="0.1926%" height="15" fill="rgb(235,168,5)"/><text x="13.7668%" y="767.50"></text></g><g><title>at::empty_like (929 samples, 0.21%)</title><rect x="13.5168%" y="869" width="0.2148%" height="15" fill="rgb(221,155,16)"/><text x="13.7668%" y="879.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_empty_like&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor (at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (929 samples, 0.21%)</title><rect x="13.5168%" y="853" width="0.2148%" height="15" fill="rgb(215,215,53)"/><text x="13.7668%" y="863.50"></text></g><g><title>at::native::empty_like (929 samples, 0.21%)</title><rect x="13.5168%" y="837" width="0.2148%" height="15" fill="rgb(223,4,10)"/><text x="13.7668%" y="847.50"></text></g><g><title>at::empty (929 samples, 0.21%)</title><rect x="13.5168%" y="821" width="0.2148%" height="15" fill="rgb(234,103,6)"/><text x="13.7668%" y="831.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::empty_memory_format&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (929 samples, 0.21%)</title><rect x="13.5168%" y="805" width="0.2148%" height="15" fill="rgb(227,97,0)"/><text x="13.7668%" y="815.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_empty_memory_format&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (929 samples, 0.21%)</title><rect x="13.5168%" y="789" width="0.2148%" height="15" fill="rgb(234,150,53)"/><text x="13.7668%" y="799.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_empty_memory_format (929 samples, 0.21%)</title><rect x="13.5168%" y="773" width="0.2148%" height="15" fill="rgb(228,201,54)"/><text x="13.7668%" y="783.50"></text></g><g><title>at::native::_batch_norm_impl_index (1,185 samples, 0.27%)</title><rect x="13.5168%" y="997" width="0.2740%" height="15" fill="rgb(222,22,37)"/><text x="13.7668%" y="1007.50"></text></g><g><title>at::cudnn_batch_norm (1,185 samples, 0.27%)</title><rect x="13.5168%" y="981" width="0.2740%" height="15" fill="rgb(237,53,32)"/><text x="13.7668%" y="991.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;torch::autograd::VariableType::(anonymous namespace)::cudnn_batch_norm&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (1,185 samples, 0.27%)</title><rect x="13.5168%" y="965" width="0.2740%" height="15" fill="rgb(233,25,53)"/><text x="13.7668%" y="975.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::cudnn_batch_norm (1,185 samples, 0.27%)</title><rect x="13.5168%" y="949" width="0.2740%" height="15" fill="rgb(210,40,34)"/><text x="13.7668%" y="959.50"></text></g><g><title>at::redispatch::cudnn_batch_norm (1,185 samples, 0.27%)</title><rect x="13.5168%" y="933" width="0.2740%" height="15" fill="rgb(241,220,44)"/><text x="13.7668%" y="943.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_cudnn_batch_norm&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (1,185 samples, 0.27%)</title><rect x="13.5168%" y="917" width="0.2740%" height="15" fill="rgb(235,28,35)"/><text x="13.7668%" y="927.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_cudnn_batch_norm (1,185 samples, 0.27%)</title><rect x="13.5168%" y="901" width="0.2740%" height="15" fill="rgb(210,56,17)"/><text x="13.7668%" y="911.50"></text></g><g><title>at::native::cudnn_batch_norm (1,185 samples, 0.27%)</title><rect x="13.5168%" y="885" width="0.2740%" height="15" fill="rgb(224,130,29)"/><text x="13.7668%" y="895.50"></text></g><g><title>at::Tensor::add_ (1,220 samples, 0.28%)</title><rect x="13.8076%" y="981" width="0.2821%" height="15" fill="rgb(235,212,8)"/><text x="14.0576%" y="991.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::add__Tensor&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (1,220 samples, 0.28%)</title><rect x="13.8076%" y="965" width="0.2821%" height="15" fill="rgb(223,33,50)"/><text x="14.0576%" y="975.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add__Tensor (1,220 samples, 0.28%)</title><rect x="13.8076%" y="949" width="0.2821%" height="15" fill="rgb(219,149,13)"/><text x="14.0576%" y="959.50"></text></g><g><title>at::redispatch::add_ (1,220 samples, 0.28%)</title><rect x="13.8076%" y="933" width="0.2821%" height="15" fill="rgb(250,156,29)"/><text x="14.0576%" y="943.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::ADInplaceOrView::(anonymous namespace)::add__Tensor&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (1,220 samples, 0.28%)</title><rect x="13.8076%" y="917" width="0.2821%" height="15" fill="rgb(216,193,19)"/><text x="14.0576%" y="927.50"></text></g><g><title>torch::ADInplaceOrView::(anonymous namespace)::add__Tensor (1,220 samples, 0.28%)</title><rect x="13.8076%" y="901" width="0.2821%" height="15" fill="rgb(216,135,14)"/><text x="14.0576%" y="911.50"></text></g><g><title>at::redispatch::add_ (1,220 samples, 0.28%)</title><rect x="13.8076%" y="885" width="0.2821%" height="15" fill="rgb(241,47,5)"/><text x="14.0576%" y="895.50"></text></g><g><title>at::(anonymous namespace)::wrapper_add__Tensor (1,220 samples, 0.28%)</title><rect x="13.8076%" y="869" width="0.2821%" height="15" fill="rgb(233,42,35)"/><text x="14.0576%" y="879.50"></text></g><g><title>at::native::structured_add_out::impl (1,140 samples, 0.26%)</title><rect x="13.8261%" y="853" width="0.2636%" height="15" fill="rgb(231,13,6)"/><text x="14.0761%" y="863.50"></text></g><g><title>at::native::add_kernel_cuda (1,140 samples, 0.26%)</title><rect x="13.8261%" y="837" width="0.2636%" height="15" fill="rgb(207,181,40)"/><text x="14.0761%" y="847.50"></text></g><g><title>at::native::add_kernel_cuda (1,140 samples, 0.26%)</title><rect x="13.8261%" y="821" width="0.2636%" height="15" fill="rgb(254,173,49)"/><text x="14.0761%" y="831.50"></text></g><g><title>at::native::gpu_kernel_with_scalars&lt;at::native::AddFunctor&lt;float&gt; &gt; (1,140 samples, 0.26%)</title><rect x="13.8261%" y="805" width="0.2636%" height="15" fill="rgb(221,1,38)"/><text x="14.0761%" y="815.50"></text></g><g><title>at::native::gpu_kernel&lt;at::native::AddFunctor&lt;float&gt; &gt; (1,140 samples, 0.26%)</title><rect x="13.8261%" y="789" width="0.2636%" height="15" fill="rgb(206,124,46)"/><text x="14.0761%" y="799.50"></text></g><g><title>at::native::gpu_kernel_impl&lt;at::native::AddFunctor&lt;float&gt; &gt; (1,140 samples, 0.26%)</title><rect x="13.8261%" y="773" width="0.2636%" height="15" fill="rgb(249,21,11)"/><text x="14.0761%" y="783.50"></text></g><g><title>c10::cuda::CUDACachingAllocator::DeviceCachingAllocator::malloc (633 samples, 0.15%)</title><rect x="14.2624%" y="805" width="0.1463%" height="15" fill="rgb(222,201,40)"/><text x="14.5124%" y="815.50"></text></g><g><title>c10::cuda::CUDACachingAllocator::THCCachingAllocator::malloc (785 samples, 0.18%)</title><rect x="14.2284%" y="821" width="0.1815%" height="15" fill="rgb(235,61,29)"/><text x="14.4784%" y="831.50"></text></g><g><title>at::native::empty_cuda (907 samples, 0.21%)</title><rect x="14.2088%" y="853" width="0.2097%" height="15" fill="rgb(219,207,3)"/><text x="14.4588%" y="863.50"></text></g><g><title>c10::cuda::CUDACachingAllocator::CudaCachingAllocator::allocate (822 samples, 0.19%)</title><rect x="14.2284%" y="837" width="0.1900%" height="15" fill="rgb(222,56,46)"/><text x="14.4784%" y="847.50"></text></g><g><title>at::empty (750 samples, 0.17%)</title><rect x="14.5340%" y="789" width="0.1734%" height="15" fill="rgb(239,76,54)"/><text x="14.7840%" y="799.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::empty_memory_format&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (642 samples, 0.15%)</title><rect x="14.5590%" y="773" width="0.1484%" height="15" fill="rgb(231,124,27)"/><text x="14.8090%" y="783.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_empty_memory_format&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (564 samples, 0.13%)</title><rect x="14.5770%" y="757" width="0.1304%" height="15" fill="rgb(249,195,6)"/><text x="14.8270%" y="767.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_empty_memory_format (549 samples, 0.13%)</title><rect x="14.5805%" y="741" width="0.1269%" height="15" fill="rgb(237,174,47)"/><text x="14.8305%" y="751.50"></text></g><g><title>at::native::raw_cudnn_convolution_forward_out_32bit (1,227 samples, 0.28%)</title><rect x="14.5084%" y="805" width="0.2837%" height="15" fill="rgb(206,201,31)"/><text x="14.7584%" y="815.50"></text></g><g><title>at::native::AlgoIterator&lt;cudnnConvolutionFwdAlgoPerf_t&gt;::try_all (1,703 samples, 0.39%)</title><rect x="14.4386%" y="821" width="0.3937%" height="15" fill="rgb(231,57,52)"/><text x="14.6886%" y="831.50"></text></g><g><title>at::cudnn_convolution (4,420 samples, 1.02%)</title><rect x="14.0897%" y="981" width="1.0219%" height="15" fill="rgb(248,177,22)"/><text x="14.3397%" y="991.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool), &amp;torch::autograd::VariableType::(anonymous namespace)::cudnn_convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool&gt; &gt;, at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool)&gt;::call (4,420 samples, 1.02%)</title><rect x="14.0897%" y="965" width="1.0219%" height="15" fill="rgb(215,211,37)"/><text x="14.3397%" y="975.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::cudnn_convolution (4,420 samples, 1.02%)</title><rect x="14.0897%" y="949" width="1.0219%" height="15" fill="rgb(241,128,51)"/><text x="14.3397%" y="959.50"></text></g><g><title>at::redispatch::cudnn_convolution (4,420 samples, 1.02%)</title><rect x="14.0897%" y="933" width="1.0219%" height="15" fill="rgb(227,165,31)"/><text x="14.3397%" y="943.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_cudnn_convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool)&gt;::call (4,420 samples, 1.02%)</title><rect x="14.0897%" y="917" width="1.0219%" height="15" fill="rgb(228,167,24)"/><text x="14.3397%" y="927.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_cudnn_convolution (4,420 samples, 1.02%)</title><rect x="14.0897%" y="901" width="1.0219%" height="15" fill="rgb(228,143,12)"/><text x="14.3397%" y="911.50"></text></g><g><title>at::native::cudnn_convolution (4,420 samples, 1.02%)</title><rect x="14.0897%" y="885" width="1.0219%" height="15" fill="rgb(249,149,8)"/><text x="14.3397%" y="895.50"></text></g><g><title>at::native::cudnn_convolution_forward (4,420 samples, 1.02%)</title><rect x="14.0897%" y="869" width="1.0219%" height="15" fill="rgb(243,35,44)"/><text x="14.3397%" y="879.50"></text></g><g><title>at::native::raw_cudnn_convolution_forward_out (2,998 samples, 0.69%)</title><rect x="14.4185%" y="853" width="0.6931%" height="15" fill="rgb(246,89,9)"/><text x="14.6685%" y="863.50"></text></g><g><title>at::native::raw_cudnn_convolution_forward_out_32bit (2,991 samples, 0.69%)</title><rect x="14.4201%" y="837" width="0.6915%" height="15" fill="rgb(233,213,13)"/><text x="14.6701%" y="847.50"></text></g><g><title>at::native::alias_with_sizes_and_strides&lt;c10::SmallVector&lt;long, 5u&gt; &gt; (962 samples, 0.22%)</title><rect x="15.1185%" y="741" width="0.2224%" height="15" fill="rgb(233,141,41)"/><text x="15.3685%" y="751.50"></text></g><g><title>at::native::_convolution (6,645 samples, 1.54%)</title><rect x="13.8076%" y="997" width="1.5363%" height="15" fill="rgb(239,167,4)"/><text x="14.0576%" y="1007.50"></text></g><g><title>at::native::reshape_bias (1,005 samples, 0.23%)</title><rect x="15.1116%" y="981" width="0.2323%" height="15" fill="rgb(209,217,16)"/><text x="15.3616%" y="991.50"></text></g><g><title>at::Tensor::reshape (1,005 samples, 0.23%)</title><rect x="15.1116%" y="965" width="0.2323%" height="15" fill="rgb(219,88,35)"/><text x="15.3616%" y="975.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_reshape&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ArrayRef&lt;long&gt; &gt; &gt;, at::Tensor (at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;)&gt;::call (1,005 samples, 0.23%)</title><rect x="15.1116%" y="949" width="0.2323%" height="15" fill="rgb(220,193,23)"/><text x="15.3616%" y="959.50"></text></g><g><title>at::native::reshape (1,005 samples, 0.23%)</title><rect x="15.1116%" y="933" width="0.2323%" height="15" fill="rgb(230,90,52)"/><text x="15.3616%" y="943.50"></text></g><g><title>at::Tensor::view (1,005 samples, 0.23%)</title><rect x="15.1116%" y="917" width="0.2323%" height="15" fill="rgb(252,106,19)"/><text x="15.3616%" y="927.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;), &amp;torch::autograd::VariableType::(anonymous namespace)::view&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt; &gt; &gt;, at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;)&gt;::call (1,005 samples, 0.23%)</title><rect x="15.1116%" y="901" width="0.2323%" height="15" fill="rgb(206,74,20)"/><text x="15.3616%" y="911.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::view (1,005 samples, 0.23%)</title><rect x="15.1116%" y="885" width="0.2323%" height="15" fill="rgb(230,138,44)"/><text x="15.3616%" y="895.50"></text></g><g><title>at::redispatch::view (1,005 samples, 0.23%)</title><rect x="15.1116%" y="869" width="0.2323%" height="15" fill="rgb(235,182,43)"/><text x="15.3616%" y="879.50"></text></g><g><title>c10::Dispatcher::redispatch&lt;at::Tensor, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt; &gt; (1,005 samples, 0.23%)</title><rect x="15.1116%" y="853" width="0.2323%" height="15" fill="rgb(242,16,51)"/><text x="15.3616%" y="863.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;), &amp;torch::ADInplaceOrView::(anonymous namespace)::view&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt; &gt; &gt;, at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;)&gt;::call (1,005 samples, 0.23%)</title><rect x="15.1116%" y="837" width="0.2323%" height="15" fill="rgb(248,9,4)"/><text x="15.3616%" y="847.50"></text></g><g><title>torch::ADInplaceOrView::(anonymous namespace)::view (1,005 samples, 0.23%)</title><rect x="15.1116%" y="821" width="0.2323%" height="15" fill="rgb(210,31,22)"/><text x="15.3616%" y="831.50"></text></g><g><title>at::redispatch::view (1,005 samples, 0.23%)</title><rect x="15.1116%" y="805" width="0.2323%" height="15" fill="rgb(239,54,39)"/><text x="15.3616%" y="815.50"></text></g><g><title>c10::Dispatcher::redispatch&lt;at::Tensor, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt; &gt; (1,005 samples, 0.23%)</title><rect x="15.1116%" y="789" width="0.2323%" height="15" fill="rgb(230,99,41)"/><text x="15.3616%" y="799.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_view&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ArrayRef&lt;long&gt; &gt; &gt;, at::Tensor (at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;)&gt;::call (1,005 samples, 0.23%)</title><rect x="15.1116%" y="773" width="0.2323%" height="15" fill="rgb(253,106,12)"/><text x="15.3616%" y="783.50"></text></g><g><title>at::native::view (1,005 samples, 0.23%)</title><rect x="15.1116%" y="757" width="0.2323%" height="15" fill="rgb(213,46,41)"/><text x="15.3616%" y="767.50"></text></g><g><title>[libcuda.so.460.91.03] (472 samples, 0.11%)</title><rect x="15.7050%" y="773" width="0.1091%" height="15" fill="rgb(215,133,35)"/><text x="15.9550%" y="783.50"></text></g><g><title>[libcuda.so.460.91.03] (953 samples, 0.22%)</title><rect x="15.6190%" y="789" width="0.2203%" height="15" fill="rgb(213,28,5)"/><text x="15.8690%" y="799.50"></text></g><g><title>[libcuda.so.460.91.03] (1,862 samples, 0.43%)</title><rect x="15.4389%" y="805" width="0.4305%" height="15" fill="rgb(215,77,49)"/><text x="15.6889%" y="815.50"></text></g><g><title>at::native::add_kernel_cuda (2,410 samples, 0.56%)</title><rect x="15.3439%" y="997" width="0.5572%" height="15" fill="rgb(248,100,22)"/><text x="15.5939%" y="1007.50"></text></g><g><title>at::native::gpu_kernel_with_scalars&lt;at::native::AddFunctor&lt;float&gt; &gt; (2,266 samples, 0.52%)</title><rect x="15.3772%" y="981" width="0.5239%" height="15" fill="rgb(208,67,9)"/><text x="15.6272%" y="991.50"></text></g><g><title>at::native::gpu_kernel&lt;at::native::AddFunctor&lt;float&gt; &gt; (2,266 samples, 0.52%)</title><rect x="15.3772%" y="965" width="0.5239%" height="15" fill="rgb(219,133,21)"/><text x="15.6272%" y="975.50"></text></g><g><title>at::native::gpu_kernel_impl&lt;at::native::AddFunctor&lt;float&gt; &gt; (2,266 samples, 0.52%)</title><rect x="15.3772%" y="949" width="0.5239%" height="15" fill="rgb(246,46,29)"/><text x="15.6272%" y="959.50"></text></g><g><title>cudaLaunchKernel (2,266 samples, 0.52%)</title><rect x="15.3772%" y="933" width="0.5239%" height="15" fill="rgb(246,185,52)"/><text x="15.6272%" y="943.50"></text></g><g><title>[libcudart-6d56b25a.so.11.0] (2,266 samples, 0.52%)</title><rect x="15.3772%" y="917" width="0.5239%" height="15" fill="rgb(252,136,11)"/><text x="15.6272%" y="927.50"></text></g><g><title>cuLaunchKernel (2,266 samples, 0.52%)</title><rect x="15.3772%" y="901" width="0.5239%" height="15" fill="rgb(219,138,53)"/><text x="15.6272%" y="911.50"></text></g><g><title>[libcuda.so.460.91.03] (2,266 samples, 0.52%)</title><rect x="15.3772%" y="885" width="0.5239%" height="15" fill="rgb(211,51,23)"/><text x="15.6272%" y="895.50"></text></g><g><title>[libcuda.so.460.91.03] (2,266 samples, 0.52%)</title><rect x="15.3772%" y="869" width="0.5239%" height="15" fill="rgb(247,221,28)"/><text x="15.6272%" y="879.50"></text></g><g><title>[libcuda.so.460.91.03] (2,266 samples, 0.52%)</title><rect x="15.3772%" y="853" width="0.5239%" height="15" fill="rgb(251,222,45)"/><text x="15.6272%" y="863.50"></text></g><g><title>[libcuda.so.460.91.03] (2,266 samples, 0.52%)</title><rect x="15.3772%" y="837" width="0.5239%" height="15" fill="rgb(217,162,53)"/><text x="15.6272%" y="847.50"></text></g><g><title>[libcuda.so.460.91.03] (2,266 samples, 0.52%)</title><rect x="15.3772%" y="821" width="0.5239%" height="15" fill="rgb(229,93,14)"/><text x="15.6272%" y="831.50"></text></g><g><title>at::native::batch_norm (667 samples, 0.15%)</title><rect x="15.9048%" y="997" width="0.1542%" height="15" fill="rgb(209,67,49)"/><text x="16.1548%" y="1007.50"></text></g><g><title>at::_batch_norm_impl_index (667 samples, 0.15%)</title><rect x="15.9048%" y="981" width="0.1542%" height="15" fill="rgb(213,87,29)"/><text x="16.1548%" y="991.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper__batch_norm_impl_index&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (667 samples, 0.15%)</title><rect x="15.9048%" y="965" width="0.1542%" height="15" fill="rgb(205,151,52)"/><text x="16.1548%" y="975.50"></text></g><g><title>at::native::_batch_norm_impl_index (667 samples, 0.15%)</title><rect x="15.9048%" y="949" width="0.1542%" height="15" fill="rgb(253,215,39)"/><text x="16.1548%" y="959.50"></text></g><g><title>at::cudnn_batch_norm (667 samples, 0.15%)</title><rect x="15.9048%" y="933" width="0.1542%" height="15" fill="rgb(221,220,41)"/><text x="16.1548%" y="943.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;torch::autograd::VariableType::(anonymous namespace)::cudnn_batch_norm&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (667 samples, 0.15%)</title><rect x="15.9048%" y="917" width="0.1542%" height="15" fill="rgb(218,133,21)"/><text x="16.1548%" y="927.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::cudnn_batch_norm (667 samples, 0.15%)</title><rect x="15.9048%" y="901" width="0.1542%" height="15" fill="rgb(221,193,43)"/><text x="16.1548%" y="911.50"></text></g><g><title>at::redispatch::cudnn_batch_norm (667 samples, 0.15%)</title><rect x="15.9048%" y="885" width="0.1542%" height="15" fill="rgb(240,128,52)"/><text x="16.1548%" y="895.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_cudnn_batch_norm&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (667 samples, 0.15%)</title><rect x="15.9048%" y="869" width="0.1542%" height="15" fill="rgb(253,114,12)"/><text x="16.1548%" y="879.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_cudnn_batch_norm (667 samples, 0.15%)</title><rect x="15.9048%" y="853" width="0.1542%" height="15" fill="rgb(215,223,47)"/><text x="16.1548%" y="863.50"></text></g><g><title>at::native::cudnn_batch_norm (667 samples, 0.15%)</title><rect x="15.9048%" y="837" width="0.1542%" height="15" fill="rgb(248,225,23)"/><text x="16.1548%" y="847.50"></text></g><g><title>[libcuda.so.460.91.03] (464 samples, 0.11%)</title><rect x="16.2724%" y="773" width="0.1073%" height="15" fill="rgb(250,108,0)"/><text x="16.5224%" y="783.50"></text></g><g><title>[libcuda.so.460.91.03] (728 samples, 0.17%)</title><rect x="16.2206%" y="789" width="0.1683%" height="15" fill="rgb(228,208,7)"/><text x="16.4706%" y="799.50"></text></g><g><title>[libcuda.so.460.91.03] (1,298 samples, 0.30%)</title><rect x="16.1091%" y="805" width="0.3001%" height="15" fill="rgb(244,45,10)"/><text x="16.3591%" y="815.50"></text></g><g><title>at::native::clamp_min_out (1,618 samples, 0.37%)</title><rect x="16.0611%" y="997" width="0.3741%" height="15" fill="rgb(207,125,25)"/><text x="16.3111%" y="1007.50"></text></g><g><title>at::native::(anonymous namespace)::clamp_min_scalar_kernel_impl (1,617 samples, 0.37%)</title><rect x="16.0613%" y="981" width="0.3738%" height="15" fill="rgb(210,195,18)"/><text x="16.3113%" y="991.50"></text></g><g><title>at::native::gpu_kernel&lt;__nv_hdl_wrapper_t&lt;false, false, __nv_dl_tag&lt;void (*)(at::TensorIterator&amp;, c10::Scalar), &amp;at::native::(anonymous namespace)::clamp_min_scalar_kernel_impl, 4u&gt;, float (float), float&gt; &gt; (1,617 samples, 0.37%)</title><rect x="16.0613%" y="965" width="0.3738%" height="15" fill="rgb(249,80,12)"/><text x="16.3113%" y="975.50"></text></g><g><title>at::native::gpu_kernel_impl&lt;__nv_hdl_wrapper_t&lt;false, false, __nv_dl_tag&lt;void (*)(at::TensorIterator&amp;, c10::Scalar), &amp;at::native::(anonymous namespace)::clamp_min_scalar_kernel_impl, 4u&gt;, float (float), float&gt; &gt; (1,617 samples, 0.37%)</title><rect x="16.0613%" y="949" width="0.3738%" height="15" fill="rgb(221,65,9)"/><text x="16.3113%" y="959.50"></text></g><g><title>cudaLaunchKernel (1,617 samples, 0.37%)</title><rect x="16.0613%" y="933" width="0.3738%" height="15" fill="rgb(235,49,36)"/><text x="16.3113%" y="943.50"></text></g><g><title>[libcudart-6d56b25a.so.11.0] (1,617 samples, 0.37%)</title><rect x="16.0613%" y="917" width="0.3738%" height="15" fill="rgb(225,32,20)"/><text x="16.3113%" y="927.50"></text></g><g><title>cuLaunchKernel (1,617 samples, 0.37%)</title><rect x="16.0613%" y="901" width="0.3738%" height="15" fill="rgb(215,141,46)"/><text x="16.3113%" y="911.50"></text></g><g><title>[libcuda.so.460.91.03] (1,617 samples, 0.37%)</title><rect x="16.0613%" y="885" width="0.3738%" height="15" fill="rgb(250,160,47)"/><text x="16.3113%" y="895.50"></text></g><g><title>[libcuda.so.460.91.03] (1,617 samples, 0.37%)</title><rect x="16.0613%" y="869" width="0.3738%" height="15" fill="rgb(216,222,40)"/><text x="16.3113%" y="879.50"></text></g><g><title>[libcuda.so.460.91.03] (1,617 samples, 0.37%)</title><rect x="16.0613%" y="853" width="0.3738%" height="15" fill="rgb(234,217,39)"/><text x="16.3113%" y="863.50"></text></g><g><title>[libcuda.so.460.91.03] (1,617 samples, 0.37%)</title><rect x="16.0613%" y="837" width="0.3738%" height="15" fill="rgb(207,178,40)"/><text x="16.3113%" y="847.50"></text></g><g><title>[libcuda.so.460.91.03] (1,617 samples, 0.37%)</title><rect x="16.0613%" y="821" width="0.3738%" height="15" fill="rgb(221,136,13)"/><text x="16.3113%" y="831.50"></text></g><g><title>at::meta::add_Tensor::meta (653 samples, 0.15%)</title><rect x="16.4367%" y="757" width="0.1510%" height="15" fill="rgb(249,199,10)"/><text x="16.6867%" y="767.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_binary_op (653 samples, 0.15%)</title><rect x="16.4367%" y="741" width="0.1510%" height="15" fill="rgb(249,222,13)"/><text x="16.6867%" y="751.50"></text></g><g><title>at::TensorIteratorBase::build (653 samples, 0.15%)</title><rect x="16.4367%" y="725" width="0.1510%" height="15" fill="rgb(244,185,38)"/><text x="16.6867%" y="735.50"></text></g><g><title>at::Tensor::add_ (732 samples, 0.17%)</title><rect x="16.4367%" y="885" width="0.1692%" height="15" fill="rgb(236,202,9)"/><text x="16.6867%" y="895.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::add__Tensor&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (732 samples, 0.17%)</title><rect x="16.4367%" y="869" width="0.1692%" height="15" fill="rgb(250,229,37)"/><text x="16.6867%" y="879.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add__Tensor (732 samples, 0.17%)</title><rect x="16.4367%" y="853" width="0.1692%" height="15" fill="rgb(206,174,23)"/><text x="16.6867%" y="863.50"></text></g><g><title>at::redispatch::add_ (732 samples, 0.17%)</title><rect x="16.4367%" y="837" width="0.1692%" height="15" fill="rgb(211,33,43)"/><text x="16.6867%" y="847.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::ADInplaceOrView::(anonymous namespace)::add__Tensor&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (732 samples, 0.17%)</title><rect x="16.4367%" y="821" width="0.1692%" height="15" fill="rgb(245,58,50)"/><text x="16.6867%" y="831.50"></text></g><g><title>torch::ADInplaceOrView::(anonymous namespace)::add__Tensor (732 samples, 0.17%)</title><rect x="16.4367%" y="805" width="0.1692%" height="15" fill="rgb(244,68,36)"/><text x="16.6867%" y="815.50"></text></g><g><title>at::redispatch::add_ (732 samples, 0.17%)</title><rect x="16.4367%" y="789" width="0.1692%" height="15" fill="rgb(232,229,15)"/><text x="16.6867%" y="799.50"></text></g><g><title>at::(anonymous namespace)::wrapper_add__Tensor (732 samples, 0.17%)</title><rect x="16.4367%" y="773" width="0.1692%" height="15" fill="rgb(254,30,23)"/><text x="16.6867%" y="783.50"></text></g><g><title>at::native::conv2d (921 samples, 0.21%)</title><rect x="16.4356%" y="997" width="0.2129%" height="15" fill="rgb(235,160,14)"/><text x="16.6856%" y="1007.50"></text></g><g><title>at::convolution (916 samples, 0.21%)</title><rect x="16.4367%" y="981" width="0.2118%" height="15" fill="rgb(212,155,44)"/><text x="16.6867%" y="991.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long)&gt;::call (916 samples, 0.21%)</title><rect x="16.4367%" y="965" width="0.2118%" height="15" fill="rgb(226,2,50)"/><text x="16.6867%" y="975.50"></text></g><g><title>at::native::convolution (916 samples, 0.21%)</title><rect x="16.4367%" y="949" width="0.2118%" height="15" fill="rgb(234,177,6)"/><text x="16.6867%" y="959.50"></text></g><g><title>at::_convolution (916 samples, 0.21%)</title><rect x="16.4367%" y="933" width="0.2118%" height="15" fill="rgb(217,24,9)"/><text x="16.6867%" y="943.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper__convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool)&gt;::call (916 samples, 0.21%)</title><rect x="16.4367%" y="917" width="0.2118%" height="15" fill="rgb(220,13,46)"/><text x="16.6867%" y="927.50"></text></g><g><title>at::native::_convolution (916 samples, 0.21%)</title><rect x="16.4367%" y="901" width="0.2118%" height="15" fill="rgb(239,221,27)"/><text x="16.6867%" y="911.50"></text></g><g><title>at::native::cudnn_convolution (634 samples, 0.15%)</title><rect x="16.7093%" y="837" width="0.1466%" height="15" fill="rgb(222,198,25)"/><text x="16.9593%" y="847.50"></text></g><g><title>at::native::cudnn_convolution_forward (634 samples, 0.15%)</title><rect x="16.7093%" y="821" width="0.1466%" height="15" fill="rgb(211,99,13)"/><text x="16.9593%" y="831.50"></text></g><g><title>at::cudnn_convolution (762 samples, 0.18%)</title><rect x="16.7093%" y="933" width="0.1762%" height="15" fill="rgb(232,111,31)"/><text x="16.9593%" y="943.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool), &amp;torch::autograd::VariableType::(anonymous namespace)::cudnn_convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool&gt; &gt;, at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool)&gt;::call (762 samples, 0.18%)</title><rect x="16.7093%" y="917" width="0.1762%" height="15" fill="rgb(245,82,37)"/><text x="16.9593%" y="927.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::cudnn_convolution (762 samples, 0.18%)</title><rect x="16.7093%" y="901" width="0.1762%" height="15" fill="rgb(227,149,46)"/><text x="16.9593%" y="911.50"></text></g><g><title>at::redispatch::cudnn_convolution (762 samples, 0.18%)</title><rect x="16.7093%" y="885" width="0.1762%" height="15" fill="rgb(218,36,50)"/><text x="16.9593%" y="895.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_cudnn_convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool)&gt;::call (762 samples, 0.18%)</title><rect x="16.7093%" y="869" width="0.1762%" height="15" fill="rgb(226,80,48)"/><text x="16.9593%" y="879.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_cudnn_convolution (762 samples, 0.18%)</title><rect x="16.7093%" y="853" width="0.1762%" height="15" fill="rgb(238,224,15)"/><text x="16.9593%" y="863.50"></text></g><g><title>at::native::convolution (1,097 samples, 0.25%)</title><rect x="16.6485%" y="997" width="0.2536%" height="15" fill="rgb(241,136,10)"/><text x="16.8985%" y="1007.50"></text></g><g><title>at::_convolution (1,097 samples, 0.25%)</title><rect x="16.6485%" y="981" width="0.2536%" height="15" fill="rgb(208,32,45)"/><text x="16.8985%" y="991.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper__convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool)&gt;::call (1,097 samples, 0.25%)</title><rect x="16.6485%" y="965" width="0.2536%" height="15" fill="rgb(207,135,9)"/><text x="16.8985%" y="975.50"></text></g><g><title>at::native::_convolution (1,097 samples, 0.25%)</title><rect x="16.6485%" y="949" width="0.2536%" height="15" fill="rgb(206,86,44)"/><text x="16.8985%" y="959.50"></text></g><g><title>[libcuda.so.460.91.03] (497 samples, 0.11%)</title><rect x="16.9530%" y="821" width="0.1149%" height="15" fill="rgb(245,177,15)"/><text x="17.2030%" y="831.50"></text></g><g><title>[libcuda.so.460.91.03] (660 samples, 0.15%)</title><rect x="16.9313%" y="837" width="0.1526%" height="15" fill="rgb(206,64,50)"/><text x="17.1813%" y="847.50"></text></g><g><title>at::native::gpu_kernel&lt;__nv_hdl_wrapper_t&lt;false, true, __nv_dl_tag&lt;void (*)(at::TensorIterator&amp;, bool), &amp;at::native::copy_device_to_device, 6u&gt;, double (double)&gt; &gt; (759 samples, 0.18%)</title><rect x="16.9086%" y="981" width="0.1755%" height="15" fill="rgb(234,36,40)"/><text x="17.1586%" y="991.50"></text></g><g><title>at::native::gpu_kernel_impl&lt;__nv_hdl_wrapper_t&lt;false, true, __nv_dl_tag&lt;void (*)(at::TensorIterator&amp;, bool), &amp;at::native::copy_device_to_device, 6u&gt;, double (double)&gt; &gt; (759 samples, 0.18%)</title><rect x="16.9086%" y="965" width="0.1755%" height="15" fill="rgb(213,64,8)"/><text x="17.1586%" y="975.50"></text></g><g><title>cudaLaunchKernel (759 samples, 0.18%)</title><rect x="16.9086%" y="949" width="0.1755%" height="15" fill="rgb(210,75,36)"/><text x="17.1586%" y="959.50"></text></g><g><title>[libcudart-6d56b25a.so.11.0] (759 samples, 0.18%)</title><rect x="16.9086%" y="933" width="0.1755%" height="15" fill="rgb(229,88,21)"/><text x="17.1586%" y="943.50"></text></g><g><title>cuLaunchKernel (759 samples, 0.18%)</title><rect x="16.9086%" y="917" width="0.1755%" height="15" fill="rgb(252,204,47)"/><text x="17.1586%" y="927.50"></text></g><g><title>[libcuda.so.460.91.03] (759 samples, 0.18%)</title><rect x="16.9086%" y="901" width="0.1755%" height="15" fill="rgb(208,77,27)"/><text x="17.1586%" y="911.50"></text></g><g><title>[libcuda.so.460.91.03] (759 samples, 0.18%)</title><rect x="16.9086%" y="885" width="0.1755%" height="15" fill="rgb(221,76,26)"/><text x="17.1586%" y="895.50"></text></g><g><title>[libcuda.so.460.91.03] (759 samples, 0.18%)</title><rect x="16.9086%" y="869" width="0.1755%" height="15" fill="rgb(225,139,18)"/><text x="17.1586%" y="879.50"></text></g><g><title>[libcuda.so.460.91.03] (759 samples, 0.18%)</title><rect x="16.9086%" y="853" width="0.1755%" height="15" fill="rgb(230,137,11)"/><text x="17.1586%" y="863.50"></text></g><g><title>at::native::copy_device_to_device (808 samples, 0.19%)</title><rect x="16.9086%" y="997" width="0.1868%" height="15" fill="rgb(212,28,1)"/><text x="17.1586%" y="1007.50"></text></g><g><title>at::native::copy_impl (853 samples, 0.20%)</title><rect x="17.0954%" y="997" width="0.1972%" height="15" fill="rgb(248,164,17)"/><text x="17.3454%" y="1007.50"></text></g><g><title>at::native::copy_kernel_cuda (848 samples, 0.20%)</title><rect x="17.0966%" y="981" width="0.1960%" height="15" fill="rgb(222,171,42)"/><text x="17.3466%" y="991.50"></text></g><g><title>cudaMemcpyAsync (494 samples, 0.11%)</title><rect x="17.1784%" y="965" width="0.1142%" height="15" fill="rgb(243,84,45)"/><text x="17.4284%" y="975.50"></text></g><g><title>[libcudart-6d56b25a.so.11.0] (494 samples, 0.11%)</title><rect x="17.1784%" y="949" width="0.1142%" height="15" fill="rgb(252,49,23)"/><text x="17.4284%" y="959.50"></text></g><g><title>[libcudart-6d56b25a.so.11.0] (494 samples, 0.11%)</title><rect x="17.1784%" y="933" width="0.1142%" height="15" fill="rgb(215,19,7)"/><text x="17.4284%" y="943.50"></text></g><g><title>cuMemcpyDtoHAsync_v2 (494 samples, 0.11%)</title><rect x="17.1784%" y="917" width="0.1142%" height="15" fill="rgb(238,81,41)"/><text x="17.4284%" y="927.50"></text></g><g><title>[libcuda.so.460.91.03] (494 samples, 0.11%)</title><rect x="17.1784%" y="901" width="0.1142%" height="15" fill="rgb(210,199,37)"/><text x="17.4284%" y="911.50"></text></g><g><title>[libcuda.so.460.91.03] (494 samples, 0.11%)</title><rect x="17.1784%" y="885" width="0.1142%" height="15" fill="rgb(244,192,49)"/><text x="17.4284%" y="895.50"></text></g><g><title>[libcuda.so.460.91.03] (494 samples, 0.11%)</title><rect x="17.1784%" y="869" width="0.1142%" height="15" fill="rgb(226,211,11)"/><text x="17.4284%" y="879.50"></text></g><g><title>[libcuda.so.460.91.03] (494 samples, 0.11%)</title><rect x="17.1784%" y="853" width="0.1142%" height="15" fill="rgb(236,162,54)"/><text x="17.4284%" y="863.50"></text></g><g><title>[libcuda.so.460.91.03] (494 samples, 0.11%)</title><rect x="17.1784%" y="837" width="0.1142%" height="15" fill="rgb(220,229,9)"/><text x="17.4284%" y="847.50"></text></g><g><title>[libcuda.so.460.91.03] (494 samples, 0.11%)</title><rect x="17.1784%" y="821" width="0.1142%" height="15" fill="rgb(250,87,22)"/><text x="17.4284%" y="831.50"></text></g><g><title>at::checkAllSameType (552 samples, 0.13%)</title><rect x="17.5800%" y="773" width="0.1276%" height="15" fill="rgb(239,43,17)"/><text x="17.8300%" y="783.50"></text></g><g><title>at::checkSameType (552 samples, 0.13%)</title><rect x="17.5800%" y="757" width="0.1276%" height="15" fill="rgb(231,177,25)"/><text x="17.8300%" y="767.50"></text></g><g><title>atg_batch_norm (744 samples, 0.17%)</title><rect x="17.5791%" y="997" width="0.1720%" height="15" fill="rgb(219,179,1)"/><text x="17.8291%" y="1007.50"></text></g><g><title>at::batch_norm (740 samples, 0.17%)</title><rect x="17.5800%" y="981" width="0.1711%" height="15" fill="rgb(238,219,53)"/><text x="17.8300%" y="991.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_batch_norm&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, at::Tensor (at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (740 samples, 0.17%)</title><rect x="17.5800%" y="965" width="0.1711%" height="15" fill="rgb(232,167,36)"/><text x="17.8300%" y="975.50"></text></g><g><title>at::native::batch_norm (740 samples, 0.17%)</title><rect x="17.5800%" y="949" width="0.1711%" height="15" fill="rgb(244,19,51)"/><text x="17.8300%" y="959.50"></text></g><g><title>at::_batch_norm_impl_index (740 samples, 0.17%)</title><rect x="17.5800%" y="933" width="0.1711%" height="15" fill="rgb(224,6,22)"/><text x="17.8300%" y="943.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper__batch_norm_impl_index&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (740 samples, 0.17%)</title><rect x="17.5800%" y="917" width="0.1711%" height="15" fill="rgb(224,145,5)"/><text x="17.8300%" y="927.50"></text></g><g><title>at::native::_batch_norm_impl_index (740 samples, 0.17%)</title><rect x="17.5800%" y="901" width="0.1711%" height="15" fill="rgb(234,130,49)"/><text x="17.8300%" y="911.50"></text></g><g><title>at::cudnn_batch_norm (740 samples, 0.17%)</title><rect x="17.5800%" y="885" width="0.1711%" height="15" fill="rgb(254,6,2)"/><text x="17.8300%" y="895.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;torch::autograd::VariableType::(anonymous namespace)::cudnn_batch_norm&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (740 samples, 0.17%)</title><rect x="17.5800%" y="869" width="0.1711%" height="15" fill="rgb(208,96,46)"/><text x="17.8300%" y="879.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::cudnn_batch_norm (740 samples, 0.17%)</title><rect x="17.5800%" y="853" width="0.1711%" height="15" fill="rgb(239,3,39)"/><text x="17.8300%" y="863.50"></text></g><g><title>at::redispatch::cudnn_batch_norm (740 samples, 0.17%)</title><rect x="17.5800%" y="837" width="0.1711%" height="15" fill="rgb(233,210,1)"/><text x="17.8300%" y="847.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_cudnn_batch_norm&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (740 samples, 0.17%)</title><rect x="17.5800%" y="821" width="0.1711%" height="15" fill="rgb(244,137,37)"/><text x="17.8300%" y="831.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_cudnn_batch_norm (740 samples, 0.17%)</title><rect x="17.5800%" y="805" width="0.1711%" height="15" fill="rgb(240,136,2)"/><text x="17.8300%" y="815.50"></text></g><g><title>at::native::cudnn_batch_norm (740 samples, 0.17%)</title><rect x="17.5800%" y="789" width="0.1711%" height="15" fill="rgb(239,18,37)"/><text x="17.8300%" y="799.50"></text></g><g><title>at::cudnn_convolution (581 samples, 0.13%)</title><rect x="17.8429%" y="837" width="0.1343%" height="15" fill="rgb(218,185,22)"/><text x="18.0929%" y="847.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool), &amp;torch::autograd::VariableType::(anonymous namespace)::cudnn_convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool&gt; &gt;, at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool)&gt;::call (581 samples, 0.13%)</title><rect x="17.8429%" y="821" width="0.1343%" height="15" fill="rgb(225,218,4)"/><text x="18.0929%" y="831.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::cudnn_convolution (581 samples, 0.13%)</title><rect x="17.8429%" y="805" width="0.1343%" height="15" fill="rgb(230,182,32)"/><text x="18.0929%" y="815.50"></text></g><g><title>atg_conv2d (2,058 samples, 0.48%)</title><rect x="17.7511%" y="997" width="0.4758%" height="15" fill="rgb(242,56,43)"/><text x="18.0011%" y="1007.50"></text></g><g><title>at::conv2d (2,058 samples, 0.48%)</title><rect x="17.7511%" y="981" width="0.4758%" height="15" fill="rgb(233,99,24)"/><text x="18.0011%" y="991.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_conv2d&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long)&gt;::call (2,058 samples, 0.48%)</title><rect x="17.7511%" y="965" width="0.4758%" height="15" fill="rgb(234,209,42)"/><text x="18.0011%" y="975.50"></text></g><g><title>at::native::conv2d (2,058 samples, 0.48%)</title><rect x="17.7511%" y="949" width="0.4758%" height="15" fill="rgb(227,7,12)"/><text x="18.0011%" y="959.50"></text></g><g><title>at::convolution (2,058 samples, 0.48%)</title><rect x="17.7511%" y="933" width="0.4758%" height="15" fill="rgb(245,203,43)"/><text x="18.0011%" y="943.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long)&gt;::call (2,058 samples, 0.48%)</title><rect x="17.7511%" y="917" width="0.4758%" height="15" fill="rgb(238,205,33)"/><text x="18.0011%" y="927.50"></text></g><g><title>at::native::convolution (2,058 samples, 0.48%)</title><rect x="17.7511%" y="901" width="0.4758%" height="15" fill="rgb(231,56,7)"/><text x="18.0011%" y="911.50"></text></g><g><title>at::_convolution (2,058 samples, 0.48%)</title><rect x="17.7511%" y="885" width="0.4758%" height="15" fill="rgb(244,186,29)"/><text x="18.0011%" y="895.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper__convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool)&gt;::call (2,058 samples, 0.48%)</title><rect x="17.7511%" y="869" width="0.4758%" height="15" fill="rgb(234,111,31)"/><text x="18.0011%" y="879.50"></text></g><g><title>at::native::_convolution (2,058 samples, 0.48%)</title><rect x="17.7511%" y="853" width="0.4758%" height="15" fill="rgb(241,149,10)"/><text x="18.0011%" y="863.50"></text></g><g><title>at::native::reshape_bias (1,080 samples, 0.25%)</title><rect x="17.9772%" y="837" width="0.2497%" height="15" fill="rgb(249,206,44)"/><text x="18.2272%" y="847.50"></text></g><g><title>at::Tensor::reshape (1,080 samples, 0.25%)</title><rect x="17.9772%" y="821" width="0.2497%" height="15" fill="rgb(251,153,30)"/><text x="18.2272%" y="831.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_reshape&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ArrayRef&lt;long&gt; &gt; &gt;, at::Tensor (at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;)&gt;::call (1,080 samples, 0.25%)</title><rect x="17.9772%" y="805" width="0.2497%" height="15" fill="rgb(239,152,38)"/><text x="18.2272%" y="815.50"></text></g><g><title>at::native::reshape (1,080 samples, 0.25%)</title><rect x="17.9772%" y="789" width="0.2497%" height="15" fill="rgb(249,139,47)"/><text x="18.2272%" y="799.50"></text></g><g><title>at::Tensor::view (1,080 samples, 0.25%)</title><rect x="17.9772%" y="773" width="0.2497%" height="15" fill="rgb(244,64,35)"/><text x="18.2272%" y="783.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;), &amp;torch::autograd::VariableType::(anonymous namespace)::view&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt; &gt; &gt;, at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;)&gt;::call (1,080 samples, 0.25%)</title><rect x="17.9772%" y="757" width="0.2497%" height="15" fill="rgb(216,46,15)"/><text x="18.2272%" y="767.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::view (1,080 samples, 0.25%)</title><rect x="17.9772%" y="741" width="0.2497%" height="15" fill="rgb(250,74,19)"/><text x="18.2272%" y="751.50"></text></g><g><title>at::native::cudnn_convolution_forward (1,087 samples, 0.25%)</title><rect x="18.5924%" y="805" width="0.2513%" height="15" fill="rgb(249,42,33)"/><text x="18.8424%" y="815.50"></text></g><g><title>at::native::cudnn_convolution (1,091 samples, 0.25%)</title><rect x="18.5921%" y="821" width="0.2522%" height="15" fill="rgb(242,149,17)"/><text x="18.8421%" y="831.50"></text></g><g><title>at::cudnn_convolution (1,107 samples, 0.26%)</title><rect x="18.5921%" y="917" width="0.2559%" height="15" fill="rgb(244,29,21)"/><text x="18.8421%" y="927.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool), &amp;torch::autograd::VariableType::(anonymous namespace)::cudnn_convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool&gt; &gt;, at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool)&gt;::call (1,107 samples, 0.26%)</title><rect x="18.5921%" y="901" width="0.2559%" height="15" fill="rgb(220,130,37)"/><text x="18.8421%" y="911.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::cudnn_convolution (1,107 samples, 0.26%)</title><rect x="18.5921%" y="885" width="0.2559%" height="15" fill="rgb(211,67,2)"/><text x="18.8421%" y="895.50"></text></g><g><title>at::redispatch::cudnn_convolution (1,107 samples, 0.26%)</title><rect x="18.5921%" y="869" width="0.2559%" height="15" fill="rgb(235,68,52)"/><text x="18.8421%" y="879.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_cudnn_convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool)&gt;::call (1,107 samples, 0.26%)</title><rect x="18.5921%" y="853" width="0.2559%" height="15" fill="rgb(246,142,3)"/><text x="18.8421%" y="863.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_cudnn_convolution (1,107 samples, 0.26%)</title><rect x="18.5921%" y="837" width="0.2559%" height="15" fill="rgb(241,25,7)"/><text x="18.8421%" y="847.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long)&gt;::call (1,581 samples, 0.37%)</title><rect x="18.5027%" y="997" width="0.3655%" height="15" fill="rgb(242,119,39)"/><text x="18.7527%" y="1007.50"></text></g><g><title>at::native::convolution (1,581 samples, 0.37%)</title><rect x="18.5027%" y="981" width="0.3655%" height="15" fill="rgb(241,98,45)"/><text x="18.7527%" y="991.50"></text></g><g><title>at::_convolution (1,581 samples, 0.37%)</title><rect x="18.5027%" y="965" width="0.3655%" height="15" fill="rgb(254,28,30)"/><text x="18.7527%" y="975.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper__convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool)&gt;::call (1,581 samples, 0.37%)</title><rect x="18.5027%" y="949" width="0.3655%" height="15" fill="rgb(241,142,54)"/><text x="18.7527%" y="959.50"></text></g><g><title>at::native::_convolution (1,581 samples, 0.37%)</title><rect x="18.5027%" y="933" width="0.3655%" height="15" fill="rgb(222,85,15)"/><text x="18.7527%" y="943.50"></text></g><g><title>at::TensorIteratorBase::build (445 samples, 0.10%)</title><rect x="18.9285%" y="709" width="0.1029%" height="15" fill="rgb(210,85,47)"/><text x="19.1785%" y="719.50"></text></g><g><title>at::Tensor::add_ (462 samples, 0.11%)</title><rect x="18.9285%" y="869" width="0.1068%" height="15" fill="rgb(224,206,25)"/><text x="19.1785%" y="879.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::add__Tensor&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (462 samples, 0.11%)</title><rect x="18.9285%" y="853" width="0.1068%" height="15" fill="rgb(243,201,19)"/><text x="19.1785%" y="863.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add__Tensor (462 samples, 0.11%)</title><rect x="18.9285%" y="837" width="0.1068%" height="15" fill="rgb(236,59,4)"/><text x="19.1785%" y="847.50"></text></g><g><title>at::redispatch::add_ (462 samples, 0.11%)</title><rect x="18.9285%" y="821" width="0.1068%" height="15" fill="rgb(254,179,45)"/><text x="19.1785%" y="831.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::ADInplaceOrView::(anonymous namespace)::add__Tensor&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (462 samples, 0.11%)</title><rect x="18.9285%" y="805" width="0.1068%" height="15" fill="rgb(226,14,10)"/><text x="19.1785%" y="815.50"></text></g><g><title>torch::ADInplaceOrView::(anonymous namespace)::add__Tensor (462 samples, 0.11%)</title><rect x="18.9285%" y="789" width="0.1068%" height="15" fill="rgb(244,27,41)"/><text x="19.1785%" y="799.50"></text></g><g><title>at::redispatch::add_ (462 samples, 0.11%)</title><rect x="18.9285%" y="773" width="0.1068%" height="15" fill="rgb(235,35,32)"/><text x="19.1785%" y="783.50"></text></g><g><title>at::(anonymous namespace)::wrapper_add__Tensor (462 samples, 0.11%)</title><rect x="18.9285%" y="757" width="0.1068%" height="15" fill="rgb(218,68,31)"/><text x="19.1785%" y="767.50"></text></g><g><title>at::meta::add_Tensor::meta (462 samples, 0.11%)</title><rect x="18.9285%" y="741" width="0.1068%" height="15" fill="rgb(207,120,37)"/><text x="19.1785%" y="751.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_binary_op (462 samples, 0.11%)</title><rect x="18.9285%" y="725" width="0.1068%" height="15" fill="rgb(227,98,0)"/><text x="19.1785%" y="735.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_conv2d&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long)&gt;::call (757 samples, 0.18%)</title><rect x="18.9260%" y="997" width="0.1750%" height="15" fill="rgb(207,7,3)"/><text x="19.1760%" y="1007.50"></text></g><g><title>at::native::conv2d (746 samples, 0.17%)</title><rect x="18.9285%" y="981" width="0.1725%" height="15" fill="rgb(206,98,19)"/><text x="19.1785%" y="991.50"></text></g><g><title>at::convolution (746 samples, 0.17%)</title><rect x="18.9285%" y="965" width="0.1725%" height="15" fill="rgb(217,5,26)"/><text x="19.1785%" y="975.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long)&gt;::call (746 samples, 0.17%)</title><rect x="18.9285%" y="949" width="0.1725%" height="15" fill="rgb(235,190,38)"/><text x="19.1785%" y="959.50"></text></g><g><title>at::native::convolution (746 samples, 0.17%)</title><rect x="18.9285%" y="933" width="0.1725%" height="15" fill="rgb(247,86,24)"/><text x="19.1785%" y="943.50"></text></g><g><title>at::_convolution (746 samples, 0.17%)</title><rect x="18.9285%" y="917" width="0.1725%" height="15" fill="rgb(205,101,16)"/><text x="19.1785%" y="927.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper__convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool)&gt;::call (746 samples, 0.17%)</title><rect x="18.9285%" y="901" width="0.1725%" height="15" fill="rgb(246,168,33)"/><text x="19.1785%" y="911.50"></text></g><g><title>at::native::_convolution (746 samples, 0.17%)</title><rect x="18.9285%" y="885" width="0.1725%" height="15" fill="rgb(231,114,1)"/><text x="19.1785%" y="895.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool), &amp;torch::ADInplaceOrView::copy_&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool)&gt;::call (3,922 samples, 0.91%)</title><rect x="19.2365%" y="997" width="0.9067%" height="15" fill="rgb(207,184,53)"/><text x="19.4865%" y="1007.50"></text></g><g><title>torch::ADInplaceOrView::copy_ (3,920 samples, 0.91%)</title><rect x="19.2369%" y="981" width="0.9063%" height="15" fill="rgb(224,95,51)"/><text x="19.4869%" y="991.50"></text></g><g><title>at::redispatch::copy_ (3,920 samples, 0.91%)</title><rect x="19.2369%" y="965" width="0.9063%" height="15" fill="rgb(212,188,45)"/><text x="19.4869%" y="975.50"></text></g><g><title>at::native::copy_ (3,920 samples, 0.91%)</title><rect x="19.2369%" y="949" width="0.9063%" height="15" fill="rgb(223,154,38)"/><text x="19.4869%" y="959.50"></text></g><g><title>at::native::copy_impl (3,920 samples, 0.91%)</title><rect x="19.2369%" y="933" width="0.9063%" height="15" fill="rgb(251,22,52)"/><text x="19.4869%" y="943.50"></text></g><g><title>at::native::copy_kernel_cuda (3,920 samples, 0.91%)</title><rect x="19.2369%" y="917" width="0.9063%" height="15" fill="rgb(229,209,22)"/><text x="19.4869%" y="927.50"></text></g><g><title>cudaMemcpyAsync (3,836 samples, 0.89%)</title><rect x="19.2564%" y="901" width="0.8868%" height="15" fill="rgb(234,138,34)"/><text x="19.5064%" y="911.50"></text></g><g><title>[libcudart-6d56b25a.so.11.0] (3,836 samples, 0.89%)</title><rect x="19.2564%" y="885" width="0.8868%" height="15" fill="rgb(212,95,11)"/><text x="19.5064%" y="895.50"></text></g><g><title>[libcudart-6d56b25a.so.11.0] (3,836 samples, 0.89%)</title><rect x="19.2564%" y="869" width="0.8868%" height="15" fill="rgb(240,179,47)"/><text x="19.5064%" y="879.50"></text></g><g><title>cuMemcpyDtoHAsync_v2 (3,836 samples, 0.89%)</title><rect x="19.2564%" y="853" width="0.8868%" height="15" fill="rgb(240,163,11)"/><text x="19.5064%" y="863.50"></text></g><g><title>[libcuda.so.460.91.03] (3,836 samples, 0.89%)</title><rect x="19.2564%" y="837" width="0.8868%" height="15" fill="rgb(236,37,12)"/><text x="19.5064%" y="847.50"></text></g><g><title>[libcuda.so.460.91.03] (3,836 samples, 0.89%)</title><rect x="19.2564%" y="821" width="0.8868%" height="15" fill="rgb(232,164,16)"/><text x="19.5064%" y="831.50"></text></g><g><title>[libcuda.so.460.91.03] (3,836 samples, 0.89%)</title><rect x="19.2564%" y="805" width="0.8868%" height="15" fill="rgb(244,205,15)"/><text x="19.5064%" y="815.50"></text></g><g><title>[libcuda.so.460.91.03] (3,836 samples, 0.89%)</title><rect x="19.2564%" y="789" width="0.8868%" height="15" fill="rgb(223,117,47)"/><text x="19.5064%" y="799.50"></text></g><g><title>[libcuda.so.460.91.03] (3,836 samples, 0.89%)</title><rect x="19.2564%" y="773" width="0.8868%" height="15" fill="rgb(244,107,35)"/><text x="19.5064%" y="783.50"></text></g><g><title>[libcuda.so.460.91.03] (3,836 samples, 0.89%)</title><rect x="19.2564%" y="757" width="0.8868%" height="15" fill="rgb(205,140,8)"/><text x="19.5064%" y="767.50"></text></g><g><title>[libcuda.so.460.91.03] (3,836 samples, 0.89%)</title><rect x="19.2564%" y="741" width="0.8868%" height="15" fill="rgb(228,84,46)"/><text x="19.5064%" y="751.50"></text></g><g><title>[libcuda.so.460.91.03] (3,836 samples, 0.89%)</title><rect x="19.2564%" y="725" width="0.8868%" height="15" fill="rgb(254,188,9)"/><text x="19.5064%" y="735.50"></text></g><g><title>[libcuda.so.460.91.03] (3,836 samples, 0.89%)</title><rect x="19.2564%" y="709" width="0.8868%" height="15" fill="rgb(206,112,54)"/><text x="19.5064%" y="719.50"></text></g><g><title>[libcuda.so.460.91.03] (3,836 samples, 0.89%)</title><rect x="19.2564%" y="693" width="0.8868%" height="15" fill="rgb(216,84,49)"/><text x="19.5064%" y="703.50"></text></g><g><title>[libcuda.so.460.91.03] (3,836 samples, 0.89%)</title><rect x="19.2564%" y="677" width="0.8868%" height="15" fill="rgb(214,194,35)"/><text x="19.5064%" y="687.50"></text></g><g><title>[libcuda.so.460.91.03] (3,836 samples, 0.89%)</title><rect x="19.2564%" y="661" width="0.8868%" height="15" fill="rgb(249,28,3)"/><text x="19.5064%" y="671.50"></text></g><g><title>core::fmt::Formatter::debug_lower_hex (622 samples, 0.14%)</title><rect x="20.2156%" y="997" width="0.1438%" height="15" fill="rgb(222,56,52)"/><text x="20.4656%" y="1007.50"></text></g><g><title>core::fmt::Formatter::debug_upper_hex (826 samples, 0.19%)</title><rect x="20.3601%" y="997" width="0.1910%" height="15" fill="rgb(245,217,50)"/><text x="20.6101%" y="1007.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1,285 samples, 0.30%)</title><rect x="20.6058%" y="997" width="0.2971%" height="15" fill="rgb(213,201,24)"/><text x="20.8558%" y="1007.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (1,608 samples, 0.37%)</title><rect x="20.9029%" y="997" width="0.3718%" height="15" fill="rgb(248,116,28)"/><text x="21.1529%" y="1007.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1,205 samples, 0.28%)</title><rect x="20.9961%" y="981" width="0.2786%" height="15" fill="rgb(219,72,43)"/><text x="21.2461%" y="991.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (1,205 samples, 0.28%)</title><rect x="20.9961%" y="965" width="0.2786%" height="15" fill="rgb(209,138,14)"/><text x="21.2461%" y="975.50"></text></g><g><title>core::fmt::Formatter::write_str (1,205 samples, 0.28%)</title><rect x="20.9961%" y="949" width="0.2786%" height="15" fill="rgb(222,18,33)"/><text x="21.2461%" y="959.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u16&gt;::fmt (1,146 samples, 0.26%)</title><rect x="21.3343%" y="997" width="0.2649%" height="15" fill="rgb(213,199,7)"/><text x="21.5843%" y="1007.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (511 samples, 0.12%)</title><rect x="21.4811%" y="981" width="0.1181%" height="15" fill="rgb(250,110,10)"/><text x="21.7311%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (4,004 samples, 0.93%)</title><rect x="21.6397%" y="997" width="0.9257%" height="15" fill="rgb(248,123,6)"/><text x="21.8897%" y="1007.50"></text></g><g><title>cudnn::cnn::AutoTransformationExecutor::AutoTransformationExecutor (677 samples, 0.16%)</title><rect x="22.7459%" y="933" width="0.1565%" height="15" fill="rgb(206,91,31)"/><text x="22.9959%" y="943.50"></text></g><g><title>cudnn::backend::infer::initializeBuffer (1,649 samples, 0.38%)</title><rect x="22.7106%" y="965" width="0.3812%" height="15" fill="rgb(211,154,13)"/><text x="22.9606%" y="975.50"></text></g><g><title>cudnn::cnn::GeneralizedConvolutionEngine&lt;cudnn::cnn::EngineContainer&lt;(cudnnBackendEngineName_t)28, 4096ul&gt; &gt;::GeneralizedConvolutionEngine (1,502 samples, 0.35%)</title><rect x="22.7446%" y="949" width="0.3472%" height="15" fill="rgb(225,148,7)"/><text x="22.9946%" y="959.50"></text></g><g><title>cudnn::backend::Engine::instantiateEngine (1,841 samples, 0.43%)</title><rect x="22.6847%" y="981" width="0.4256%" height="15" fill="rgb(220,160,43)"/><text x="22.9347%" y="991.50"></text></g><g><title>cudnn::cnn::GeneralizedConvolutionEngine&lt;cudnn::cnn::EngineContainer&lt;(cudnnBackendEngineName_t)28, 4096ul&gt; &gt;::getLayoutTypeMask_internal (466 samples, 0.11%)</title><rect x="23.1175%" y="981" width="0.1077%" height="15" fill="rgb(213,52,39)"/><text x="23.3675%" y="991.50"></text></g><g><title>cudnn::backend::Engine::finalize_internal (3,228 samples, 0.75%)</title><rect x="22.6197%" y="997" width="0.7463%" height="15" fill="rgb(243,137,7)"/><text x="22.8697%" y="1007.50"></text></g><g><title>cudnn::backend::EngineHeuristics::finalize_internal (734 samples, 0.17%)</title><rect x="23.8161%" y="933" width="0.1697%" height="15" fill="rgb(230,79,13)"/><text x="24.0661%" y="943.50"></text></g><g><title>cudnn::backend::getHeurDtreeLeaf (693 samples, 0.16%)</title><rect x="23.8256%" y="917" width="0.1602%" height="15" fill="rgb(247,105,23)"/><text x="24.0756%" y="927.50"></text></g><g><title>cudnn::cnn::ConvForward4dImplicitGemmEngine&lt;cudnn::cnn::convolve_launch_4d_pf&lt;float, float, float, float, kernel_conv_params&gt;, 3, 3, 2, 2, 2, 2&gt;::initSupported (526 samples, 0.12%)</title><rect x="24.1033%" y="837" width="0.1216%" height="15" fill="rgb(223,179,41)"/><text x="24.3533%" y="847.50"></text></g><g><title>cudnn::cnn::EngineContainer&lt;(cudnnBackendEngineName_t)28, 4096ul&gt;::initSupported (553 samples, 0.13%)</title><rect x="24.0973%" y="869" width="0.1278%" height="15" fill="rgb(218,9,34)"/><text x="24.3473%" y="879.50"></text></g><g><title>cudnn::cnn::EngineInterface::isSupported (528 samples, 0.12%)</title><rect x="24.1030%" y="853" width="0.1221%" height="15" fill="rgb(222,106,8)"/><text x="24.3530%" y="863.50"></text></g><g><title>cudnn::cnn::GeneralizedConvolutionEngine&lt;cudnn::cnn::EngineContainer&lt;(cudnnBackendEngineName_t)28, 4096ul&gt; &gt;::initSupported (674 samples, 0.16%)</title><rect x="24.0714%" y="901" width="0.1558%" height="15" fill="rgb(211,220,0)"/><text x="24.3214%" y="911.50"></text></g><g><title>cudnn::cnn::EngineInterface::isSupported (593 samples, 0.14%)</title><rect x="24.0901%" y="885" width="0.1371%" height="15" fill="rgb(229,52,16)"/><text x="24.3401%" y="895.50"></text></g><g><title>cudnn::cnn::EngineInterface::isSupported (719 samples, 0.17%)</title><rect x="24.0626%" y="917" width="0.1662%" height="15" fill="rgb(212,155,18)"/><text x="24.3126%" y="927.50"></text></g><g><title>cudnn::backend::Descriptor::finalize (1,970 samples, 0.46%)</title><rect x="23.8140%" y="949" width="0.4554%" height="15" fill="rgb(242,21,14)"/><text x="24.0640%" y="959.50"></text></g><g><title>cudnn::backend::ExecutionPlan::finalize_internal (1,227 samples, 0.28%)</title><rect x="23.9858%" y="933" width="0.2837%" height="15" fill="rgb(222,19,48)"/><text x="24.2358%" y="943.50"></text></g><g><title>cudnn::backend::get_plan_for_legacy_algo (3,364 samples, 0.78%)</title><rect x="23.7232%" y="965" width="0.7777%" height="15" fill="rgb(232,45,27)"/><text x="23.9732%" y="975.50"></text></g><g><title>cudnn::backend::ConvolutionForwardOperation::finalize_internal (912 samples, 0.21%)</title><rect x="24.5335%" y="933" width="0.2108%" height="15" fill="rgb(249,103,42)"/><text x="24.7835%" y="943.50"></text></g><g><title>cudnn::cnn::GenericConvolution::init (889 samples, 0.21%)</title><rect x="24.5388%" y="917" width="0.2055%" height="15" fill="rgb(246,81,33)"/><text x="24.7888%" y="927.50"></text></g><g><title>cudnn::backend::Descriptor::finalize (1,457 samples, 0.34%)</title><rect x="24.5215%" y="949" width="0.3368%" height="15" fill="rgb(252,33,42)"/><text x="24.7715%" y="959.50"></text></g><g><title>cudnn::backend::convolutionForward (7,098 samples, 1.64%)</title><rect x="23.4243%" y="997" width="1.6410%" height="15" fill="rgb(209,212,41)"/><text x="23.6743%" y="1007.50"></text></g><g><title>cudnn::backend::make_convolution_plan&lt;cudnn::backend::ConvolutionForwardOperation, cudnnConvolutionFwdAlgo_t, cudnn::backend::EnginesAlgoMap&lt;cudnnConvolutionFwdAlgo_t, 8&gt; &gt; (6,030 samples, 1.39%)</title><rect x="23.6712%" y="981" width="1.3941%" height="15" fill="rgb(207,154,6)"/><text x="23.9212%" y="991.50"></text></g><g><title>cudnn::backend::setFinalizeMonoOperationSet&lt;cudnn::backend::ConvolutionForwardOperation&gt; (2,441 samples, 0.56%)</title><rect x="24.5009%" y="965" width="0.5643%" height="15" fill="rgb(223,64,47)"/><text x="24.7509%" y="975.50"></text></g><g><title>[libcuda.so.460.91.03] (621 samples, 0.14%)</title><rect x="25.2879%" y="757" width="0.1436%" height="15" fill="rgb(211,161,38)"/><text x="25.5379%" y="767.50"></text></g><g><title>[libcuda.so.460.91.03] (521 samples, 0.12%)</title><rect x="25.3110%" y="741" width="0.1205%" height="15" fill="rgb(219,138,40)"/><text x="25.5610%" y="751.50"></text></g><g><title>[libcuda.so.460.91.03] (697 samples, 0.16%)</title><rect x="25.2729%" y="773" width="0.1611%" height="15" fill="rgb(241,228,46)"/><text x="25.5229%" y="783.50"></text></g><g><title>[libcuda.so.460.91.03] (760 samples, 0.18%)</title><rect x="25.2585%" y="789" width="0.1757%" height="15" fill="rgb(223,209,38)"/><text x="25.5085%" y="799.50"></text></g><g><title>cudaLaunchKernel (869 samples, 0.20%)</title><rect x="25.2338%" y="853" width="0.2009%" height="15" fill="rgb(236,164,45)"/><text x="25.4838%" y="863.50"></text></g><g><title>[libcudart-6d56b25a.so.11.0] (863 samples, 0.20%)</title><rect x="25.2352%" y="837" width="0.1995%" height="15" fill="rgb(231,15,5)"/><text x="25.4852%" y="847.50"></text></g><g><title>cuLaunchKernel (784 samples, 0.18%)</title><rect x="25.2534%" y="821" width="0.1813%" height="15" fill="rgb(252,35,15)"/><text x="25.5034%" y="831.50"></text></g><g><title>[libcuda.so.460.91.03] (781 samples, 0.18%)</title><rect x="25.2541%" y="805" width="0.1806%" height="15" fill="rgb(248,181,18)"/><text x="25.5041%" y="815.50"></text></g><g><title>cudnn::cnn::implicit_convolve_sgemm_launch&lt;1024, 5, 5, 3, 3, 3, 1, false, true, true&gt; (955 samples, 0.22%)</title><rect x="25.2151%" y="869" width="0.2208%" height="15" fill="rgb(233,39,42)"/><text x="25.4651%" y="879.50"></text></g><g><title>[libcuda.so.460.91.03] (637 samples, 0.15%)</title><rect x="25.8587%" y="709" width="0.1473%" height="15" fill="rgb(238,110,33)"/><text x="26.1087%" y="719.50"></text></g><g><title>[libcuda.so.460.91.03] (1,137 samples, 0.26%)</title><rect x="25.7482%" y="725" width="0.2629%" height="15" fill="rgb(233,195,10)"/><text x="25.9982%" y="735.50"></text></g><g><title>[libcuda.so.460.91.03] (1,488 samples, 0.34%)</title><rect x="25.6969%" y="741" width="0.3440%" height="15" fill="rgb(254,105,3)"/><text x="25.9469%" y="751.50"></text></g><g><title>[libcuda.so.460.91.03] (1,690 samples, 0.39%)</title><rect x="25.6506%" y="757" width="0.3907%" height="15" fill="rgb(221,225,9)"/><text x="25.9006%" y="767.50"></text></g><g><title>[libcuda.so.460.91.03] (1,895 samples, 0.44%)</title><rect x="25.6120%" y="773" width="0.4381%" height="15" fill="rgb(224,227,45)"/><text x="25.8620%" y="783.50"></text></g><g><title>[libcuda.so.460.91.03] (2,108 samples, 0.49%)</title><rect x="25.5639%" y="789" width="0.4874%" height="15" fill="rgb(229,198,43)"/><text x="25.8139%" y="799.50"></text></g><g><title>cuLaunchKernel (2,178 samples, 0.50%)</title><rect x="25.5512%" y="821" width="0.5035%" height="15" fill="rgb(206,209,35)"/><text x="25.8012%" y="831.50"></text></g><g><title>[libcuda.so.460.91.03] (2,172 samples, 0.50%)</title><rect x="25.5526%" y="805" width="0.5021%" height="15" fill="rgb(245,195,53)"/><text x="25.8026%" y="815.50"></text></g><g><title>[libcudart-6d56b25a.so.11.0] (2,436 samples, 0.56%)</title><rect x="25.4918%" y="837" width="0.5632%" height="15" fill="rgb(240,92,26)"/><text x="25.7418%" y="847.50"></text></g><g><title>cudaLaunchKernel (2,454 samples, 0.57%)</title><rect x="25.4879%" y="853" width="0.5673%" height="15" fill="rgb(207,40,23)"/><text x="25.7379%" y="863.50"></text></g><g><title>cudnn::cnn::ConvForward4dImplicitGemmEngine&lt;cudnn::cnn::convolve_launch_4d_pf&lt;float, float, float, float, kernel_conv_params&gt;, 3, 3, 2, 2, 2, 2&gt;::execute_internal_impl (3,673 samples, 0.85%)</title><rect x="25.2109%" y="885" width="0.8492%" height="15" fill="rgb(223,111,35)"/><text x="25.4609%" y="895.50"></text></g><g><title>cudnn::cnn::implicit_convolve_sgemm_launch&lt;128, 5, 5, 3, 3, 3, 1, false, true, true&gt; (2,700 samples, 0.62%)</title><rect x="25.4359%" y="869" width="0.6242%" height="15" fill="rgb(229,147,28)"/><text x="25.6859%" y="879.50"></text></g><g><title>cudnn::cnn::EngineInterface::execute (4,154 samples, 0.96%)</title><rect x="25.1089%" y="981" width="0.9604%" height="15" fill="rgb(211,29,28)"/><text x="25.3589%" y="991.50"></text></g><g><title>cudnn::cnn::GeneralizedConvolutionEngine&lt;cudnn::cnn::EngineContainer&lt;(cudnnBackendEngineName_t)28, 4096ul&gt; &gt;::execute_internal_impl (3,884 samples, 0.90%)</title><rect x="25.1714%" y="965" width="0.8979%" height="15" fill="rgb(228,72,33)"/><text x="25.4214%" y="975.50"></text></g><g><title>cudnn::cnn::AutoTransformationExecutor::execute_pipeline (3,871 samples, 0.89%)</title><rect x="25.1744%" y="949" width="0.8949%" height="15" fill="rgb(205,214,31)"/><text x="25.4244%" y="959.50"></text></g><g><title>cudnn::cnn::EngineInterface::execute (3,756 samples, 0.87%)</title><rect x="25.2010%" y="933" width="0.8684%" height="15" fill="rgb(224,111,15)"/><text x="25.4510%" y="943.50"></text></g><g><title>cudnn::cnn::EngineContainer&lt;(cudnnBackendEngineName_t)28, 4096ul&gt;::execute_internal_impl (3,716 samples, 0.86%)</title><rect x="25.2102%" y="917" width="0.8591%" height="15" fill="rgb(253,21,26)"/><text x="25.4602%" y="927.50"></text></g><g><title>cudnn::cnn::EngineInterface::execute (3,716 samples, 0.86%)</title><rect x="25.2102%" y="901" width="0.8591%" height="15" fill="rgb(245,139,43)"/><text x="25.4602%" y="911.50"></text></g><g><title>cudnn::backend::execute (4,373 samples, 1.01%)</title><rect x="25.0653%" y="997" width="1.0110%" height="15" fill="rgb(252,170,7)"/><text x="25.3153%" y="1007.50"></text></g><g><title>[libcuda.so.460.91.03] (686 samples, 0.16%)</title><rect x="26.7012%" y="837" width="0.1586%" height="15" fill="rgb(231,118,14)"/><text x="26.9512%" y="847.50"></text></g><g><title>[libcuda.so.460.91.03] (1,416 samples, 0.33%)</title><rect x="26.5481%" y="853" width="0.3274%" height="15" fill="rgb(238,83,0)"/><text x="26.7981%" y="863.50"></text></g><g><title>[libcuda.so.460.91.03] (2,083 samples, 0.48%)</title><rect x="26.4277%" y="885" width="0.4816%" height="15" fill="rgb(221,39,39)"/><text x="26.6777%" y="895.50"></text></g><g><title>[libcuda.so.460.91.03] (1,846 samples, 0.43%)</title><rect x="26.4825%" y="869" width="0.4268%" height="15" fill="rgb(222,119,46)"/><text x="26.7325%" y="879.50"></text></g><g><title>[libcuda.so.460.91.03] (2,292 samples, 0.53%)</title><rect x="26.3879%" y="901" width="0.5299%" height="15" fill="rgb(222,165,49)"/><text x="26.6379%" y="911.50"></text></g><g><title>[libcuda.so.460.91.03] (2,507 samples, 0.58%)</title><rect x="26.3387%" y="917" width="0.5796%" height="15" fill="rgb(219,113,52)"/><text x="26.5887%" y="927.50"></text></g><g><title>[libcudart-6d56b25a.so.11.0] (2,877 samples, 0.67%)</title><rect x="26.2584%" y="965" width="0.6651%" height="15" fill="rgb(214,7,15)"/><text x="26.5084%" y="975.50"></text></g><g><title>cuLaunchKernel (2,598 samples, 0.60%)</title><rect x="26.3229%" y="949" width="0.6006%" height="15" fill="rgb(235,32,4)"/><text x="26.5729%" y="959.50"></text></g><g><title>[libcuda.so.460.91.03] (2,592 samples, 0.60%)</title><rect x="26.3243%" y="933" width="0.5992%" height="15" fill="rgb(238,90,54)"/><text x="26.5743%" y="943.50"></text></g><g><title>cudaLaunchKernel (2,892 samples, 0.67%)</title><rect x="26.2552%" y="981" width="0.6686%" height="15" fill="rgb(213,208,19)"/><text x="26.5052%" y="991.50"></text></g><g><title>cudnnBatchNormalizationForwardInference_ (3,533 samples, 0.82%)</title><rect x="26.1484%" y="997" width="0.8168%" height="15" fill="rgb(233,156,4)"/><text x="26.3984%" y="1007.50"></text></g><g><title>[libcuda.so.460.91.03] (732 samples, 0.17%)</title><rect x="27.4107%" y="885" width="0.1692%" height="15" fill="rgb(207,194,5)"/><text x="27.6607%" y="895.50"></text></g><g><title>[libcuda.so.460.91.03] (1,053 samples, 0.24%)</title><rect x="27.3640%" y="901" width="0.2434%" height="15" fill="rgb(206,111,30)"/><text x="27.6140%" y="911.50"></text></g><g><title>cudaEventRecord (1,534 samples, 0.35%)</title><rect x="27.2625%" y="965" width="0.3546%" height="15" fill="rgb(243,70,54)"/><text x="27.5125%" y="975.50"></text></g><g><title>[libcudart-6d56b25a.so.11.0] (1,507 samples, 0.35%)</title><rect x="27.2687%" y="949" width="0.3484%" height="15" fill="rgb(242,28,8)"/><text x="27.5187%" y="959.50"></text></g><g><title>cuEventRecord (1,123 samples, 0.26%)</title><rect x="27.3575%" y="933" width="0.2596%" height="15" fill="rgb(219,106,18)"/><text x="27.6075%" y="943.50"></text></g><g><title>[libcuda.so.460.91.03] (1,109 samples, 0.26%)</title><rect x="27.3607%" y="917" width="0.2564%" height="15" fill="rgb(244,222,10)"/><text x="27.6107%" y="927.50"></text></g><g><title>cudnn::ops::SetStream (1,579 samples, 0.37%)</title><rect x="27.2588%" y="981" width="0.3651%" height="15" fill="rgb(236,179,52)"/><text x="27.5088%" y="991.50"></text></g><g><title>cudnnSetStream (1,675 samples, 0.39%)</title><rect x="27.2373%" y="997" width="0.3872%" height="15" fill="rgb(213,23,39)"/><text x="27.4873%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3,350 samples, 0.77%)</title><rect x="27.6858%" y="997" width="0.7745%" height="15" fill="rgb(238,48,10)"/><text x="27.9358%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,221 samples, 0.28%)</title><rect x="28.1780%" y="981" width="0.2823%" height="15" fill="rgb(251,196,23)"/><text x="28.4280%" y="991.50"></text></g><g><title>hashbrown::map::make_hash (1,221 samples, 0.28%)</title><rect x="28.1780%" y="965" width="0.2823%" height="15" fill="rgb(250,152,24)"/><text x="28.4280%" y="975.50"></text></g><g><title>&lt;mcts_policy::game_rules::Move as core::hash::Hash&gt;::hash (1,221 samples, 0.28%)</title><rect x="28.1780%" y="949" width="0.2823%" height="15" fill="rgb(209,150,17)"/><text x="28.4280%" y="959.50"></text></g><g><title>&lt;mcts_policy::game_rules::Move as core::hash::Hash&gt;::hash (625 samples, 0.14%)</title><rect x="28.8628%" y="965" width="0.1445%" height="15" fill="rgb(234,202,34)"/><text x="29.1128%" y="975.50"></text></g><g><title>hashbrown::map::make_insert_hash (644 samples, 0.15%)</title><rect x="28.8628%" y="981" width="0.1489%" height="15" fill="rgb(253,148,53)"/><text x="29.1128%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,388 samples, 0.55%)</title><rect x="28.4603%" y="997" width="0.5521%" height="15" fill="rgb(218,129,16)"/><text x="28.7103%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (540 samples, 0.12%)</title><rect x="29.0471%" y="997" width="0.1248%" height="15" fill="rgb(216,85,19)"/><text x="29.2971%" y="1007.50"></text></g><g><title>&lt;mcts_policy::neural_net::Net as tch::nn::module::ModuleT&gt;::forward_t (924 samples, 0.21%)</title><rect x="29.3078%" y="949" width="0.2136%" height="15" fill="rgb(235,228,7)"/><text x="29.5578%" y="959.50"></text></g><g><title>at::Tensor::copy_ (603 samples, 0.14%)</title><rect x="29.5443%" y="661" width="0.1394%" height="15" fill="rgb(245,175,0)"/><text x="29.7943%" y="671.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool), &amp;torch::autograd::VariableType::(anonymous namespace)::copy_&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool)&gt;::call (603 samples, 0.14%)</title><rect x="29.5443%" y="645" width="0.1394%" height="15" fill="rgb(208,168,36)"/><text x="29.7943%" y="655.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::copy_ (603 samples, 0.14%)</title><rect x="29.5443%" y="629" width="0.1394%" height="15" fill="rgb(246,171,24)"/><text x="29.7943%" y="639.50"></text></g><g><title>at::redispatch::copy_ (603 samples, 0.14%)</title><rect x="29.5443%" y="613" width="0.1394%" height="15" fill="rgb(215,142,24)"/><text x="29.7943%" y="623.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool), &amp;torch::ADInplaceOrView::copy_&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool)&gt;::call (603 samples, 0.14%)</title><rect x="29.5443%" y="597" width="0.1394%" height="15" fill="rgb(250,187,7)"/><text x="29.7943%" y="607.50"></text></g><g><title>torch::ADInplaceOrView::copy_ (603 samples, 0.14%)</title><rect x="29.5443%" y="581" width="0.1394%" height="15" fill="rgb(228,66,33)"/><text x="29.7943%" y="591.50"></text></g><g><title>at::redispatch::copy_ (603 samples, 0.14%)</title><rect x="29.5443%" y="565" width="0.1394%" height="15" fill="rgb(234,215,21)"/><text x="29.7943%" y="575.50"></text></g><g><title>at::native::copy_ (603 samples, 0.14%)</title><rect x="29.5443%" y="549" width="0.1394%" height="15" fill="rgb(222,191,20)"/><text x="29.7943%" y="559.50"></text></g><g><title>at::native::copy_impl (603 samples, 0.14%)</title><rect x="29.5443%" y="533" width="0.1394%" height="15" fill="rgb(245,79,54)"/><text x="29.7943%" y="543.50"></text></g><g><title>at::native::copy_kernel_cuda (514 samples, 0.12%)</title><rect x="29.5649%" y="517" width="0.1188%" height="15" fill="rgb(240,10,37)"/><text x="29.8149%" y="527.50"></text></g><g><title>mcts_policy::game_rules::generate_t_wells (927 samples, 0.21%)</title><rect x="29.5215%" y="949" width="0.2143%" height="15" fill="rgb(214,192,32)"/><text x="29.7715%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (927 samples, 0.21%)</title><rect x="29.5215%" y="933" width="0.2143%" height="15" fill="rgb(209,36,54)"/><text x="29.7715%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (927 samples, 0.21%)</title><rect x="29.5215%" y="917" width="0.2143%" height="15" fill="rgb(220,10,11)"/><text x="29.7715%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (927 samples, 0.21%)</title><rect x="29.5215%" y="901" width="0.2143%" height="15" fill="rgb(221,106,17)"/><text x="29.7715%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (927 samples, 0.21%)</title><rect x="29.5215%" y="885" width="0.2143%" height="15" fill="rgb(251,142,44)"/><text x="29.7715%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (927 samples, 0.21%)</title><rect x="29.5215%" y="869" width="0.2143%" height="15" fill="rgb(238,13,15)"/><text x="29.7715%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (927 samples, 0.21%)</title><rect x="29.5215%" y="853" width="0.2143%" height="15" fill="rgb(208,107,27)"/><text x="29.7715%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (927 samples, 0.21%)</title><rect x="29.5215%" y="837" width="0.2143%" height="15" fill="rgb(205,136,37)"/><text x="29.7715%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (927 samples, 0.21%)</title><rect x="29.5215%" y="821" width="0.2143%" height="15" fill="rgb(250,205,27)"/><text x="29.7715%" y="831.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (927 samples, 0.21%)</title><rect x="29.5215%" y="805" width="0.2143%" height="15" fill="rgb(210,80,43)"/><text x="29.7715%" y="815.50"></text></g><g><title>mcts_policy::training::generate_t_wells::{{closure}} (927 samples, 0.21%)</title><rect x="29.5215%" y="789" width="0.2143%" height="15" fill="rgb(247,160,36)"/><text x="29.7715%" y="799.50"></text></g><g><title>tch::tensor::&lt;impl tch::wrappers::tensor::Tensor&gt;::to_device (828 samples, 0.19%)</title><rect x="29.5443%" y="773" width="0.1914%" height="15" fill="rgb(234,13,49)"/><text x="29.7943%" y="783.50"></text></g><g><title>tch::wrappers::tensor_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::to (828 samples, 0.19%)</title><rect x="29.5443%" y="757" width="0.1914%" height="15" fill="rgb(234,122,0)"/><text x="29.7943%" y="767.50"></text></g><g><title>tch::wrappers::tensor_fallible_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::f_to (828 samples, 0.19%)</title><rect x="29.5443%" y="741" width="0.1914%" height="15" fill="rgb(207,146,38)"/><text x="29.7943%" y="751.50"></text></g><g><title>atg_to (828 samples, 0.19%)</title><rect x="29.5443%" y="725" width="0.1914%" height="15" fill="rgb(207,177,25)"/><text x="29.7943%" y="735.50"></text></g><g><title>at::Tensor::to (828 samples, 0.19%)</title><rect x="29.5443%" y="709" width="0.1914%" height="15" fill="rgb(211,178,42)"/><text x="29.7943%" y="719.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_to_dtype_layout&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor (at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (828 samples, 0.19%)</title><rect x="29.5443%" y="693" width="0.1914%" height="15" fill="rgb(230,69,54)"/><text x="29.7943%" y="703.50"></text></g><g><title>at::native::to (828 samples, 0.19%)</title><rect x="29.5443%" y="677" width="0.1914%" height="15" fill="rgb(214,135,41)"/><text x="29.7943%" y="687.50"></text></g><g><title>cudaMemcpyAsync (572 samples, 0.13%)</title><rect x="29.7526%" y="469" width="0.1322%" height="15" fill="rgb(237,67,25)"/><text x="30.0026%" y="479.50"></text></g><g><title>[libcudart-6d56b25a.so.11.0] (572 samples, 0.13%)</title><rect x="29.7526%" y="453" width="0.1322%" height="15" fill="rgb(222,189,50)"/><text x="30.0026%" y="463.50"></text></g><g><title>[libcudart-6d56b25a.so.11.0] (572 samples, 0.13%)</title><rect x="29.7526%" y="437" width="0.1322%" height="15" fill="rgb(245,148,34)"/><text x="30.0026%" y="447.50"></text></g><g><title>cuMemcpyDtoHAsync_v2 (501 samples, 0.12%)</title><rect x="29.7691%" y="421" width="0.1158%" height="15" fill="rgb(222,29,6)"/><text x="30.0191%" y="431.50"></text></g><g><title>[libcuda.so.460.91.03] (497 samples, 0.11%)</title><rect x="29.7700%" y="405" width="0.1149%" height="15" fill="rgb(221,189,43)"/><text x="30.0200%" y="415.50"></text></g><g><title>[libcuda.so.460.91.03] (496 samples, 0.11%)</title><rect x="29.7702%" y="389" width="0.1147%" height="15" fill="rgb(207,36,27)"/><text x="30.0202%" y="399.50"></text></g><g><title>mcts_policy::game_graph::find_best_child (2,859 samples, 0.66%)</title><rect x="29.3078%" y="997" width="0.6610%" height="15" fill="rgb(217,90,24)"/><text x="29.5578%" y="1007.50"></text></g><g><title>mcts_policy::game_rules::possible_moves (2,859 samples, 0.66%)</title><rect x="29.3078%" y="981" width="0.6610%" height="15" fill="rgb(224,66,35)"/><text x="29.5578%" y="991.50"></text></g><g><title>mcts_policy::game_rules::net_pass (2,859 samples, 0.66%)</title><rect x="29.3078%" y="965" width="0.6610%" height="15" fill="rgb(221,13,50)"/><text x="29.5578%" y="975.50"></text></g><g><title>tch::tensor::convert::&lt;impl core::convert::From&lt;tch::wrappers::tensor::Tensor&gt; for alloc::vec::Vec&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (1,008 samples, 0.23%)</title><rect x="29.7358%" y="949" width="0.2330%" height="15" fill="rgb(236,68,49)"/><text x="29.9858%" y="959.50"></text></g><g><title>tch::tensor::convert::&lt;impl core::convert::From&lt;&amp;tch::wrappers::tensor::Tensor&gt; for alloc::vec::Vec&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (1,008 samples, 0.23%)</title><rect x="29.7358%" y="933" width="0.2330%" height="15" fill="rgb(229,146,28)"/><text x="29.9858%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,008 samples, 0.23%)</title><rect x="29.7358%" y="917" width="0.2330%" height="15" fill="rgb(225,31,38)"/><text x="29.9858%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,008 samples, 0.23%)</title><rect x="29.7358%" y="901" width="0.2330%" height="15" fill="rgb(250,208,3)"/><text x="29.9858%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,008 samples, 0.23%)</title><rect x="29.7358%" y="885" width="0.2330%" height="15" fill="rgb(246,54,23)"/><text x="29.9858%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,008 samples, 0.23%)</title><rect x="29.7358%" y="869" width="0.2330%" height="15" fill="rgb(243,76,11)"/><text x="29.9858%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,008 samples, 0.23%)</title><rect x="29.7358%" y="853" width="0.2330%" height="15" fill="rgb(245,21,50)"/><text x="29.9858%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,008 samples, 0.23%)</title><rect x="29.7358%" y="837" width="0.2330%" height="15" fill="rgb(228,9,43)"/><text x="29.9858%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,008 samples, 0.23%)</title><rect x="29.7358%" y="821" width="0.2330%" height="15" fill="rgb(208,100,47)"/><text x="29.9858%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,008 samples, 0.23%)</title><rect x="29.7358%" y="805" width="0.2330%" height="15" fill="rgb(232,26,8)"/><text x="29.9858%" y="815.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,008 samples, 0.23%)</title><rect x="29.7358%" y="789" width="0.2330%" height="15" fill="rgb(216,166,38)"/><text x="29.9858%" y="799.50"></text></g><g><title>tch::tensor::convert::&lt;impl core::convert::From&lt;&amp;tch::wrappers::tensor::Tensor&gt; for alloc::vec::Vec&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from::{{closure}} (1,008 samples, 0.23%)</title><rect x="29.7358%" y="773" width="0.2330%" height="15" fill="rgb(251,202,51)"/><text x="29.9858%" y="783.50"></text></g><g><title>tch::tensor::convert::&lt;impl core::convert::From&lt;tch::wrappers::tensor::Tensor&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from (1,008 samples, 0.23%)</title><rect x="29.7358%" y="757" width="0.2330%" height="15" fill="rgb(254,216,34)"/><text x="29.9858%" y="767.50"></text></g><g><title>tch::tensor::convert::&lt;impl core::convert::From&lt;&amp;tch::wrappers::tensor::Tensor&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from (1,008 samples, 0.23%)</title><rect x="29.7358%" y="741" width="0.2330%" height="15" fill="rgb(251,32,27)"/><text x="29.9858%" y="751.50"></text></g><g><title>tch::wrappers::tensor::Tensor::copy_data (1,008 samples, 0.23%)</title><rect x="29.7358%" y="725" width="0.2330%" height="15" fill="rgb(208,127,28)"/><text x="29.9858%" y="735.50"></text></g><g><title>tch::wrappers::tensor::Tensor::f_copy_data (1,008 samples, 0.23%)</title><rect x="29.7358%" y="709" width="0.2330%" height="15" fill="rgb(224,137,22)"/><text x="29.9858%" y="719.50"></text></g><g><title>at_copy_data (1,008 samples, 0.23%)</title><rect x="29.7358%" y="693" width="0.2330%" height="15" fill="rgb(254,70,32)"/><text x="29.9858%" y="703.50"></text></g><g><title>at::Tensor::to (1,008 samples, 0.23%)</title><rect x="29.7358%" y="677" width="0.2330%" height="15" fill="rgb(229,75,37)"/><text x="29.9858%" y="687.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_to_dtype_layout&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor (at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (1,008 samples, 0.23%)</title><rect x="29.7358%" y="661" width="0.2330%" height="15" fill="rgb(252,64,23)"/><text x="29.9858%" y="671.50"></text></g><g><title>at::native::to (1,008 samples, 0.23%)</title><rect x="29.7358%" y="645" width="0.2330%" height="15" fill="rgb(232,162,48)"/><text x="29.9858%" y="655.50"></text></g><g><title>at::Tensor::copy_ (1,008 samples, 0.23%)</title><rect x="29.7358%" y="629" width="0.2330%" height="15" fill="rgb(246,160,12)"/><text x="29.9858%" y="639.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool), &amp;torch::autograd::VariableType::(anonymous namespace)::copy_&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool)&gt;::call (1,008 samples, 0.23%)</title><rect x="29.7358%" y="613" width="0.2330%" height="15" fill="rgb(247,166,0)"/><text x="29.9858%" y="623.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::copy_ (1,008 samples, 0.23%)</title><rect x="29.7358%" y="597" width="0.2330%" height="15" fill="rgb(249,219,21)"/><text x="29.9858%" y="607.50"></text></g><g><title>at::redispatch::copy_ (1,008 samples, 0.23%)</title><rect x="29.7358%" y="581" width="0.2330%" height="15" fill="rgb(205,209,3)"/><text x="29.9858%" y="591.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool), &amp;torch::ADInplaceOrView::copy_&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool)&gt;::call (1,008 samples, 0.23%)</title><rect x="29.7358%" y="565" width="0.2330%" height="15" fill="rgb(243,44,1)"/><text x="29.9858%" y="575.50"></text></g><g><title>torch::ADInplaceOrView::copy_ (1,008 samples, 0.23%)</title><rect x="29.7358%" y="549" width="0.2330%" height="15" fill="rgb(206,159,16)"/><text x="29.9858%" y="559.50"></text></g><g><title>at::redispatch::copy_ (1,008 samples, 0.23%)</title><rect x="29.7358%" y="533" width="0.2330%" height="15" fill="rgb(244,77,30)"/><text x="29.9858%" y="543.50"></text></g><g><title>at::native::copy_ (1,008 samples, 0.23%)</title><rect x="29.7358%" y="517" width="0.2330%" height="15" fill="rgb(218,69,12)"/><text x="29.9858%" y="527.50"></text></g><g><title>at::native::copy_impl (1,008 samples, 0.23%)</title><rect x="29.7358%" y="501" width="0.2330%" height="15" fill="rgb(212,87,7)"/><text x="29.9858%" y="511.50"></text></g><g><title>at::native::copy_kernel_cuda (1,008 samples, 0.23%)</title><rect x="29.7358%" y="485" width="0.2330%" height="15" fill="rgb(245,114,25)"/><text x="29.9858%" y="495.50"></text></g><g><title>tch::nn::module::&lt;impl tch::wrappers::tensor::Tensor&gt;::apply (500 samples, 0.12%)</title><rect x="29.9707%" y="869" width="0.1156%" height="15" fill="rgb(210,61,42)"/><text x="30.2207%" y="879.50"></text></g><g><title>&lt;tch::nn::linear::Linear as tch::nn::module::Module&gt;::forward (500 samples, 0.12%)</title><rect x="29.9707%" y="853" width="0.1156%" height="15" fill="rgb(211,52,33)"/><text x="30.2207%" y="863.50"></text></g><g><title>malloc_consolidate (927 samples, 0.21%)</title><rect x="30.3766%" y="597" width="0.2143%" height="15" fill="rgb(234,58,33)"/><text x="30.6266%" y="607.50"></text></g><g><title>_int_malloc (1,422 samples, 0.33%)</title><rect x="30.2740%" y="613" width="0.3288%" height="15" fill="rgb(220,115,36)"/><text x="30.5240%" y="623.50"></text></g><g><title>operator new (1,489 samples, 0.34%)</title><rect x="30.2622%" y="645" width="0.3442%" height="15" fill="rgb(243,153,54)"/><text x="30.5122%" y="655.50"></text></g><g><title>__GI___libc_malloc (1,486 samples, 0.34%)</title><rect x="30.2629%" y="629" width="0.3435%" height="15" fill="rgb(251,47,18)"/><text x="30.5129%" y="639.50"></text></g><g><title>c10::TensorImpl::shallow_copy_and_detach (1,152 samples, 0.27%)</title><rect x="30.7287%" y="597" width="0.2663%" height="15" fill="rgb(242,102,42)"/><text x="30.9787%" y="607.50"></text></g><g><title>at::Tensor::tensor_data (1,224 samples, 0.28%)</title><rect x="30.7188%" y="629" width="0.2830%" height="15" fill="rgb(234,31,38)"/><text x="30.9688%" y="639.50"></text></g><g><title>torch::autograd::VariableHooks::tensor_data (1,211 samples, 0.28%)</title><rect x="30.7218%" y="613" width="0.2800%" height="15" fill="rgb(221,117,51)"/><text x="30.9718%" y="623.50"></text></g><g><title>torch::autograd::SavedVariable::SavedVariable (492 samples, 0.11%)</title><rect x="31.0397%" y="629" width="0.1137%" height="15" fill="rgb(212,20,18)"/><text x="31.2897%" y="639.50"></text></g><g><title>torch::autograd::SavedVariable::SavedVariable (2,311 samples, 0.53%)</title><rect x="30.6522%" y="645" width="0.5343%" height="15" fill="rgb(245,133,36)"/><text x="30.9022%" y="655.50"></text></g><g><title>torch::autograd::impl::grad_accumulator (629 samples, 0.15%)</title><rect x="31.3643%" y="597" width="0.1454%" height="15" fill="rgb(212,6,19)"/><text x="31.6143%" y="607.50"></text></g><g><title>torch::autograd::impl::gradient_edge (902 samples, 0.21%)</title><rect x="31.3030%" y="613" width="0.2085%" height="15" fill="rgb(218,1,36)"/><text x="31.5530%" y="623.50"></text></g><g><title>torch::autograd::collect_next_edges&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;&gt; (1,071 samples, 0.25%)</title><rect x="31.2649%" y="645" width="0.2476%" height="15" fill="rgb(246,84,54)"/><text x="31.5149%" y="655.50"></text></g><g><title>torch::autograd::detail::MakeNextFunctionList::operator (1,062 samples, 0.25%)</title><rect x="31.2669%" y="629" width="0.2455%" height="15" fill="rgb(242,110,6)"/><text x="31.5169%" y="639.50"></text></g><g><title>tch::nn::module::&lt;impl tch::wrappers::tensor::Tensor&gt;::apply_t (6,941 samples, 1.60%)</title><rect x="30.0863%" y="869" width="1.6047%" height="15" fill="rgb(214,47,5)"/><text x="30.3363%" y="879.50"></text></g><g><title>&lt;tch::nn::batch_norm::BatchNorm as tch::nn::module::ModuleT&gt;::forward_t (6,941 samples, 1.60%)</title><rect x="30.0863%" y="853" width="1.6047%" height="15" fill="rgb(218,159,25)"/><text x="30.3363%" y="863.50"></text></g><g><title>tch::wrappers::tensor_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::batch_norm (6,941 samples, 1.60%)</title><rect x="30.0863%" y="837" width="1.6047%" height="15" fill="rgb(215,211,28)"/><text x="30.3363%" y="847.50"></text></g><g><title>tch::wrappers::tensor_fallible_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::f_batch_norm (6,941 samples, 1.60%)</title><rect x="30.0863%" y="821" width="1.6047%" height="15" fill="rgb(238,59,32)"/><text x="30.3363%" y="831.50"></text></g><g><title>atg_batch_norm (6,941 samples, 1.60%)</title><rect x="30.0863%" y="805" width="1.6047%" height="15" fill="rgb(226,82,3)"/><text x="30.3363%" y="815.50"></text></g><g><title>at::batch_norm (6,941 samples, 1.60%)</title><rect x="30.0863%" y="789" width="1.6047%" height="15" fill="rgb(240,164,32)"/><text x="30.3363%" y="799.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_batch_norm&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, at::Tensor (at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (6,941 samples, 1.60%)</title><rect x="30.0863%" y="773" width="1.6047%" height="15" fill="rgb(232,46,7)"/><text x="30.3363%" y="783.50"></text></g><g><title>at::native::batch_norm (6,941 samples, 1.60%)</title><rect x="30.0863%" y="757" width="1.6047%" height="15" fill="rgb(229,129,53)"/><text x="30.3363%" y="767.50"></text></g><g><title>at::_batch_norm_impl_index (6,941 samples, 1.60%)</title><rect x="30.0863%" y="741" width="1.6047%" height="15" fill="rgb(234,188,29)"/><text x="30.3363%" y="751.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper__batch_norm_impl_index&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (6,941 samples, 1.60%)</title><rect x="30.0863%" y="725" width="1.6047%" height="15" fill="rgb(246,141,4)"/><text x="30.3363%" y="735.50"></text></g><g><title>at::native::_batch_norm_impl_index (6,941 samples, 1.60%)</title><rect x="30.0863%" y="709" width="1.6047%" height="15" fill="rgb(229,23,39)"/><text x="30.3363%" y="719.50"></text></g><g><title>at::cudnn_batch_norm (6,941 samples, 1.60%)</title><rect x="30.0863%" y="693" width="1.6047%" height="15" fill="rgb(206,12,3)"/><text x="30.3363%" y="703.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;torch::autograd::VariableType::(anonymous namespace)::cudnn_batch_norm&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (6,941 samples, 1.60%)</title><rect x="30.0863%" y="677" width="1.6047%" height="15" fill="rgb(252,226,20)"/><text x="30.3363%" y="687.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::cudnn_batch_norm (6,941 samples, 1.60%)</title><rect x="30.0863%" y="661" width="1.6047%" height="15" fill="rgb(216,123,35)"/><text x="30.3363%" y="671.50"></text></g><g><title>at::native::empty_cuda (542 samples, 0.13%)</title><rect x="31.7088%" y="613" width="0.1253%" height="15" fill="rgb(212,68,40)"/><text x="31.9588%" y="623.50"></text></g><g><title>tch::tensor::ops::&lt;impl core::ops::arith::Add&lt;&amp;tch::wrappers::tensor::Tensor&gt; for tch::wrappers::tensor::Tensor&gt;::add (621 samples, 0.14%)</title><rect x="31.7039%" y="869" width="0.1436%" height="15" fill="rgb(254,125,32)"/><text x="31.9539%" y="879.50"></text></g><g><title>tch::wrappers::tensor_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::g_add (621 samples, 0.14%)</title><rect x="31.7039%" y="853" width="0.1436%" height="15" fill="rgb(253,97,22)"/><text x="31.9539%" y="863.50"></text></g><g><title>tch::wrappers::tensor_fallible_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::f_add (621 samples, 0.14%)</title><rect x="31.7039%" y="837" width="0.1436%" height="15" fill="rgb(241,101,14)"/><text x="31.9539%" y="847.50"></text></g><g><title>atg_add (621 samples, 0.14%)</title><rect x="31.7039%" y="821" width="0.1436%" height="15" fill="rgb(238,103,29)"/><text x="31.9539%" y="831.50"></text></g><g><title>at::add (621 samples, 0.14%)</title><rect x="31.7039%" y="805" width="0.1436%" height="15" fill="rgb(233,195,47)"/><text x="31.9539%" y="815.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::add_Tensor&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (621 samples, 0.14%)</title><rect x="31.7039%" y="789" width="0.1436%" height="15" fill="rgb(246,218,30)"/><text x="31.9539%" y="799.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add_Tensor (621 samples, 0.14%)</title><rect x="31.7039%" y="773" width="0.1436%" height="15" fill="rgb(219,145,47)"/><text x="31.9539%" y="783.50"></text></g><g><title>at::redispatch::add (621 samples, 0.14%)</title><rect x="31.7039%" y="757" width="0.1436%" height="15" fill="rgb(243,12,26)"/><text x="31.9539%" y="767.50"></text></g><g><title>c10::Dispatcher::redispatch&lt;at::Tensor, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; (621 samples, 0.14%)</title><rect x="31.7039%" y="741" width="0.1436%" height="15" fill="rgb(214,87,16)"/><text x="31.9539%" y="751.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_add_Tensor&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (621 samples, 0.14%)</title><rect x="31.7039%" y="725" width="0.1436%" height="15" fill="rgb(208,99,42)"/><text x="31.9539%" y="735.50"></text></g><g><title>at::(anonymous namespace)::wrapper_add_Tensor (621 samples, 0.14%)</title><rect x="31.7039%" y="709" width="0.1436%" height="15" fill="rgb(253,99,2)"/><text x="31.9539%" y="719.50"></text></g><g><title>at::meta::add_Tensor::meta (621 samples, 0.14%)</title><rect x="31.7039%" y="693" width="0.1436%" height="15" fill="rgb(220,168,23)"/><text x="31.9539%" y="703.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_binary_op (621 samples, 0.14%)</title><rect x="31.7039%" y="677" width="0.1436%" height="15" fill="rgb(242,38,24)"/><text x="31.9539%" y="687.50"></text></g><g><title>at::TensorIteratorBase::build (621 samples, 0.14%)</title><rect x="31.7039%" y="661" width="0.1436%" height="15" fill="rgb(225,182,9)"/><text x="31.9539%" y="671.50"></text></g><g><title>at::TensorIteratorBase::fast_set_up (621 samples, 0.14%)</title><rect x="31.7039%" y="645" width="0.1436%" height="15" fill="rgb(243,178,37)"/><text x="31.9539%" y="655.50"></text></g><g><title>at::(anonymous namespace)::structured_add_out_functional::set_output (621 samples, 0.14%)</title><rect x="31.7039%" y="629" width="0.1436%" height="15" fill="rgb(232,139,19)"/><text x="31.9539%" y="639.50"></text></g><g><title>at::native::resize_cuda_ (783 samples, 0.18%)</title><rect x="31.8986%" y="469" width="0.1810%" height="15" fill="rgb(225,201,24)"/><text x="32.1486%" y="479.50"></text></g><g><title>at::Tensor::resize_ (923 samples, 0.21%)</title><rect x="31.8766%" y="501" width="0.2134%" height="15" fill="rgb(221,47,46)"/><text x="32.1266%" y="511.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor const&amp; (at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_resize_&gt;, at::Tensor const&amp;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor const&amp; (at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (829 samples, 0.19%)</title><rect x="31.8983%" y="485" width="0.1917%" height="15" fill="rgb(249,23,13)"/><text x="32.1483%" y="495.50"></text></g><g><title>at::native::resize_output (985 samples, 0.23%)</title><rect x="31.8757%" y="517" width="0.2277%" height="15" fill="rgb(219,9,5)"/><text x="32.1257%" y="527.50"></text></g><g><title>at::TensorIterator::set_output (1,161 samples, 0.27%)</title><rect x="31.8734%" y="533" width="0.2684%" height="15" fill="rgb(254,171,16)"/><text x="32.1234%" y="543.50"></text></g><g><title>at::TensorIterator::unary_op (1,357 samples, 0.31%)</title><rect x="31.8530%" y="597" width="0.3137%" height="15" fill="rgb(230,171,20)"/><text x="32.1030%" y="607.50"></text></g><g><title>at::TensorIteratorBase::build_unary_op (1,357 samples, 0.31%)</title><rect x="31.8530%" y="581" width="0.3137%" height="15" fill="rgb(210,71,41)"/><text x="32.1030%" y="591.50"></text></g><g><title>at::TensorIteratorBase::build (1,357 samples, 0.31%)</title><rect x="31.8530%" y="565" width="0.3137%" height="15" fill="rgb(206,173,20)"/><text x="32.1030%" y="575.50"></text></g><g><title>at::TensorIteratorBase::fast_set_up (1,357 samples, 0.31%)</title><rect x="31.8530%" y="549" width="0.3137%" height="15" fill="rgb(233,88,34)"/><text x="32.1030%" y="559.50"></text></g><g><title>at::clamp_min_outf (1,381 samples, 0.32%)</title><rect x="31.8530%" y="645" width="0.3193%" height="15" fill="rgb(223,209,46)"/><text x="32.1030%" y="655.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_clamp_min_out_out (1,381 samples, 0.32%)</title><rect x="31.8530%" y="629" width="0.3193%" height="15" fill="rgb(250,43,18)"/><text x="32.1030%" y="639.50"></text></g><g><title>at::native::clamp_min_out (1,381 samples, 0.32%)</title><rect x="31.8530%" y="613" width="0.3193%" height="15" fill="rgb(208,13,10)"/><text x="32.1030%" y="623.50"></text></g><g><title>&lt;mcts_policy::neural_net::Net as tch::nn::module::ModuleT&gt;::forward_t (9,628 samples, 2.23%)</title><rect x="29.9707%" y="885" width="2.2259%" height="15" fill="rgb(212,200,36)"/><text x="30.2207%" y="895.50">&lt;..</text></g><g><title>tch::wrappers::tensor_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::relu (1,486 samples, 0.34%)</title><rect x="31.8530%" y="869" width="0.3435%" height="15" fill="rgb(225,90,30)"/><text x="32.1030%" y="879.50"></text></g><g><title>tch::wrappers::tensor_fallible_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::f_relu (1,486 samples, 0.34%)</title><rect x="31.8530%" y="853" width="0.3435%" height="15" fill="rgb(236,182,39)"/><text x="32.1030%" y="863.50"></text></g><g><title>atg_relu (1,486 samples, 0.34%)</title><rect x="31.8530%" y="837" width="0.3435%" height="15" fill="rgb(212,144,35)"/><text x="32.1030%" y="847.50"></text></g><g><title>at::relu (1,486 samples, 0.34%)</title><rect x="31.8530%" y="821" width="0.3435%" height="15" fill="rgb(228,63,44)"/><text x="32.1030%" y="831.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::relu&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;&gt; &gt;, at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;)&gt;::call (1,486 samples, 0.34%)</title><rect x="31.8530%" y="805" width="0.3435%" height="15" fill="rgb(228,109,6)"/><text x="32.1030%" y="815.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::relu (1,486 samples, 0.34%)</title><rect x="31.8530%" y="789" width="0.3435%" height="15" fill="rgb(238,117,24)"/><text x="32.1030%" y="799.50"></text></g><g><title>at::redispatch::relu (1,486 samples, 0.34%)</title><rect x="31.8530%" y="773" width="0.3435%" height="15" fill="rgb(242,26,26)"/><text x="32.1030%" y="783.50"></text></g><g><title>c10::Dispatcher::redispatch&lt;at::Tensor, at::Tensor const&amp;&gt; (1,486 samples, 0.34%)</title><rect x="31.8530%" y="757" width="0.3435%" height="15" fill="rgb(221,92,48)"/><text x="32.1030%" y="767.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_relu&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;&gt; &gt;, at::Tensor (at::Tensor const&amp;)&gt;::call (1,486 samples, 0.34%)</title><rect x="31.8530%" y="741" width="0.3435%" height="15" fill="rgb(209,209,32)"/><text x="32.1030%" y="751.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_relu (1,486 samples, 0.34%)</title><rect x="31.8530%" y="725" width="0.3435%" height="15" fill="rgb(221,70,22)"/><text x="32.1030%" y="735.50"></text></g><g><title>at::native::relu (1,486 samples, 0.34%)</title><rect x="31.8530%" y="709" width="0.3435%" height="15" fill="rgb(248,145,5)"/><text x="32.1030%" y="719.50"></text></g><g><title>at::clamp_min (1,486 samples, 0.34%)</title><rect x="31.8530%" y="693" width="0.3435%" height="15" fill="rgb(226,116,26)"/><text x="32.1030%" y="703.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_clamp_min&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor (at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (1,486 samples, 0.34%)</title><rect x="31.8530%" y="677" width="0.3435%" height="15" fill="rgb(244,5,17)"/><text x="32.1030%" y="687.50"></text></g><g><title>at::native::clamp_min (1,486 samples, 0.34%)</title><rect x="31.8530%" y="661" width="0.3435%" height="15" fill="rgb(252,159,33)"/><text x="32.1030%" y="671.50"></text></g><g><title>at::detail::make_tensor&lt;c10::TensorImpl, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey&amp;, caffe2::TypeMeta&amp;&gt; (593 samples, 0.14%)</title><rect x="32.1966%" y="293" width="0.1371%" height="15" fill="rgb(206,71,0)"/><text x="32.4466%" y="303.50"></text></g><g><title>_int_malloc (670 samples, 0.15%)</title><rect x="32.4395%" y="197" width="0.1549%" height="15" fill="rgb(233,118,54)"/><text x="32.6895%" y="207.50"></text></g><g><title>__posix_memalign (1,064 samples, 0.25%)</title><rect x="32.3492%" y="261" width="0.2460%" height="15" fill="rgb(234,83,48)"/><text x="32.5992%" y="271.50"></text></g><g><title>__posix_memalign (1,045 samples, 0.24%)</title><rect x="32.3535%" y="245" width="0.2416%" height="15" fill="rgb(228,3,54)"/><text x="32.6035%" y="255.50"></text></g><g><title>_mid_memalign (1,043 samples, 0.24%)</title><rect x="32.3540%" y="229" width="0.2411%" height="15" fill="rgb(226,155,13)"/><text x="32.6040%" y="239.50"></text></g><g><title>_int_memalign (922 samples, 0.21%)</title><rect x="32.3820%" y="213" width="0.2132%" height="15" fill="rgb(241,28,37)"/><text x="32.6320%" y="223.50"></text></g><g><title>c10::DefaultCPUAllocator::allocate (1,160 samples, 0.27%)</title><rect x="32.3337%" y="293" width="0.2682%" height="15" fill="rgb(233,93,10)"/><text x="32.5837%" y="303.50"></text></g><g><title>c10::alloc_cpu (1,112 samples, 0.26%)</title><rect x="32.3448%" y="277" width="0.2571%" height="15" fill="rgb(225,113,19)"/><text x="32.5948%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,009 samples, 0.46%)</title><rect x="32.1966%" y="693" width="0.4645%" height="15" fill="rgb(241,2,18)"/><text x="32.4466%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,009 samples, 0.46%)</title><rect x="32.1966%" y="677" width="0.4645%" height="15" fill="rgb(228,207,21)"/><text x="32.4466%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,009 samples, 0.46%)</title><rect x="32.1966%" y="661" width="0.4645%" height="15" fill="rgb(213,211,35)"/><text x="32.4466%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,009 samples, 0.46%)</title><rect x="32.1966%" y="645" width="0.4645%" height="15" fill="rgb(209,83,10)"/><text x="32.4466%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,009 samples, 0.46%)</title><rect x="32.1966%" y="629" width="0.4645%" height="15" fill="rgb(209,164,1)"/><text x="32.4466%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,009 samples, 0.46%)</title><rect x="32.1966%" y="613" width="0.4645%" height="15" fill="rgb(213,184,43)"/><text x="32.4466%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,009 samples, 0.46%)</title><rect x="32.1966%" y="597" width="0.4645%" height="15" fill="rgb(231,61,34)"/><text x="32.4466%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,009 samples, 0.46%)</title><rect x="32.1966%" y="581" width="0.4645%" height="15" fill="rgb(235,75,3)"/><text x="32.4466%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2,009 samples, 0.46%)</title><rect x="32.1966%" y="565" width="0.4645%" height="15" fill="rgb(220,106,47)"/><text x="32.4466%" y="575.50"></text></g><g><title>tch::tensor::&lt;impl tch::wrappers::tensor::Tensor&gt;::of_slice2::{{closure}} (2,009 samples, 0.46%)</title><rect x="32.1966%" y="549" width="0.4645%" height="15" fill="rgb(210,196,33)"/><text x="32.4466%" y="559.50"></text></g><g><title>tch::wrappers::tensor::Tensor::of_slice (2,009 samples, 0.46%)</title><rect x="32.1966%" y="533" width="0.4645%" height="15" fill="rgb(229,154,42)"/><text x="32.4466%" y="543.50"></text></g><g><title>tch::wrappers::tensor::Tensor::f_of_slice (2,009 samples, 0.46%)</title><rect x="32.1966%" y="517" width="0.4645%" height="15" fill="rgb(228,114,26)"/><text x="32.4466%" y="527.50"></text></g><g><title>at_tensor_of_data (2,009 samples, 0.46%)</title><rect x="32.1966%" y="501" width="0.4645%" height="15" fill="rgb(208,144,1)"/><text x="32.4466%" y="511.50"></text></g><g><title>torch::zeros (2,009 samples, 0.46%)</title><rect x="32.1966%" y="485" width="0.4645%" height="15" fill="rgb(239,112,37)"/><text x="32.4466%" y="495.50"></text></g><g><title>at::zeros (2,009 samples, 0.46%)</title><rect x="32.1966%" y="469" width="0.4645%" height="15" fill="rgb(210,96,50)"/><text x="32.4466%" y="479.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;), &amp;at::(anonymous namespace)::zeros&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt; &gt; &gt;, at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;::call (2,009 samples, 0.46%)</title><rect x="32.1966%" y="453" width="0.4645%" height="15" fill="rgb(222,178,2)"/><text x="32.4466%" y="463.50"></text></g><g><title>c10::Dispatcher::redispatch&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt; &gt; (2,009 samples, 0.46%)</title><rect x="32.1966%" y="437" width="0.4645%" height="15" fill="rgb(226,74,18)"/><text x="32.4466%" y="447.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_zeros&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt; &gt; &gt;, at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;::call (2,009 samples, 0.46%)</title><rect x="32.1966%" y="421" width="0.4645%" height="15" fill="rgb(225,67,54)"/><text x="32.4466%" y="431.50"></text></g><g><title>at::native::zeros (2,009 samples, 0.46%)</title><rect x="32.1966%" y="405" width="0.4645%" height="15" fill="rgb(251,92,32)"/><text x="32.4466%" y="415.50"></text></g><g><title>at::empty (2,009 samples, 0.46%)</title><rect x="32.1966%" y="389" width="0.4645%" height="15" fill="rgb(228,149,22)"/><text x="32.4466%" y="399.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::empty_memory_format&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (2,009 samples, 0.46%)</title><rect x="32.1966%" y="373" width="0.4645%" height="15" fill="rgb(243,54,13)"/><text x="32.4466%" y="383.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_empty_memory_format&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (2,009 samples, 0.46%)</title><rect x="32.1966%" y="357" width="0.4645%" height="15" fill="rgb(243,180,28)"/><text x="32.4466%" y="367.50"></text></g><g><title>at::native::empty_cpu (2,009 samples, 0.46%)</title><rect x="32.1966%" y="341" width="0.4645%" height="15" fill="rgb(208,167,24)"/><text x="32.4466%" y="351.50"></text></g><g><title>at::detail::empty_cpu (2,009 samples, 0.46%)</title><rect x="32.1966%" y="325" width="0.4645%" height="15" fill="rgb(245,73,45)"/><text x="32.4466%" y="335.50"></text></g><g><title>at::detail::empty_generic (2,009 samples, 0.46%)</title><rect x="32.1966%" y="309" width="0.4645%" height="15" fill="rgb(237,203,48)"/><text x="32.4466%" y="319.50"></text></g><g><title>at::cat (493 samples, 0.11%)</title><rect x="32.6610%" y="549" width="0.1140%" height="15" fill="rgb(211,197,16)"/><text x="32.9110%" y="559.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;at::Tensor&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_cat&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;at::Tensor&gt;, long&gt; &gt;, at::Tensor (c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;::call (493 samples, 0.11%)</title><rect x="32.6610%" y="533" width="0.1140%" height="15" fill="rgb(243,99,51)"/><text x="32.9110%" y="543.50"></text></g><g><title>at::native::cat (493 samples, 0.11%)</title><rect x="32.6610%" y="517" width="0.1140%" height="15" fill="rgb(215,123,29)"/><text x="32.9110%" y="527.50"></text></g><g><title>at::_cat (493 samples, 0.11%)</title><rect x="32.6610%" y="501" width="0.1140%" height="15" fill="rgb(239,186,37)"/><text x="32.9110%" y="511.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;at::Tensor&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper__cat&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;at::Tensor&gt;, long&gt; &gt;, at::Tensor (c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;::call (493 samples, 0.11%)</title><rect x="32.6610%" y="485" width="0.1140%" height="15" fill="rgb(252,136,39)"/><text x="32.9110%" y="495.50"></text></g><g><title>at::native::_cat_cpu (493 samples, 0.11%)</title><rect x="32.6610%" y="469" width="0.1140%" height="15" fill="rgb(223,213,32)"/><text x="32.9110%" y="479.50"></text></g><g><title>at::detail::make_tensor&lt;c10::TensorImpl, c10::TensorImpl::ImplType, c10::Storage, c10::DispatchKeySet, caffe2::TypeMeta&gt; (495 samples, 0.11%)</title><rect x="32.7750%" y="437" width="0.1144%" height="15" fill="rgb(233,115,5)"/><text x="33.0250%" y="447.50"></text></g><g><title>tch::tensor::&lt;impl tch::wrappers::tensor::Tensor&gt;::of_slice2 (3,267 samples, 0.76%)</title><rect x="32.1966%" y="709" width="0.7553%" height="15" fill="rgb(207,226,44)"/><text x="32.4466%" y="719.50"></text></g><g><title>tch::wrappers::tensor_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::stack (1,258 samples, 0.29%)</title><rect x="32.6610%" y="693" width="0.2908%" height="15" fill="rgb(208,126,0)"/><text x="32.9110%" y="703.50"></text></g><g><title>tch::wrappers::tensor_fallible_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::f_stack (1,258 samples, 0.29%)</title><rect x="32.6610%" y="677" width="0.2908%" height="15" fill="rgb(244,66,21)"/><text x="32.9110%" y="687.50"></text></g><g><title>atg_stack (1,258 samples, 0.29%)</title><rect x="32.6610%" y="661" width="0.2908%" height="15" fill="rgb(222,97,12)"/><text x="32.9110%" y="671.50"></text></g><g><title>at::stack (1,258 samples, 0.29%)</title><rect x="32.6610%" y="645" width="0.2908%" height="15" fill="rgb(219,213,19)"/><text x="32.9110%" y="655.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::DispatchKeySet, c10::ArrayRef&lt;at::Tensor&gt;, long), &amp;torch::autograd::VariableType::(anonymous namespace)::stack&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, c10::ArrayRef&lt;at::Tensor&gt;, long&gt; &gt;, at::Tensor (c10::DispatchKeySet, c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;::call (1,258 samples, 0.29%)</title><rect x="32.6610%" y="629" width="0.2908%" height="15" fill="rgb(252,169,30)"/><text x="32.9110%" y="639.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::stack (1,258 samples, 0.29%)</title><rect x="32.6610%" y="613" width="0.2908%" height="15" fill="rgb(206,32,51)"/><text x="32.9110%" y="623.50"></text></g><g><title>at::redispatch::stack (1,258 samples, 0.29%)</title><rect x="32.6610%" y="597" width="0.2908%" height="15" fill="rgb(250,172,42)"/><text x="32.9110%" y="607.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;at::Tensor&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_stack&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;at::Tensor&gt;, long&gt; &gt;, at::Tensor (c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;::call (1,258 samples, 0.29%)</title><rect x="32.6610%" y="581" width="0.2908%" height="15" fill="rgb(209,34,43)"/><text x="32.9110%" y="591.50"></text></g><g><title>at::native::stack (1,258 samples, 0.29%)</title><rect x="32.6610%" y="565" width="0.2908%" height="15" fill="rgb(223,11,35)"/><text x="32.9110%" y="575.50"></text></g><g><title>at::native::get_stack_inputs (765 samples, 0.18%)</title><rect x="32.7750%" y="549" width="0.1769%" height="15" fill="rgb(251,219,26)"/><text x="33.0250%" y="559.50"></text></g><g><title>at::Tensor::unsqueeze (765 samples, 0.18%)</title><rect x="32.7750%" y="533" width="0.1769%" height="15" fill="rgb(231,119,3)"/><text x="33.0250%" y="543.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_unsqueeze&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, long&gt; &gt;, at::Tensor (at::Tensor const&amp;, long)&gt;::call (765 samples, 0.18%)</title><rect x="32.7750%" y="517" width="0.1769%" height="15" fill="rgb(216,97,11)"/><text x="33.0250%" y="527.50"></text></g><g><title>at::native::unsqueeze (765 samples, 0.18%)</title><rect x="32.7750%" y="501" width="0.1769%" height="15" fill="rgb(223,59,9)"/><text x="33.0250%" y="511.50"></text></g><g><title>at::Tensor::as_strided (765 samples, 0.18%)</title><rect x="32.7750%" y="485" width="0.1769%" height="15" fill="rgb(233,93,31)"/><text x="33.0250%" y="495.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::optional&lt;long&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_as_strided&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::optional&lt;long&gt; &gt; &gt;, at::Tensor (at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::optional&lt;long&gt;)&gt;::call (765 samples, 0.18%)</title><rect x="32.7750%" y="469" width="0.1769%" height="15" fill="rgb(239,81,33)"/><text x="33.0250%" y="479.50"></text></g><g><title>at::native::as_strided_tensorimpl (765 samples, 0.18%)</title><rect x="32.7750%" y="453" width="0.1769%" height="15" fill="rgb(213,120,34)"/><text x="33.0250%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4,127 samples, 0.95%)</title><rect x="32.1966%" y="869" width="0.9541%" height="15" fill="rgb(243,49,53)"/><text x="32.4466%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4,127 samples, 0.95%)</title><rect x="32.1966%" y="853" width="0.9541%" height="15" fill="rgb(247,216,33)"/><text x="32.4466%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,127 samples, 0.95%)</title><rect x="32.1966%" y="837" width="0.9541%" height="15" fill="rgb(226,26,14)"/><text x="32.4466%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4,127 samples, 0.95%)</title><rect x="32.1966%" y="821" width="0.9541%" height="15" fill="rgb(215,49,53)"/><text x="32.4466%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4,127 samples, 0.95%)</title><rect x="32.1966%" y="805" width="0.9541%" height="15" fill="rgb(245,162,40)"/><text x="32.4466%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4,127 samples, 0.95%)</title><rect x="32.1966%" y="789" width="0.9541%" height="15" fill="rgb(229,68,17)"/><text x="32.4466%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,127 samples, 0.95%)</title><rect x="32.1966%" y="773" width="0.9541%" height="15" fill="rgb(213,182,10)"/><text x="32.4466%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4,127 samples, 0.95%)</title><rect x="32.1966%" y="757" width="0.9541%" height="15" fill="rgb(245,125,30)"/><text x="32.4466%" y="767.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4,127 samples, 0.95%)</title><rect x="32.1966%" y="741" width="0.9541%" height="15" fill="rgb(232,202,2)"/><text x="32.4466%" y="751.50"></text></g><g><title>mcts_policy::training::generate_t_wells::{{closure}} (4,127 samples, 0.95%)</title><rect x="32.1966%" y="725" width="0.9541%" height="15" fill="rgb(237,140,51)"/><text x="32.4466%" y="735.50"></text></g><g><title>tch::tensor::&lt;impl tch::wrappers::tensor::Tensor&gt;::to_device (860 samples, 0.20%)</title><rect x="32.9519%" y="709" width="0.1988%" height="15" fill="rgb(236,157,25)"/><text x="33.2019%" y="719.50"></text></g><g><title>tch::wrappers::tensor_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::to (860 samples, 0.20%)</title><rect x="32.9519%" y="693" width="0.1988%" height="15" fill="rgb(219,209,0)"/><text x="33.2019%" y="703.50"></text></g><g><title>tch::wrappers::tensor_fallible_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::f_to (860 samples, 0.20%)</title><rect x="32.9519%" y="677" width="0.1988%" height="15" fill="rgb(240,116,54)"/><text x="33.2019%" y="687.50"></text></g><g><title>atg_to (860 samples, 0.20%)</title><rect x="32.9519%" y="661" width="0.1988%" height="15" fill="rgb(216,10,36)"/><text x="33.2019%" y="671.50"></text></g><g><title>at::Tensor::to (860 samples, 0.20%)</title><rect x="32.9519%" y="645" width="0.1988%" height="15" fill="rgb(222,72,44)"/><text x="33.2019%" y="655.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_to_dtype_layout&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor (at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (860 samples, 0.20%)</title><rect x="32.9519%" y="629" width="0.1988%" height="15" fill="rgb(232,159,9)"/><text x="33.2019%" y="639.50"></text></g><g><title>at::native::to (860 samples, 0.20%)</title><rect x="32.9519%" y="613" width="0.1988%" height="15" fill="rgb(210,39,32)"/><text x="33.2019%" y="623.50"></text></g><g><title>at::empty_strided (553 samples, 0.13%)</title><rect x="33.0228%" y="597" width="0.1278%" height="15" fill="rgb(216,194,45)"/><text x="33.2728%" y="607.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;), &amp;at::(anonymous namespace)::empty_strided&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt; &gt; &gt;, at::Tensor (c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;::call (553 samples, 0.13%)</title><rect x="33.0228%" y="581" width="0.1278%" height="15" fill="rgb(218,18,35)"/><text x="33.2728%" y="591.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_empty_strided&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt; &gt; &gt;, at::Tensor (c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;::call (553 samples, 0.13%)</title><rect x="33.0228%" y="565" width="0.1278%" height="15" fill="rgb(207,83,51)"/><text x="33.2728%" y="575.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_empty_strided (553 samples, 0.13%)</title><rect x="33.0228%" y="549" width="0.1278%" height="15" fill="rgb(225,63,43)"/><text x="33.2728%" y="559.50"></text></g><g><title>mcts_policy::game_rules::generate_t_wells (4,153 samples, 0.96%)</title><rect x="32.1966%" y="885" width="0.9601%" height="15" fill="rgb(207,57,36)"/><text x="32.4466%" y="895.50"></text></g><g><title>tch::wrappers::tensor::Tensor::copy_data (685 samples, 0.16%)</title><rect x="33.1567%" y="661" width="0.1584%" height="15" fill="rgb(216,99,33)"/><text x="33.4067%" y="671.50"></text></g><g><title>tch::wrappers::tensor::Tensor::f_copy_data (685 samples, 0.16%)</title><rect x="33.1567%" y="645" width="0.1584%" height="15" fill="rgb(225,42,16)"/><text x="33.4067%" y="655.50"></text></g><g><title>at_copy_data (685 samples, 0.16%)</title><rect x="33.1567%" y="629" width="0.1584%" height="15" fill="rgb(220,201,45)"/><text x="33.4067%" y="639.50"></text></g><g><title>at::Tensor::to (685 samples, 0.16%)</title><rect x="33.1567%" y="613" width="0.1584%" height="15" fill="rgb(225,33,4)"/><text x="33.4067%" y="623.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_to_dtype_layout&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor (at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (685 samples, 0.16%)</title><rect x="33.1567%" y="597" width="0.1584%" height="15" fill="rgb(224,33,50)"/><text x="33.4067%" y="607.50"></text></g><g><title>at::native::to (685 samples, 0.16%)</title><rect x="33.1567%" y="581" width="0.1584%" height="15" fill="rgb(246,198,51)"/><text x="33.4067%" y="591.50"></text></g><g><title>mcts_policy::game_graph::play_n_games (15,115 samples, 3.49%)</title><rect x="29.9688%" y="997" width="3.4945%" height="15" fill="rgb(205,22,4)"/><text x="30.2188%" y="1007.50">mct..</text></g><g><title>mcts_policy::game_graph::play_single_game (15,115 samples, 3.49%)</title><rect x="29.9688%" y="981" width="3.4945%" height="15" fill="rgb(206,3,8)"/><text x="30.2188%" y="991.50">mct..</text></g><g><title>mcts_policy::game_graph::play_move (15,115 samples, 3.49%)</title><rect x="29.9688%" y="965" width="3.4945%" height="15" fill="rgb(251,23,15)"/><text x="30.2188%" y="975.50">mct..</text></g><g><title>mcts_policy::game_graph::explore_move (15,115 samples, 3.49%)</title><rect x="29.9688%" y="949" width="3.4945%" height="15" fill="rgb(252,88,28)"/><text x="30.2188%" y="959.50">mct..</text></g><g><title>mcts_policy::game_graph::find_best_child (15,107 samples, 3.49%)</title><rect x="29.9707%" y="933" width="3.4926%" height="15" fill="rgb(212,127,14)"/><text x="30.2207%" y="943.50">mct..</text></g><g><title>mcts_policy::game_rules::possible_moves (15,107 samples, 3.49%)</title><rect x="29.9707%" y="917" width="3.4926%" height="15" fill="rgb(247,145,37)"/><text x="30.2207%" y="927.50">mct..</text></g><g><title>mcts_policy::game_rules::net_pass (15,107 samples, 3.49%)</title><rect x="29.9707%" y="901" width="3.4926%" height="15" fill="rgb(209,117,53)"/><text x="30.2207%" y="911.50">mct..</text></g><g><title>tch::tensor::convert::&lt;impl core::convert::From&lt;tch::wrappers::tensor::Tensor&gt; for alloc::vec::Vec&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (1,326 samples, 0.31%)</title><rect x="33.1567%" y="885" width="0.3066%" height="15" fill="rgb(212,90,42)"/><text x="33.4067%" y="895.50"></text></g><g><title>tch::tensor::convert::&lt;impl core::convert::From&lt;&amp;tch::wrappers::tensor::Tensor&gt; for alloc::vec::Vec&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (1,326 samples, 0.31%)</title><rect x="33.1567%" y="869" width="0.3066%" height="15" fill="rgb(218,164,37)"/><text x="33.4067%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,326 samples, 0.31%)</title><rect x="33.1567%" y="853" width="0.3066%" height="15" fill="rgb(246,65,34)"/><text x="33.4067%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,326 samples, 0.31%)</title><rect x="33.1567%" y="837" width="0.3066%" height="15" fill="rgb(231,100,33)"/><text x="33.4067%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,326 samples, 0.31%)</title><rect x="33.1567%" y="821" width="0.3066%" height="15" fill="rgb(228,126,14)"/><text x="33.4067%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,326 samples, 0.31%)</title><rect x="33.1567%" y="805" width="0.3066%" height="15" fill="rgb(215,173,21)"/><text x="33.4067%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,326 samples, 0.31%)</title><rect x="33.1567%" y="789" width="0.3066%" height="15" fill="rgb(210,6,40)"/><text x="33.4067%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,326 samples, 0.31%)</title><rect x="33.1567%" y="773" width="0.3066%" height="15" fill="rgb(212,48,18)"/><text x="33.4067%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,326 samples, 0.31%)</title><rect x="33.1567%" y="757" width="0.3066%" height="15" fill="rgb(230,214,11)"/><text x="33.4067%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,326 samples, 0.31%)</title><rect x="33.1567%" y="741" width="0.3066%" height="15" fill="rgb(254,105,39)"/><text x="33.4067%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,326 samples, 0.31%)</title><rect x="33.1567%" y="725" width="0.3066%" height="15" fill="rgb(245,158,5)"/><text x="33.4067%" y="735.50"></text></g><g><title>tch::tensor::convert::&lt;impl core::convert::From&lt;&amp;tch::wrappers::tensor::Tensor&gt; for alloc::vec::Vec&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from::{{closure}} (1,326 samples, 0.31%)</title><rect x="33.1567%" y="709" width="0.3066%" height="15" fill="rgb(249,208,11)"/><text x="33.4067%" y="719.50"></text></g><g><title>tch::tensor::convert::&lt;impl core::convert::From&lt;tch::wrappers::tensor::Tensor&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from (1,326 samples, 0.31%)</title><rect x="33.1567%" y="693" width="0.3066%" height="15" fill="rgb(210,39,28)"/><text x="33.4067%" y="703.50"></text></g><g><title>tch::tensor::convert::&lt;impl core::convert::From&lt;&amp;tch::wrappers::tensor::Tensor&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from (1,326 samples, 0.31%)</title><rect x="33.1567%" y="677" width="0.3066%" height="15" fill="rgb(211,56,53)"/><text x="33.4067%" y="687.50"></text></g><g><title>tch::wrappers::tensor_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::totype (641 samples, 0.15%)</title><rect x="33.3151%" y="661" width="0.1482%" height="15" fill="rgb(226,201,30)"/><text x="33.5651%" y="671.50"></text></g><g><title>tch::wrappers::tensor_fallible_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::f_totype (641 samples, 0.15%)</title><rect x="33.3151%" y="645" width="0.1482%" height="15" fill="rgb(239,101,34)"/><text x="33.5651%" y="655.50"></text></g><g><title>atg_totype (641 samples, 0.15%)</title><rect x="33.3151%" y="629" width="0.1482%" height="15" fill="rgb(226,209,5)"/><text x="33.5651%" y="639.50"></text></g><g><title>at::Tensor::toType (641 samples, 0.15%)</title><rect x="33.3151%" y="613" width="0.1482%" height="15" fill="rgb(250,105,47)"/><text x="33.5651%" y="623.50"></text></g><g><title>at::Tensor::to (641 samples, 0.15%)</title><rect x="33.3151%" y="597" width="0.1482%" height="15" fill="rgb(230,72,3)"/><text x="33.5651%" y="607.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_to_dtype_layout&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor (at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (641 samples, 0.15%)</title><rect x="33.3151%" y="581" width="0.1482%" height="15" fill="rgb(232,218,39)"/><text x="33.5651%" y="591.50"></text></g><g><title>at::native::to (641 samples, 0.15%)</title><rect x="33.3151%" y="565" width="0.1482%" height="15" fill="rgb(248,166,6)"/><text x="33.5651%" y="575.50"></text></g><g><title>mcts_policy::game_rules::legal_moves (472 samples, 0.11%)</title><rect x="33.4734%" y="981" width="0.1091%" height="15" fill="rgb(247,89,20)"/><text x="33.7234%" y="991.50"></text></g><g><title>_int_malloc (523 samples, 0.12%)</title><rect x="34.2475%" y="677" width="0.1209%" height="15" fill="rgb(248,130,54)"/><text x="34.4975%" y="687.50"></text></g><g><title>operator new (581 samples, 0.13%)</title><rect x="34.2352%" y="709" width="0.1343%" height="15" fill="rgb(234,196,4)"/><text x="34.4852%" y="719.50"></text></g><g><title>__GI___libc_malloc (580 samples, 0.13%)</title><rect x="34.2354%" y="693" width="0.1341%" height="15" fill="rgb(250,143,31)"/><text x="34.4854%" y="703.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (634 samples, 0.15%)</title><rect x="34.2294%" y="725" width="0.1466%" height="15" fill="rgb(211,110,34)"/><text x="34.4794%" y="735.50"></text></g><g><title>&lt;tch::nn::conv::Conv&lt;[i64: 2]&gt; as tch::nn::module::Module&gt;::forward (3,456 samples, 0.80%)</title><rect x="33.5826%" y="933" width="0.7990%" height="15" fill="rgb(215,124,48)"/><text x="33.8326%" y="943.50"></text></g><g><title>tch::wrappers::tensor_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::conv2d (3,456 samples, 0.80%)</title><rect x="33.5826%" y="917" width="0.7990%" height="15" fill="rgb(216,46,13)"/><text x="33.8326%" y="927.50"></text></g><g><title>tch::wrappers::tensor_fallible_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::f_conv2d (3,456 samples, 0.80%)</title><rect x="33.5826%" y="901" width="0.7990%" height="15" fill="rgb(205,184,25)"/><text x="33.8326%" y="911.50"></text></g><g><title>atg_conv2d (3,456 samples, 0.80%)</title><rect x="33.5826%" y="885" width="0.7990%" height="15" fill="rgb(228,1,10)"/><text x="33.8326%" y="895.50"></text></g><g><title>at::conv2d (3,456 samples, 0.80%)</title><rect x="33.5826%" y="869" width="0.7990%" height="15" fill="rgb(213,116,27)"/><text x="33.8326%" y="879.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_conv2d&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long)&gt;::call (3,456 samples, 0.80%)</title><rect x="33.5826%" y="853" width="0.7990%" height="15" fill="rgb(241,95,50)"/><text x="33.8326%" y="863.50"></text></g><g><title>at::native::conv2d (3,456 samples, 0.80%)</title><rect x="33.5826%" y="837" width="0.7990%" height="15" fill="rgb(238,48,32)"/><text x="33.8326%" y="847.50"></text></g><g><title>at::convolution (3,456 samples, 0.80%)</title><rect x="33.5826%" y="821" width="0.7990%" height="15" fill="rgb(235,113,49)"/><text x="33.8326%" y="831.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long)&gt;::call (3,456 samples, 0.80%)</title><rect x="33.5826%" y="805" width="0.7990%" height="15" fill="rgb(205,127,43)"/><text x="33.8326%" y="815.50"></text></g><g><title>at::native::convolution (3,456 samples, 0.80%)</title><rect x="33.5826%" y="789" width="0.7990%" height="15" fill="rgb(250,162,2)"/><text x="33.8326%" y="799.50"></text></g><g><title>at::_convolution (3,456 samples, 0.80%)</title><rect x="33.5826%" y="773" width="0.7990%" height="15" fill="rgb(220,13,41)"/><text x="33.8326%" y="783.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper__convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long, bool, bool, bool, bool)&gt;::call (3,456 samples, 0.80%)</title><rect x="33.5826%" y="757" width="0.7990%" height="15" fill="rgb(249,221,25)"/><text x="33.8326%" y="767.50"></text></g><g><title>at::native::_convolution (3,456 samples, 0.80%)</title><rect x="33.5826%" y="741" width="0.7990%" height="15" fill="rgb(215,208,19)"/><text x="33.8326%" y="751.50"></text></g><g><title>tch::nn::module::&lt;impl tch::wrappers::tensor::Tensor&gt;::apply (3,492 samples, 0.81%)</title><rect x="33.5826%" y="949" width="0.8073%" height="15" fill="rgb(236,175,2)"/><text x="33.8326%" y="959.50"></text></g><g><title>at::TensorIterator::unary_op (537 samples, 0.12%)</title><rect x="34.3959%" y="677" width="0.1241%" height="15" fill="rgb(241,52,2)"/><text x="34.6459%" y="687.50"></text></g><g><title>at::TensorIteratorBase::build_unary_op (537 samples, 0.12%)</title><rect x="34.3959%" y="661" width="0.1241%" height="15" fill="rgb(248,140,14)"/><text x="34.6459%" y="671.50"></text></g><g><title>at::TensorIteratorBase::build (537 samples, 0.12%)</title><rect x="34.3959%" y="645" width="0.1241%" height="15" fill="rgb(253,22,42)"/><text x="34.6459%" y="655.50"></text></g><g><title>at::TensorIteratorBase::fast_set_up (537 samples, 0.12%)</title><rect x="34.3959%" y="629" width="0.1241%" height="15" fill="rgb(234,61,47)"/><text x="34.6459%" y="639.50"></text></g><g><title>at::TensorIterator::set_output (537 samples, 0.12%)</title><rect x="34.3959%" y="613" width="0.1241%" height="15" fill="rgb(208,226,15)"/><text x="34.6459%" y="623.50"></text></g><g><title>at::native::resize_output (537 samples, 0.12%)</title><rect x="34.3959%" y="597" width="0.1241%" height="15" fill="rgb(217,221,4)"/><text x="34.6459%" y="607.50"></text></g><g><title>at::Tensor::resize_ (537 samples, 0.12%)</title><rect x="34.3959%" y="581" width="0.1241%" height="15" fill="rgb(212,174,34)"/><text x="34.6459%" y="591.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor const&amp; (at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_resize_&gt;, at::Tensor const&amp;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor const&amp; (at::Tensor const&amp;, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (537 samples, 0.12%)</title><rect x="34.3959%" y="565" width="0.1241%" height="15" fill="rgb(253,83,4)"/><text x="34.6459%" y="575.50"></text></g><g><title>at::native::resize_cuda_ (537 samples, 0.12%)</title><rect x="34.3959%" y="549" width="0.1241%" height="15" fill="rgb(250,195,49)"/><text x="34.6459%" y="559.50"></text></g><g><title>THCStorage_resizeBytes (537 samples, 0.12%)</title><rect x="34.3959%" y="533" width="0.1241%" height="15" fill="rgb(241,192,25)"/><text x="34.6459%" y="543.50"></text></g><g><title>c10::cuda::CUDACachingAllocator::CudaCachingAllocator::allocate (533 samples, 0.12%)</title><rect x="34.3968%" y="517" width="0.1232%" height="15" fill="rgb(208,124,10)"/><text x="34.6468%" y="527.50"></text></g><g><title>c10::cuda::CUDACachingAllocator::THCCachingAllocator::malloc (533 samples, 0.12%)</title><rect x="34.3968%" y="501" width="0.1232%" height="15" fill="rgb(222,33,0)"/><text x="34.6468%" y="511.50"></text></g><g><title>c10::cuda::CUDACachingAllocator::DeviceCachingAllocator::malloc (533 samples, 0.12%)</title><rect x="34.3968%" y="485" width="0.1232%" height="15" fill="rgb(234,209,28)"/><text x="34.6468%" y="495.50"></text></g><g><title>&lt;mcts_policy::neural_net::Net as tch::nn::module::ModuleT&gt;::forward_t (4,493 samples, 1.04%)</title><rect x="33.5826%" y="965" width="1.0387%" height="15" fill="rgb(224,11,23)"/><text x="33.8326%" y="975.50"></text></g><g><title>tch::wrappers::tensor_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::relu (975 samples, 0.23%)</title><rect x="34.3959%" y="949" width="0.2254%" height="15" fill="rgb(232,99,1)"/><text x="34.6459%" y="959.50"></text></g><g><title>tch::wrappers::tensor_fallible_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::f_relu (975 samples, 0.23%)</title><rect x="34.3959%" y="933" width="0.2254%" height="15" fill="rgb(237,95,45)"/><text x="34.6459%" y="943.50"></text></g><g><title>atg_relu (975 samples, 0.23%)</title><rect x="34.3959%" y="917" width="0.2254%" height="15" fill="rgb(208,109,11)"/><text x="34.6459%" y="927.50"></text></g><g><title>at::relu (975 samples, 0.23%)</title><rect x="34.3959%" y="901" width="0.2254%" height="15" fill="rgb(216,190,48)"/><text x="34.6459%" y="911.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::relu&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;&gt; &gt;, at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;)&gt;::call (975 samples, 0.23%)</title><rect x="34.3959%" y="885" width="0.2254%" height="15" fill="rgb(251,171,36)"/><text x="34.6459%" y="895.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::relu (975 samples, 0.23%)</title><rect x="34.3959%" y="869" width="0.2254%" height="15" fill="rgb(230,62,22)"/><text x="34.6459%" y="879.50"></text></g><g><title>at::redispatch::relu (975 samples, 0.23%)</title><rect x="34.3959%" y="853" width="0.2254%" height="15" fill="rgb(225,114,35)"/><text x="34.6459%" y="863.50"></text></g><g><title>c10::Dispatcher::redispatch&lt;at::Tensor, at::Tensor const&amp;&gt; (975 samples, 0.23%)</title><rect x="34.3959%" y="837" width="0.2254%" height="15" fill="rgb(215,118,42)"/><text x="34.6459%" y="847.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_relu&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;&gt; &gt;, at::Tensor (at::Tensor const&amp;)&gt;::call (975 samples, 0.23%)</title><rect x="34.3959%" y="821" width="0.2254%" height="15" fill="rgb(243,119,21)"/><text x="34.6459%" y="831.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_relu (975 samples, 0.23%)</title><rect x="34.3959%" y="805" width="0.2254%" height="15" fill="rgb(252,177,53)"/><text x="34.6459%" y="815.50"></text></g><g><title>at::native::relu (975 samples, 0.23%)</title><rect x="34.3959%" y="789" width="0.2254%" height="15" fill="rgb(237,209,29)"/><text x="34.6459%" y="799.50"></text></g><g><title>at::clamp_min (975 samples, 0.23%)</title><rect x="34.3959%" y="773" width="0.2254%" height="15" fill="rgb(212,65,23)"/><text x="34.6459%" y="783.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_clamp_min&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor (at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (975 samples, 0.23%)</title><rect x="34.3959%" y="757" width="0.2254%" height="15" fill="rgb(230,222,46)"/><text x="34.6459%" y="767.50"></text></g><g><title>at::native::clamp_min (975 samples, 0.23%)</title><rect x="34.3959%" y="741" width="0.2254%" height="15" fill="rgb(215,135,32)"/><text x="34.6459%" y="751.50"></text></g><g><title>at::clamp_min_outf (975 samples, 0.23%)</title><rect x="34.3959%" y="725" width="0.2254%" height="15" fill="rgb(246,101,22)"/><text x="34.6459%" y="735.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_clamp_min_out_out (975 samples, 0.23%)</title><rect x="34.3959%" y="709" width="0.2254%" height="15" fill="rgb(206,107,13)"/><text x="34.6459%" y="719.50"></text></g><g><title>at::native::clamp_min_out (975 samples, 0.23%)</title><rect x="34.3959%" y="693" width="0.2254%" height="15" fill="rgb(250,100,44)"/><text x="34.6459%" y="703.50"></text></g><g><title>at::native::(anonymous namespace)::clamp_min_scalar_kernel_impl (438 samples, 0.10%)</title><rect x="34.5200%" y="677" width="0.1013%" height="15" fill="rgb(231,147,38)"/><text x="34.7700%" y="687.50"></text></g><g><title>at::native::gpu_kernel&lt;__nv_hdl_wrapper_t&lt;false, false, __nv_dl_tag&lt;void (*)(at::TensorIterator&amp;, c10::Scalar), &amp;at::native::(anonymous namespace)::clamp_min_scalar_kernel_impl, 4u&gt;, float (float), float&gt; &gt; (438 samples, 0.10%)</title><rect x="34.5200%" y="661" width="0.1013%" height="15" fill="rgb(229,8,40)"/><text x="34.7700%" y="671.50"></text></g><g><title>at::native::gpu_kernel_impl&lt;__nv_hdl_wrapper_t&lt;false, false, __nv_dl_tag&lt;void (*)(at::TensorIterator&amp;, c10::Scalar), &amp;at::native::(anonymous namespace)::clamp_min_scalar_kernel_impl, 4u&gt;, float (float), float&gt; &gt; (438 samples, 0.10%)</title><rect x="34.5200%" y="645" width="0.1013%" height="15" fill="rgb(221,135,30)"/><text x="34.7700%" y="655.50"></text></g><g><title>[libcuda.so.460.91.03] (462 samples, 0.11%)</title><rect x="34.6315%" y="421" width="0.1068%" height="15" fill="rgb(249,193,18)"/><text x="34.8815%" y="431.50"></text></g><g><title>cudaMemcpyAsync (510 samples, 0.12%)</title><rect x="34.6215%" y="517" width="0.1179%" height="15" fill="rgb(209,133,39)"/><text x="34.8715%" y="527.50"></text></g><g><title>[libcudart-6d56b25a.so.11.0] (510 samples, 0.12%)</title><rect x="34.6215%" y="501" width="0.1179%" height="15" fill="rgb(232,100,14)"/><text x="34.8715%" y="511.50"></text></g><g><title>[libcudart-6d56b25a.so.11.0] (510 samples, 0.12%)</title><rect x="34.6215%" y="485" width="0.1179%" height="15" fill="rgb(224,185,1)"/><text x="34.8715%" y="495.50"></text></g><g><title>cuMemcpyHtoDAsync_v2 (510 samples, 0.12%)</title><rect x="34.6215%" y="469" width="0.1179%" height="15" fill="rgb(223,139,8)"/><text x="34.8715%" y="479.50"></text></g><g><title>[libcuda.so.460.91.03] (510 samples, 0.12%)</title><rect x="34.6215%" y="453" width="0.1179%" height="15" fill="rgb(232,213,38)"/><text x="34.8715%" y="463.50"></text></g><g><title>[libcuda.so.460.91.03] (510 samples, 0.12%)</title><rect x="34.6215%" y="437" width="0.1179%" height="15" fill="rgb(207,94,22)"/><text x="34.8715%" y="447.50"></text></g><g><title>[libcuda.so.460.91.03] (3,224 samples, 0.75%)</title><rect x="35.0453%" y="405" width="0.7454%" height="15" fill="rgb(219,183,54)"/><text x="35.2953%" y="415.50"></text></g><g><title>[libcuda.so.460.91.03] (2,979 samples, 0.69%)</title><rect x="35.1019%" y="389" width="0.6887%" height="15" fill="rgb(216,185,54)"/><text x="35.3519%" y="399.50"></text></g><g><title>[libcuda.so.460.91.03] (2,921 samples, 0.68%)</title><rect x="35.1154%" y="373" width="0.6753%" height="15" fill="rgb(254,217,39)"/><text x="35.3654%" y="383.50"></text></g><g><title>[libcuda.so.460.91.03] (2,342 samples, 0.54%)</title><rect x="35.2492%" y="357" width="0.5414%" height="15" fill="rgb(240,178,23)"/><text x="35.4992%" y="367.50"></text></g><g><title>[libcuda.so.460.91.03] (3,947 samples, 0.91%)</title><rect x="34.9736%" y="421" width="0.9125%" height="15" fill="rgb(218,11,47)"/><text x="35.2236%" y="431.50"></text></g><g><title>mcts_policy::game_rules::generate_t_wells (5,501 samples, 1.27%)</title><rect x="34.6215%" y="965" width="1.2718%" height="15" fill="rgb(218,51,51)"/><text x="34.8715%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5,501 samples, 1.27%)</title><rect x="34.6215%" y="949" width="1.2718%" height="15" fill="rgb(238,126,27)"/><text x="34.8715%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5,501 samples, 1.27%)</title><rect x="34.6215%" y="933" width="1.2718%" height="15" fill="rgb(249,202,22)"/><text x="34.8715%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5,501 samples, 1.27%)</title><rect x="34.6215%" y="917" width="1.2718%" height="15" fill="rgb(254,195,49)"/><text x="34.8715%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5,501 samples, 1.27%)</title><rect x="34.6215%" y="901" width="1.2718%" height="15" fill="rgb(208,123,14)"/><text x="34.8715%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5,501 samples, 1.27%)</title><rect x="34.6215%" y="885" width="1.2718%" height="15" fill="rgb(224,200,8)"/><text x="34.8715%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5,501 samples, 1.27%)</title><rect x="34.6215%" y="869" width="1.2718%" height="15" fill="rgb(217,61,36)"/><text x="34.8715%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5,501 samples, 1.27%)</title><rect x="34.6215%" y="853" width="1.2718%" height="15" fill="rgb(206,35,45)"/><text x="34.8715%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5,501 samples, 1.27%)</title><rect x="34.6215%" y="837" width="1.2718%" height="15" fill="rgb(217,65,33)"/><text x="34.8715%" y="847.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5,501 samples, 1.27%)</title><rect x="34.6215%" y="821" width="1.2718%" height="15" fill="rgb(222,158,48)"/><text x="34.8715%" y="831.50"></text></g><g><title>mcts_policy::training::generate_t_wells::{{closure}} (5,501 samples, 1.27%)</title><rect x="34.6215%" y="805" width="1.2718%" height="15" fill="rgb(254,2,54)"/><text x="34.8715%" y="815.50"></text></g><g><title>tch::tensor::&lt;impl tch::wrappers::tensor::Tensor&gt;::to_device (5,501 samples, 1.27%)</title><rect x="34.6215%" y="789" width="1.2718%" height="15" fill="rgb(250,143,38)"/><text x="34.8715%" y="799.50"></text></g><g><title>tch::wrappers::tensor_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::to (5,501 samples, 1.27%)</title><rect x="34.6215%" y="773" width="1.2718%" height="15" fill="rgb(248,25,0)"/><text x="34.8715%" y="783.50"></text></g><g><title>tch::wrappers::tensor_fallible_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::f_to (5,501 samples, 1.27%)</title><rect x="34.6215%" y="757" width="1.2718%" height="15" fill="rgb(206,152,27)"/><text x="34.8715%" y="767.50"></text></g><g><title>atg_to (5,501 samples, 1.27%)</title><rect x="34.6215%" y="741" width="1.2718%" height="15" fill="rgb(240,77,30)"/><text x="34.8715%" y="751.50"></text></g><g><title>at::Tensor::to (5,501 samples, 1.27%)</title><rect x="34.6215%" y="725" width="1.2718%" height="15" fill="rgb(231,5,3)"/><text x="34.8715%" y="735.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_to_dtype_layout&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor (at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (5,501 samples, 1.27%)</title><rect x="34.6215%" y="709" width="1.2718%" height="15" fill="rgb(207,226,32)"/><text x="34.8715%" y="719.50"></text></g><g><title>at::native::to (5,501 samples, 1.27%)</title><rect x="34.6215%" y="693" width="1.2718%" height="15" fill="rgb(222,207,47)"/><text x="34.8715%" y="703.50"></text></g><g><title>at::Tensor::copy_ (5,501 samples, 1.27%)</title><rect x="34.6215%" y="677" width="1.2718%" height="15" fill="rgb(229,115,45)"/><text x="34.8715%" y="687.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool), &amp;torch::autograd::VariableType::(anonymous namespace)::copy_&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool)&gt;::call (5,501 samples, 1.27%)</title><rect x="34.6215%" y="661" width="1.2718%" height="15" fill="rgb(224,191,6)"/><text x="34.8715%" y="671.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::copy_ (5,501 samples, 1.27%)</title><rect x="34.6215%" y="645" width="1.2718%" height="15" fill="rgb(230,227,24)"/><text x="34.8715%" y="655.50"></text></g><g><title>at::redispatch::copy_ (5,501 samples, 1.27%)</title><rect x="34.6215%" y="629" width="1.2718%" height="15" fill="rgb(228,80,19)"/><text x="34.8715%" y="639.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool), &amp;torch::ADInplaceOrView::copy_&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool)&gt;::call (5,501 samples, 1.27%)</title><rect x="34.6215%" y="613" width="1.2718%" height="15" fill="rgb(247,229,0)"/><text x="34.8715%" y="623.50"></text></g><g><title>torch::ADInplaceOrView::copy_ (5,501 samples, 1.27%)</title><rect x="34.6215%" y="597" width="1.2718%" height="15" fill="rgb(237,194,15)"/><text x="34.8715%" y="607.50"></text></g><g><title>at::redispatch::copy_ (5,501 samples, 1.27%)</title><rect x="34.6215%" y="581" width="1.2718%" height="15" fill="rgb(219,203,20)"/><text x="34.8715%" y="591.50"></text></g><g><title>at::native::copy_ (5,501 samples, 1.27%)</title><rect x="34.6215%" y="565" width="1.2718%" height="15" fill="rgb(234,128,8)"/><text x="34.8715%" y="575.50"></text></g><g><title>at::native::copy_impl (5,501 samples, 1.27%)</title><rect x="34.6215%" y="549" width="1.2718%" height="15" fill="rgb(248,202,8)"/><text x="34.8715%" y="559.50"></text></g><g><title>at::native::copy_kernel_cuda (5,501 samples, 1.27%)</title><rect x="34.6215%" y="533" width="1.2718%" height="15" fill="rgb(206,104,37)"/><text x="34.8715%" y="543.50"></text></g><g><title>cudaStreamSynchronize (4,991 samples, 1.15%)</title><rect x="34.7394%" y="517" width="1.1539%" height="15" fill="rgb(223,8,27)"/><text x="34.9894%" y="527.50"></text></g><g><title>[libcudart-6d56b25a.so.11.0] (4,991 samples, 1.15%)</title><rect x="34.7394%" y="501" width="1.1539%" height="15" fill="rgb(216,217,28)"/><text x="34.9894%" y="511.50"></text></g><g><title>cuStreamSynchronize (4,991 samples, 1.15%)</title><rect x="34.7394%" y="485" width="1.1539%" height="15" fill="rgb(249,199,1)"/><text x="34.9894%" y="495.50"></text></g><g><title>[libcuda.so.460.91.03] (4,991 samples, 1.15%)</title><rect x="34.7394%" y="469" width="1.1539%" height="15" fill="rgb(240,85,17)"/><text x="34.9894%" y="479.50"></text></g><g><title>[libcuda.so.460.91.03] (4,991 samples, 1.15%)</title><rect x="34.7394%" y="453" width="1.1539%" height="15" fill="rgb(206,108,45)"/><text x="34.9894%" y="463.50"></text></g><g><title>[libcuda.so.460.91.03] (4,991 samples, 1.15%)</title><rect x="34.7394%" y="437" width="1.1539%" height="15" fill="rgb(245,210,41)"/><text x="34.9894%" y="447.50"></text></g><g><title>mcts_policy::game_rules::possible_moves (10,651 samples, 2.46%)</title><rect x="33.4695%" y="997" width="2.4624%" height="15" fill="rgb(206,13,37)"/><text x="33.7195%" y="1007.50">mc..</text></g><g><title>mcts_policy::game_rules::net_pass (10,162 samples, 2.35%)</title><rect x="33.5826%" y="981" width="2.3494%" height="15" fill="rgb(250,61,18)"/><text x="33.8326%" y="991.50">m..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (488 samples, 0.11%)</title><rect x="35.9999%" y="869" width="0.1128%" height="15" fill="rgb(235,172,48)"/><text x="36.2499%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (486 samples, 0.11%)</title><rect x="36.0004%" y="853" width="0.1124%" height="15" fill="rgb(249,201,17)"/><text x="36.2504%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (486 samples, 0.11%)</title><rect x="36.0004%" y="837" width="0.1124%" height="15" fill="rgb(219,208,6)"/><text x="36.2504%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (486 samples, 0.11%)</title><rect x="36.0004%" y="821" width="0.1124%" height="15" fill="rgb(248,31,23)"/><text x="36.2504%" y="831.50"></text></g><g><title>&lt;mcts_policy::state::State as core::clone::Clone&gt;::clone (506 samples, 0.12%)</title><rect x="35.9987%" y="885" width="0.1170%" height="15" fill="rgb(245,15,42)"/><text x="36.2487%" y="895.50"></text></g><g><title>mcts_policy::game_graph::all_parents_propagate (1,433 samples, 0.33%)</title><rect x="35.9953%" y="901" width="0.3313%" height="15" fill="rgb(222,217,39)"/><text x="36.2453%" y="911.50"></text></g><g><title>mcts_policy::game_graph::backpropagate (1,496 samples, 0.35%)</title><rect x="35.9953%" y="917" width="0.3459%" height="15" fill="rgb(210,219,27)"/><text x="36.2453%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (585 samples, 0.14%)</title><rect x="36.3562%" y="885" width="0.1352%" height="15" fill="rgb(252,166,36)"/><text x="36.6062%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (578 samples, 0.13%)</title><rect x="36.3578%" y="869" width="0.1336%" height="15" fill="rgb(245,132,34)"/><text x="36.6078%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (578 samples, 0.13%)</title><rect x="36.3578%" y="853" width="0.1336%" height="15" fill="rgb(236,54,3)"/><text x="36.6078%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (578 samples, 0.13%)</title><rect x="36.3578%" y="837" width="0.1336%" height="15" fill="rgb(241,173,43)"/><text x="36.6078%" y="847.50"></text></g><g><title>&lt;mcts_policy::state::State as core::clone::Clone&gt;::clone (614 samples, 0.14%)</title><rect x="36.3548%" y="901" width="0.1420%" height="15" fill="rgb(215,190,9)"/><text x="36.6048%" y="911.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (654 samples, 0.15%)</title><rect x="36.5786%" y="805" width="0.1512%" height="15" fill="rgb(242,101,16)"/><text x="36.8286%" y="815.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (654 samples, 0.15%)</title><rect x="36.5786%" y="789" width="0.1512%" height="15" fill="rgb(223,190,21)"/><text x="36.8286%" y="799.50"></text></g><g><title>__memcmp_avx2_movbe (653 samples, 0.15%)</title><rect x="36.5788%" y="773" width="0.1510%" height="15" fill="rgb(215,228,25)"/><text x="36.8288%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (725 samples, 0.17%)</title><rect x="36.5730%" y="869" width="0.1676%" height="15" fill="rgb(225,36,22)"/><text x="36.8230%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (725 samples, 0.17%)</title><rect x="36.5730%" y="853" width="0.1676%" height="15" fill="rgb(251,106,46)"/><text x="36.8230%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (701 samples, 0.16%)</title><rect x="36.5786%" y="837" width="0.1621%" height="15" fill="rgb(208,90,1)"/><text x="36.8286%" y="847.50"></text></g><g><title>mcts_policy::game_graph::calculate_qu::{{closure}} (701 samples, 0.16%)</title><rect x="36.5786%" y="821" width="0.1621%" height="15" fill="rgb(243,10,4)"/><text x="36.8286%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (507 samples, 0.12%)</title><rect x="37.1769%" y="293" width="0.1172%" height="15" fill="rgb(212,137,27)"/><text x="37.4269%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (488 samples, 0.11%)</title><rect x="37.1813%" y="277" width="0.1128%" height="15" fill="rgb(231,220,49)"/><text x="37.4313%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (669 samples, 0.15%)</title><rect x="37.2941%" y="293" width="0.1547%" height="15" fill="rgb(237,96,20)"/><text x="37.5441%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (621 samples, 0.14%)</title><rect x="37.3052%" y="277" width="0.1436%" height="15" fill="rgb(239,229,30)"/><text x="37.5552%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1,248 samples, 0.29%)</title><rect x="37.1625%" y="373" width="0.2885%" height="15" fill="rgb(219,65,33)"/><text x="37.4125%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1,248 samples, 0.29%)</title><rect x="37.1625%" y="357" width="0.2885%" height="15" fill="rgb(243,134,7)"/><text x="37.4125%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,248 samples, 0.29%)</title><rect x="37.1625%" y="341" width="0.2885%" height="15" fill="rgb(216,177,54)"/><text x="37.4125%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,248 samples, 0.29%)</title><rect x="37.1625%" y="325" width="0.2885%" height="15" fill="rgb(211,160,20)"/><text x="37.4125%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,248 samples, 0.29%)</title><rect x="37.1625%" y="309" width="0.2885%" height="15" fill="rgb(239,85,39)"/><text x="37.4125%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_str (1,397 samples, 0.32%)</title><rect x="37.1283%" y="405" width="0.3230%" height="15" fill="rgb(232,125,22)"/><text x="37.3783%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1,321 samples, 0.31%)</title><rect x="37.1459%" y="389" width="0.3054%" height="15" fill="rgb(244,57,34)"/><text x="37.3959%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (536 samples, 0.12%)</title><rect x="37.6848%" y="277" width="0.1239%" height="15" fill="rgb(214,203,32)"/><text x="37.9348%" y="287.50"></text></g><g><title>__memmove_avx_unaligned_erms (496 samples, 0.11%)</title><rect x="37.6941%" y="261" width="0.1147%" height="15" fill="rgb(207,58,43)"/><text x="37.9441%" y="271.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1,009 samples, 0.23%)</title><rect x="37.5805%" y="373" width="0.2333%" height="15" fill="rgb(215,193,15)"/><text x="37.8305%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (966 samples, 0.22%)</title><rect x="37.5905%" y="357" width="0.2233%" height="15" fill="rgb(232,15,44)"/><text x="37.8405%" y="367.50"></text></g><g><title>alloc::string::String::push_str (966 samples, 0.22%)</title><rect x="37.5905%" y="341" width="0.2233%" height="15" fill="rgb(212,3,48)"/><text x="37.8405%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (966 samples, 0.22%)</title><rect x="37.5905%" y="325" width="0.2233%" height="15" fill="rgb(218,128,7)"/><text x="37.8405%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (966 samples, 0.22%)</title><rect x="37.5905%" y="309" width="0.2233%" height="15" fill="rgb(226,216,39)"/><text x="37.8405%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (966 samples, 0.22%)</title><rect x="37.5905%" y="293" width="0.2233%" height="15" fill="rgb(243,47,51)"/><text x="37.8405%" y="303.50"></text></g><g><title>core::fmt::Formatter::pad_integral (710 samples, 0.16%)</title><rect x="37.8138%" y="373" width="0.1641%" height="15" fill="rgb(241,183,40)"/><text x="38.0638%" y="383.50"></text></g><g><title>core::fmt::builders::DebugList::entries (4,559 samples, 1.05%)</title><rect x="36.9677%" y="485" width="1.0540%" height="15" fill="rgb(231,217,32)"/><text x="37.2177%" y="495.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (4,400 samples, 1.02%)</title><rect x="37.0044%" y="469" width="1.0172%" height="15" fill="rgb(229,61,38)"/><text x="37.2544%" y="479.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (4,375 samples, 1.01%)</title><rect x="37.0102%" y="453" width="1.0115%" height="15" fill="rgb(225,210,5)"/><text x="37.2602%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (4,315 samples, 1.00%)</title><rect x="37.0241%" y="437" width="0.9976%" height="15" fill="rgb(231,79,45)"/><text x="37.2741%" y="447.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (4,252 samples, 0.98%)</title><rect x="37.0386%" y="421" width="0.9830%" height="15" fill="rgb(224,100,7)"/><text x="37.2886%" y="431.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u16&gt;::fmt (2,432 samples, 0.56%)</title><rect x="37.4594%" y="405" width="0.5623%" height="15" fill="rgb(241,198,18)"/><text x="37.7094%" y="415.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (2,362 samples, 0.55%)</title><rect x="37.4756%" y="389" width="0.5461%" height="15" fill="rgb(252,97,53)"/><text x="37.7256%" y="399.50"></text></g><g><title>core::array::&lt;impl core::fmt::Debug for [T: N]&gt;::fmt (4,667 samples, 1.08%)</title><rect x="36.9475%" y="533" width="1.0790%" height="15" fill="rgb(220,88,7)"/><text x="37.1975%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (4,667 samples, 1.08%)</title><rect x="36.9475%" y="517" width="1.0790%" height="15" fill="rgb(213,176,14)"/><text x="37.1975%" y="527.50"></text></g><g><title>&lt;[T] as core::fmt::Debug&gt;::fmt (4,667 samples, 1.08%)</title><rect x="36.9475%" y="501" width="1.0790%" height="15" fill="rgb(246,73,7)"/><text x="37.1975%" y="511.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (4,679 samples, 1.08%)</title><rect x="36.9468%" y="549" width="1.0817%" height="15" fill="rgb(245,64,36)"/><text x="37.1968%" y="559.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (4,952 samples, 1.14%)</title><rect x="36.9357%" y="597" width="1.1449%" height="15" fill="rgb(245,80,10)"/><text x="37.1857%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (4,934 samples, 1.14%)</title><rect x="36.9399%" y="581" width="1.1407%" height="15" fill="rgb(232,107,50)"/><text x="37.1899%" y="591.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (4,929 samples, 1.14%)</title><rect x="36.9411%" y="565" width="1.1395%" height="15" fill="rgb(253,3,0)"/><text x="37.1911%" y="575.50"></text></g><g><title>&lt;(T10,T11) as core::fmt::Debug&gt;::fmt (5,092 samples, 1.18%)</title><rect x="36.9186%" y="613" width="1.1772%" height="15" fill="rgb(212,99,53)"/><text x="37.1686%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (451 samples, 0.10%)</title><rect x="38.6269%" y="405" width="0.1043%" height="15" fill="rgb(249,111,54)"/><text x="38.8769%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (550 samples, 0.13%)</title><rect x="38.9587%" y="389" width="0.1272%" height="15" fill="rgb(249,55,30)"/><text x="39.2087%" y="399.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (550 samples, 0.13%)</title><rect x="38.9587%" y="373" width="0.1272%" height="15" fill="rgb(237,47,42)"/><text x="39.2087%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (550 samples, 0.13%)</title><rect x="38.9587%" y="357" width="0.1272%" height="15" fill="rgb(211,20,18)"/><text x="39.2087%" y="367.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1,938 samples, 0.45%)</title><rect x="39.7221%" y="325" width="0.4480%" height="15" fill="rgb(231,203,46)"/><text x="39.9721%" y="335.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::Debug for u16&gt;::fmt (1,430 samples, 0.33%)</title><rect x="39.8395%" y="309" width="0.3306%" height="15" fill="rgb(237,142,3)"/><text x="40.0895%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1,070 samples, 0.25%)</title><rect x="40.9802%" y="181" width="0.2474%" height="15" fill="rgb(241,107,1)"/><text x="41.2302%" y="191.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (516 samples, 0.12%)</title><rect x="41.1083%" y="165" width="0.1193%" height="15" fill="rgb(229,83,13)"/><text x="41.3583%" y="175.50"></text></g><g><title>_int_realloc (894 samples, 0.21%)</title><rect x="41.2646%" y="69" width="0.2067%" height="15" fill="rgb(241,91,40)"/><text x="41.5146%" y="79.50"></text></g><g><title>_int_malloc (476 samples, 0.11%)</title><rect x="41.3612%" y="53" width="0.1100%" height="15" fill="rgb(225,3,45)"/><text x="41.6112%" y="63.50"></text></g><g><title>__GI___libc_realloc (1,039 samples, 0.24%)</title><rect x="41.2315%" y="85" width="0.2402%" height="15" fill="rgb(244,223,14)"/><text x="41.4815%" y="95.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,049 samples, 0.24%)</title><rect x="41.2313%" y="133" width="0.2425%" height="15" fill="rgb(224,124,37)"/><text x="41.4813%" y="143.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,049 samples, 0.24%)</title><rect x="41.2313%" y="117" width="0.2425%" height="15" fill="rgb(251,171,30)"/><text x="41.4813%" y="127.50"></text></g><g><title>alloc::alloc::realloc (1,049 samples, 0.24%)</title><rect x="41.2313%" y="101" width="0.2425%" height="15" fill="rgb(236,46,54)"/><text x="41.4813%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,057 samples, 0.24%)</title><rect x="41.2313%" y="149" width="0.2444%" height="15" fill="rgb(245,213,5)"/><text x="41.4813%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4,028 samples, 0.93%)</title><rect x="40.5495%" y="213" width="0.9312%" height="15" fill="rgb(230,144,27)"/><text x="40.7995%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3,843 samples, 0.89%)</title><rect x="40.5923%" y="197" width="0.8885%" height="15" fill="rgb(220,86,6)"/><text x="40.8423%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,095 samples, 0.25%)</title><rect x="41.2276%" y="181" width="0.2532%" height="15" fill="rgb(240,20,13)"/><text x="41.4776%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,095 samples, 0.25%)</title><rect x="41.2276%" y="165" width="0.2532%" height="15" fill="rgb(217,89,34)"/><text x="41.4776%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5,610 samples, 1.30%)</title><rect x="41.4807%" y="213" width="1.2970%" height="15" fill="rgb(229,13,5)"/><text x="41.7307%" y="223.50"></text></g><g><title>__memmove_avx_unaligned_erms (5,144 samples, 1.19%)</title><rect x="41.5885%" y="197" width="1.1892%" height="15" fill="rgb(244,67,35)"/><text x="41.8385%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (10,243 samples, 2.37%)</title><rect x="40.4270%" y="293" width="2.3681%" height="15" fill="rgb(221,40,2)"/><text x="40.6770%" y="303.50">&lt;a..</text></g><g><title>alloc::string::String::push_str (10,243 samples, 2.37%)</title><rect x="40.4270%" y="277" width="2.3681%" height="15" fill="rgb(237,157,21)"/><text x="40.6770%" y="287.50">al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (10,243 samples, 2.37%)</title><rect x="40.4270%" y="261" width="2.3681%" height="15" fill="rgb(222,94,11)"/><text x="40.6770%" y="271.50">al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (10,243 samples, 2.37%)</title><rect x="40.4270%" y="245" width="2.3681%" height="15" fill="rgb(249,113,6)"/><text x="40.6770%" y="255.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (10,243 samples, 2.37%)</title><rect x="40.4270%" y="229" width="2.3681%" height="15" fill="rgb(238,137,36)"/><text x="40.6770%" y="239.50">al..</text></g><g><title>core::fmt::Formatter::write_str (11,355 samples, 2.63%)</title><rect x="40.1706%" y="325" width="2.6252%" height="15" fill="rgb(210,102,26)"/><text x="40.4206%" y="335.50">co..</text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (10,780 samples, 2.49%)</title><rect x="40.3035%" y="309" width="2.4922%" height="15" fill="rgb(218,30,30)"/><text x="40.5535%" y="319.50">&lt;&amp;..</text></g><g><title>core::fmt::builders::DebugInner::is_pretty (482 samples, 0.11%)</title><rect x="42.7957%" y="325" width="0.1114%" height="15" fill="rgb(214,67,26)"/><text x="43.0457%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (714 samples, 0.17%)</title><rect x="44.3267%" y="165" width="0.1651%" height="15" fill="rgb(251,9,53)"/><text x="44.5767%" y="175.50"></text></g><g><title>_int_realloc (763 samples, 0.18%)</title><rect x="44.5195%" y="53" width="0.1764%" height="15" fill="rgb(228,204,25)"/><text x="44.7695%" y="63.50"></text></g><g><title>_int_malloc (446 samples, 0.10%)</title><rect x="44.5928%" y="37" width="0.1031%" height="15" fill="rgb(207,153,8)"/><text x="44.8428%" y="47.50"></text></g><g><title>__GI___libc_realloc (874 samples, 0.20%)</title><rect x="44.4945%" y="69" width="0.2021%" height="15" fill="rgb(242,9,16)"/><text x="44.7445%" y="79.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (879 samples, 0.20%)</title><rect x="44.4945%" y="117" width="0.2032%" height="15" fill="rgb(217,211,10)"/><text x="44.7445%" y="127.50"></text></g><g><title>alloc::alloc::Global::grow_impl (879 samples, 0.20%)</title><rect x="44.4945%" y="101" width="0.2032%" height="15" fill="rgb(219,228,52)"/><text x="44.7445%" y="111.50"></text></g><g><title>alloc::alloc::realloc (879 samples, 0.20%)</title><rect x="44.4945%" y="85" width="0.2032%" height="15" fill="rgb(231,92,29)"/><text x="44.7445%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (888 samples, 0.21%)</title><rect x="44.4938%" y="133" width="0.2053%" height="15" fill="rgb(232,8,23)"/><text x="44.7438%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2,744 samples, 0.63%)</title><rect x="44.0682%" y="197" width="0.6344%" height="15" fill="rgb(216,211,34)"/><text x="44.3182%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2,665 samples, 0.62%)</title><rect x="44.0865%" y="181" width="0.6161%" height="15" fill="rgb(236,151,0)"/><text x="44.3365%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (912 samples, 0.21%)</title><rect x="44.4918%" y="165" width="0.2108%" height="15" fill="rgb(209,168,3)"/><text x="44.7418%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (911 samples, 0.21%)</title><rect x="44.4920%" y="149" width="0.2106%" height="15" fill="rgb(208,129,28)"/><text x="44.7420%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4,201 samples, 0.97%)</title><rect x="44.7026%" y="197" width="0.9712%" height="15" fill="rgb(229,78,22)"/><text x="44.9526%" y="207.50"></text></g><g><title>__memmove_avx_unaligned_erms (3,872 samples, 0.90%)</title><rect x="44.7787%" y="181" width="0.8952%" height="15" fill="rgb(228,187,13)"/><text x="45.0287%" y="191.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7,610 samples, 1.76%)</title><rect x="43.9820%" y="277" width="1.7594%" height="15" fill="rgb(240,119,24)"/><text x="44.2320%" y="287.50"></text></g><g><title>alloc::string::String::push_str (7,610 samples, 1.76%)</title><rect x="43.9820%" y="261" width="1.7594%" height="15" fill="rgb(209,194,42)"/><text x="44.2320%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7,610 samples, 1.76%)</title><rect x="43.9820%" y="245" width="1.7594%" height="15" fill="rgb(247,200,46)"/><text x="44.2320%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7,610 samples, 1.76%)</title><rect x="43.9820%" y="229" width="1.7594%" height="15" fill="rgb(218,76,16)"/><text x="44.2320%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7,610 samples, 1.76%)</title><rect x="43.9820%" y="213" width="1.7594%" height="15" fill="rgb(225,21,48)"/><text x="44.2320%" y="223.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (8,000 samples, 1.85%)</title><rect x="43.8925%" y="293" width="1.8495%" height="15" fill="rgb(239,223,50)"/><text x="44.1425%" y="303.50">&lt;..</text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1,159 samples, 0.27%)</title><rect x="46.7713%" y="277" width="0.2680%" height="15" fill="rgb(244,45,21)"/><text x="47.0213%" y="287.50"></text></g><g><title>core::fmt::Formatter::pad_integral (5,951 samples, 1.38%)</title><rect x="45.7425%" y="293" width="1.3758%" height="15" fill="rgb(232,33,43)"/><text x="45.9925%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,501 samples, 0.35%)</title><rect x="47.1183%" y="293" width="0.3470%" height="15" fill="rgb(209,8,3)"/><text x="47.3683%" y="303.50"></text></g><g><title>core::fmt::builders::DebugList::entries (37,944 samples, 8.77%)</title><rect x="38.8054%" y="405" width="8.7723%" height="15" fill="rgb(214,25,53)"/><text x="39.0554%" y="415.50">core::fmt::b..</text></g><g><title>core::fmt::builders::DebugSet::entry (36,729 samples, 8.49%)</title><rect x="39.0863%" y="389" width="8.4914%" height="15" fill="rgb(254,186,54)"/><text x="39.3363%" y="399.50">core::fmt::b..</text></g><g><title>core::fmt::builders::DebugInner::entry (36,362 samples, 8.41%)</title><rect x="39.1711%" y="373" width="8.4066%" height="15" fill="rgb(208,174,49)"/><text x="39.4211%" y="383.50">core::fmt::b..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (35,956 samples, 8.31%)</title><rect x="39.2650%" y="357" width="8.3127%" height="15" fill="rgb(233,191,51)"/><text x="39.5150%" y="367.50">core::result..</text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (35,405 samples, 8.19%)</title><rect x="39.3924%" y="341" width="8.1853%" height="15" fill="rgb(222,134,10)"/><text x="39.6424%" y="351.50">core::fmt::..</text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u16&gt;::fmt (20,202 samples, 4.67%)</title><rect x="42.9072%" y="325" width="4.6705%" height="15" fill="rgb(230,226,20)"/><text x="43.1572%" y="335.50">core:..</text></g><g><title>core::fmt::num::imp::fmt_u64 (19,606 samples, 4.53%)</title><rect x="43.0450%" y="309" width="4.5327%" height="15" fill="rgb(251,111,25)"/><text x="43.2950%" y="319.50">core:..</text></g><g><title>core::array::&lt;impl core::fmt::Debug for [T: N]&gt;::fmt (38,917 samples, 9.00%)</title><rect x="38.6151%" y="453" width="8.9973%" height="15" fill="rgb(224,40,46)"/><text x="38.8651%" y="463.50">core::array::..</text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (38,917 samples, 9.00%)</title><rect x="38.6151%" y="437" width="8.9973%" height="15" fill="rgb(236,108,47)"/><text x="38.8651%" y="447.50">&lt;&amp;T as core::..</text></g><g><title>&lt;[T] as core::fmt::Debug&gt;::fmt (38,917 samples, 9.00%)</title><rect x="38.6151%" y="421" width="8.9973%" height="15" fill="rgb(234,93,0)"/><text x="38.8651%" y="431.50">&lt;[T] as core:..</text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (39,036 samples, 9.02%)</title><rect x="38.6068%" y="469" width="9.0248%" height="15" fill="rgb(224,213,32)"/><text x="38.8568%" y="479.50">&lt;&amp;T as core::..</text></g><g><title>core::intrinsics::copy_nonoverlapping (434 samples, 0.10%)</title><rect x="47.7317%" y="357" width="0.1003%" height="15" fill="rgb(251,11,48)"/><text x="47.9817%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (754 samples, 0.17%)</title><rect x="47.6600%" y="437" width="0.1743%" height="15" fill="rgb(236,173,5)"/><text x="47.9100%" y="447.50"></text></g><g><title>alloc::string::String::push_str (754 samples, 0.17%)</title><rect x="47.6600%" y="421" width="0.1743%" height="15" fill="rgb(230,95,12)"/><text x="47.9100%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (754 samples, 0.17%)</title><rect x="47.6600%" y="405" width="0.1743%" height="15" fill="rgb(232,209,1)"/><text x="47.9100%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (754 samples, 0.17%)</title><rect x="47.6600%" y="389" width="0.1743%" height="15" fill="rgb(232,6,1)"/><text x="47.9100%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (754 samples, 0.17%)</title><rect x="47.6600%" y="373" width="0.1743%" height="15" fill="rgb(210,224,50)"/><text x="47.9100%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (877 samples, 0.20%)</title><rect x="47.6318%" y="469" width="0.2028%" height="15" fill="rgb(228,127,35)"/><text x="47.8818%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (841 samples, 0.19%)</title><rect x="47.6401%" y="453" width="0.1944%" height="15" fill="rgb(245,102,45)"/><text x="47.8901%" y="463.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (41,272 samples, 9.54%)</title><rect x="38.5058%" y="517" width="9.5417%" height="15" fill="rgb(214,1,49)"/><text x="38.7558%" y="527.50">core::fmt::bui..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (41,150 samples, 9.51%)</title><rect x="38.5340%" y="501" width="9.5135%" height="15" fill="rgb(226,163,40)"/><text x="38.7840%" y="511.50">core::result::..</text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (41,099 samples, 9.50%)</title><rect x="38.5458%" y="485" width="9.5017%" height="15" fill="rgb(239,212,28)"/><text x="38.7958%" y="495.50">core::fmt::bui..</text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (892 samples, 0.21%)</title><rect x="47.8413%" y="469" width="0.2062%" height="15" fill="rgb(220,20,13)"/><text x="48.0913%" y="479.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (859 samples, 0.20%)</title><rect x="47.8489%" y="453" width="0.1986%" height="15" fill="rgb(210,164,35)"/><text x="48.0989%" y="463.50"></text></g><g><title>&lt;(T10,T11) as core::fmt::Debug&gt;::fmt (42,373 samples, 9.80%)</title><rect x="38.3821%" y="533" width="9.7963%" height="15" fill="rgb(248,109,41)"/><text x="38.6321%" y="543.50">&lt;(T10,T11) as ..</text></g><g><title>core::fmt::builders::DebugTuple::finish (566 samples, 0.13%)</title><rect x="48.0475%" y="517" width="0.1309%" height="15" fill="rgb(238,23,50)"/><text x="48.2975%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (518 samples, 0.12%)</title><rect x="48.0586%" y="501" width="0.1198%" height="15" fill="rgb(211,48,49)"/><text x="48.3086%" y="511.50"></text></g><g><title>core::fmt::builders::DebugTuple::finish::{{closure}} (518 samples, 0.12%)</title><rect x="48.0586%" y="485" width="0.1198%" height="15" fill="rgb(223,36,21)"/><text x="48.3086%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_str (500 samples, 0.12%)</title><rect x="48.0627%" y="469" width="0.1156%" height="15" fill="rgb(207,123,46)"/><text x="48.3127%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (441 samples, 0.10%)</title><rect x="48.0764%" y="453" width="0.1020%" height="15" fill="rgb(240,218,32)"/><text x="48.3264%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (42,510 samples, 9.83%)</title><rect x="38.3701%" y="549" width="9.8279%" height="15" fill="rgb(252,5,43)"/><text x="38.6201%" y="559.50">&lt;&amp;T as core::f..</text></g><g><title>core::intrinsics::copy_nonoverlapping (778 samples, 0.18%)</title><rect x="48.3175%" y="437" width="0.1799%" height="15" fill="rgb(252,84,19)"/><text x="48.5675%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (704 samples, 0.16%)</title><rect x="48.3346%" y="421" width="0.1628%" height="15" fill="rgb(243,152,39)"/><text x="48.5846%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1,126 samples, 0.26%)</title><rect x="48.2398%" y="517" width="0.2603%" height="15" fill="rgb(234,160,15)"/><text x="48.4898%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1,126 samples, 0.26%)</title><rect x="48.2398%" y="501" width="0.2603%" height="15" fill="rgb(237,34,20)"/><text x="48.4898%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,126 samples, 0.26%)</title><rect x="48.2398%" y="485" width="0.2603%" height="15" fill="rgb(229,97,13)"/><text x="48.4898%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,126 samples, 0.26%)</title><rect x="48.2398%" y="469" width="0.2603%" height="15" fill="rgb(234,71,50)"/><text x="48.4898%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,126 samples, 0.26%)</title><rect x="48.2398%" y="453" width="0.2603%" height="15" fill="rgb(253,155,4)"/><text x="48.4898%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1,242 samples, 0.29%)</title><rect x="48.2132%" y="533" width="0.2871%" height="15" fill="rgb(222,185,37)"/><text x="48.4632%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_str (1,308 samples, 0.30%)</title><rect x="48.1982%" y="549" width="0.3024%" height="15" fill="rgb(251,177,13)"/><text x="48.4482%" y="559.50"></text></g><g><title>__GI___libc_realloc (472 samples, 0.11%)</title><rect x="48.6867%" y="293" width="0.1091%" height="15" fill="rgb(250,179,40)"/><text x="48.9367%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (473 samples, 0.11%)</title><rect x="48.6867%" y="341" width="0.1094%" height="15" fill="rgb(242,44,2)"/><text x="48.9367%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (473 samples, 0.11%)</title><rect x="48.6867%" y="325" width="0.1094%" height="15" fill="rgb(216,177,13)"/><text x="48.9367%" y="335.50"></text></g><g><title>alloc::alloc::realloc (473 samples, 0.11%)</title><rect x="48.6867%" y="309" width="0.1094%" height="15" fill="rgb(216,106,43)"/><text x="48.9367%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (476 samples, 0.11%)</title><rect x="48.6865%" y="357" width="0.1100%" height="15" fill="rgb(216,183,2)"/><text x="48.9365%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (601 samples, 0.14%)</title><rect x="48.6583%" y="421" width="0.1389%" height="15" fill="rgb(249,75,3)"/><text x="48.9083%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (566 samples, 0.13%)</title><rect x="48.6664%" y="405" width="0.1309%" height="15" fill="rgb(219,67,39)"/><text x="48.9164%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (484 samples, 0.11%)</title><rect x="48.6853%" y="389" width="0.1119%" height="15" fill="rgb(253,228,2)"/><text x="48.9353%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (484 samples, 0.11%)</title><rect x="48.6853%" y="373" width="0.1119%" height="15" fill="rgb(235,138,27)"/><text x="48.9353%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (623 samples, 0.14%)</title><rect x="48.7972%" y="421" width="0.1440%" height="15" fill="rgb(236,97,51)"/><text x="49.0472%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (576 samples, 0.13%)</title><rect x="48.8081%" y="405" width="0.1332%" height="15" fill="rgb(240,80,30)"/><text x="49.0581%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1,429 samples, 0.33%)</title><rect x="48.6211%" y="517" width="0.3304%" height="15" fill="rgb(230,178,19)"/><text x="48.8711%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1,309 samples, 0.30%)</title><rect x="48.6488%" y="501" width="0.3026%" height="15" fill="rgb(210,190,27)"/><text x="48.8988%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1,309 samples, 0.30%)</title><rect x="48.6488%" y="485" width="0.3026%" height="15" fill="rgb(222,107,31)"/><text x="48.8988%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,309 samples, 0.30%)</title><rect x="48.6488%" y="469" width="0.3026%" height="15" fill="rgb(216,127,34)"/><text x="48.8988%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,309 samples, 0.30%)</title><rect x="48.6488%" y="453" width="0.3026%" height="15" fill="rgb(234,116,52)"/><text x="48.8988%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,309 samples, 0.30%)</title><rect x="48.6488%" y="437" width="0.3026%" height="15" fill="rgb(222,124,15)"/><text x="48.8988%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (1,917 samples, 0.44%)</title><rect x="48.5399%" y="533" width="0.4432%" height="15" fill="rgb(231,179,28)"/><text x="48.7899%" y="543.50"></text></g><g><title>core::num::diy_float::Fp::mul (750 samples, 0.17%)</title><rect x="50.6560%" y="469" width="0.1734%" height="15" fill="rgb(226,93,45)"/><text x="50.9060%" y="479.50"></text></g><g><title>core::num::diy_float::Fp::normalize (454 samples, 0.10%)</title><rect x="50.8294%" y="469" width="0.1050%" height="15" fill="rgb(215,8,51)"/><text x="51.0794%" y="479.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_shortest (11,707 samples, 2.71%)</title><rect x="48.5267%" y="549" width="2.7066%" height="15" fill="rgb(223,106,5)"/><text x="48.7767%" y="559.50">co..</text></g><g><title>core::num::flt2dec::to_shortest_str (9,733 samples, 2.25%)</title><rect x="48.9831%" y="533" width="2.2502%" height="15" fill="rgb(250,191,5)"/><text x="49.2331%" y="543.50">c..</text></g><g><title>core::ops::function::FnMut::call_mut (8,653 samples, 2.00%)</title><rect x="49.2328%" y="517" width="2.0005%" height="15" fill="rgb(242,132,44)"/><text x="49.4828%" y="527.50">c..</text></g><g><title>core::num::flt2dec::strategy::grisu::format_shortest (8,653 samples, 2.00%)</title><rect x="49.2328%" y="501" width="2.0005%" height="15" fill="rgb(251,152,29)"/><text x="49.4828%" y="511.50">c..</text></g><g><title>core::num::flt2dec::strategy::grisu::format_shortest_opt (7,736 samples, 1.79%)</title><rect x="49.4448%" y="485" width="1.7885%" height="15" fill="rgb(218,179,5)"/><text x="49.6948%" y="495.50">c..</text></g><g><title>core::fmt::builders::DebugTuple::field (57,585 samples, 13.31%)</title><rect x="38.2152%" y="597" width="13.3131%" height="15" fill="rgb(227,67,19)"/><text x="38.4652%" y="607.50">core::fmt::builders:..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (57,370 samples, 13.26%)</title><rect x="38.2649%" y="581" width="13.2634%" height="15" fill="rgb(233,119,31)"/><text x="38.5149%" y="591.50">core::result::Result..</text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (57,291 samples, 13.25%)</title><rect x="38.2831%" y="565" width="13.2452%" height="15" fill="rgb(241,120,22)"/><text x="38.5331%" y="575.50">core::fmt::builders:..</text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1,276 samples, 0.29%)</title><rect x="51.2333%" y="549" width="0.2950%" height="15" fill="rgb(224,102,30)"/><text x="51.4833%" y="559.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1,233 samples, 0.29%)</title><rect x="51.2432%" y="533" width="0.2851%" height="15" fill="rgb(210,164,37)"/><text x="51.4932%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (63,780 samples, 14.75%)</title><rect x="36.9108%" y="629" width="14.7454%" height="15" fill="rgb(226,191,16)"/><text x="37.1608%" y="639.50">&lt;&amp;T as core::fmt::Debu..</text></g><g><title>&lt;(T9,T10,T11) as core::fmt::Debug&gt;::fmt (58,654 samples, 13.56%)</title><rect x="38.0959%" y="613" width="13.5603%" height="15" fill="rgb(214,40,45)"/><text x="38.3459%" y="623.50">&lt;(T9,T10,T11) as cor..</text></g><g><title>core::fmt::builders::DebugTuple::finish (553 samples, 0.13%)</title><rect x="51.5283%" y="597" width="0.1278%" height="15" fill="rgb(244,29,26)"/><text x="51.7783%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (489 samples, 0.11%)</title><rect x="51.5431%" y="581" width="0.1131%" height="15" fill="rgb(216,16,5)"/><text x="51.7931%" y="591.50"></text></g><g><title>core::fmt::builders::DebugTuple::finish::{{closure}} (489 samples, 0.11%)</title><rect x="51.5431%" y="565" width="0.1131%" height="15" fill="rgb(249,76,35)"/><text x="51.7931%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_str (485 samples, 0.11%)</title><rect x="51.5440%" y="549" width="0.1121%" height="15" fill="rgb(207,11,44)"/><text x="51.7940%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (457 samples, 0.11%)</title><rect x="51.5505%" y="533" width="0.1057%" height="15" fill="rgb(228,190,49)"/><text x="51.8005%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_str (530 samples, 0.12%)</title><rect x="51.6561%" y="629" width="0.1225%" height="15" fill="rgb(214,173,12)"/><text x="51.9061%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (498 samples, 0.12%)</title><rect x="51.6635%" y="613" width="0.1151%" height="15" fill="rgb(218,26,35)"/><text x="51.9135%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (470 samples, 0.11%)</title><rect x="51.6700%" y="597" width="0.1087%" height="15" fill="rgb(220,200,19)"/><text x="51.9200%" y="607.50"></text></g><g><title>alloc::string::String::push_str (470 samples, 0.11%)</title><rect x="51.6700%" y="581" width="0.1087%" height="15" fill="rgb(239,95,49)"/><text x="51.9200%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (470 samples, 0.11%)</title><rect x="51.6700%" y="565" width="0.1087%" height="15" fill="rgb(235,85,53)"/><text x="51.9200%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (470 samples, 0.11%)</title><rect x="51.6700%" y="549" width="0.1087%" height="15" fill="rgb(233,133,31)"/><text x="51.9200%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (470 samples, 0.11%)</title><rect x="51.6700%" y="533" width="0.1087%" height="15" fill="rgb(218,25,20)"/><text x="51.9200%" y="543.50"></text></g><g><title>core::fmt::builders::DebugList::entries (64,613 samples, 14.94%)</title><rect x="36.8488%" y="709" width="14.9379%" height="15" fill="rgb(252,210,38)"/><text x="37.0988%" y="719.50">core::fmt::builders::De..</text></g><g><title>core::fmt::builders::DebugSet::entry (64,518 samples, 14.92%)</title><rect x="36.8708%" y="693" width="14.9160%" height="15" fill="rgb(242,134,21)"/><text x="37.1208%" y="703.50">core::fmt::builders::De..</text></g><g><title>core::fmt::builders::DebugInner::entry (64,512 samples, 14.91%)</title><rect x="36.8722%" y="677" width="14.9146%" height="15" fill="rgb(213,28,48)"/><text x="37.1222%" y="687.50">core::fmt::builders::De..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (64,434 samples, 14.90%)</title><rect x="36.8902%" y="661" width="14.8966%" height="15" fill="rgb(250,196,2)"/><text x="37.1402%" y="671.50">core::result::Result&lt;T,..</text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (64,404 samples, 14.89%)</title><rect x="36.8971%" y="645" width="14.8896%" height="15" fill="rgb(227,5,17)"/><text x="37.1471%" y="655.50">core::fmt::builders::De..</text></g><g><title>&lt;[T] as core::fmt::Debug&gt;::fmt (64,753 samples, 14.97%)</title><rect x="36.8229%" y="725" width="14.9703%" height="15" fill="rgb(221,226,24)"/><text x="37.0729%" y="735.50">&lt;[T] as core::fmt::Debu..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::fmt::Debug&gt;::fmt (64,757 samples, 14.97%)</title><rect x="36.8229%" y="741" width="14.9712%" height="15" fill="rgb(211,5,48)"/><text x="37.0729%" y="751.50">&lt;alloc::vec::Vec&lt;T,A&gt; a..</text></g><g><title>_int_realloc (961 samples, 0.22%)</title><rect x="52.0321%" y="357" width="0.2222%" height="15" fill="rgb(219,150,6)"/><text x="52.2821%" y="367.50"></text></g><g><title>_int_malloc (641 samples, 0.15%)</title><rect x="52.1060%" y="341" width="0.1482%" height="15" fill="rgb(251,46,16)"/><text x="52.3560%" y="351.50"></text></g><g><title>__GI___libc_realloc (1,221 samples, 0.28%)</title><rect x="51.9745%" y="373" width="0.2823%" height="15" fill="rgb(220,204,40)"/><text x="52.2245%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,245 samples, 0.29%)</title><rect x="51.9733%" y="421" width="0.2878%" height="15" fill="rgb(211,85,2)"/><text x="52.2233%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,245 samples, 0.29%)</title><rect x="51.9733%" y="405" width="0.2878%" height="15" fill="rgb(229,17,7)"/><text x="52.2233%" y="415.50"></text></g><g><title>alloc::alloc::realloc (1,245 samples, 0.29%)</title><rect x="51.9733%" y="389" width="0.2878%" height="15" fill="rgb(239,72,28)"/><text x="52.2233%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,263 samples, 0.29%)</title><rect x="51.9712%" y="437" width="0.2920%" height="15" fill="rgb(230,47,54)"/><text x="52.2212%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,536 samples, 0.36%)</title><rect x="51.9132%" y="501" width="0.3551%" height="15" fill="rgb(214,50,8)"/><text x="52.1632%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,524 samples, 0.35%)</title><rect x="51.9160%" y="485" width="0.3523%" height="15" fill="rgb(216,198,43)"/><text x="52.1660%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,343 samples, 0.31%)</title><rect x="51.9578%" y="469" width="0.3105%" height="15" fill="rgb(234,20,35)"/><text x="52.2078%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,342 samples, 0.31%)</title><rect x="51.9581%" y="453" width="0.3103%" height="15" fill="rgb(254,45,19)"/><text x="52.2081%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_str (1,927 samples, 0.45%)</title><rect x="51.8917%" y="613" width="0.4455%" height="15" fill="rgb(219,14,44)"/><text x="52.1417%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1,897 samples, 0.44%)</title><rect x="51.8987%" y="597" width="0.4386%" height="15" fill="rgb(217,220,26)"/><text x="52.1487%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1,865 samples, 0.43%)</title><rect x="51.9061%" y="581" width="0.4312%" height="15" fill="rgb(213,158,28)"/><text x="52.1561%" y="591.50"></text></g><g><title>alloc::string::String::push_str (1,865 samples, 0.43%)</title><rect x="51.9061%" y="565" width="0.4312%" height="15" fill="rgb(252,51,52)"/><text x="52.1561%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,865 samples, 0.43%)</title><rect x="51.9061%" y="549" width="0.4312%" height="15" fill="rgb(246,89,16)"/><text x="52.1561%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,865 samples, 0.43%)</title><rect x="51.9061%" y="533" width="0.4312%" height="15" fill="rgb(216,158,49)"/><text x="52.1561%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,865 samples, 0.43%)</title><rect x="51.9061%" y="517" width="0.4312%" height="15" fill="rgb(236,107,19)"/><text x="52.1561%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (482 samples, 0.11%)</title><rect x="52.4091%" y="485" width="0.1114%" height="15" fill="rgb(228,185,30)"/><text x="52.6591%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (479 samples, 0.11%)</title><rect x="52.4098%" y="469" width="0.1107%" height="15" fill="rgb(246,134,8)"/><text x="52.6598%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (787 samples, 0.18%)</title><rect x="52.3990%" y="581" width="0.1819%" height="15" fill="rgb(214,143,50)"/><text x="52.6490%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (763 samples, 0.18%)</title><rect x="52.4045%" y="565" width="0.1764%" height="15" fill="rgb(228,75,8)"/><text x="52.6545%" y="575.50"></text></g><g><title>alloc::string::String::push_str (763 samples, 0.18%)</title><rect x="52.4045%" y="549" width="0.1764%" height="15" fill="rgb(207,175,4)"/><text x="52.6545%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (763 samples, 0.18%)</title><rect x="52.4045%" y="533" width="0.1764%" height="15" fill="rgb(205,108,24)"/><text x="52.6545%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (763 samples, 0.18%)</title><rect x="52.4045%" y="517" width="0.1764%" height="15" fill="rgb(244,120,49)"/><text x="52.6545%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (763 samples, 0.18%)</title><rect x="52.4045%" y="501" width="0.1764%" height="15" fill="rgb(223,47,38)"/><text x="52.6545%" y="511.50"></text></g><g><title>core::fmt::builders::DebugList::entries (3,822 samples, 0.88%)</title><rect x="51.8066%" y="693" width="0.8836%" height="15" fill="rgb(229,179,11)"/><text x="52.0566%" y="703.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (3,735 samples, 0.86%)</title><rect x="51.8268%" y="677" width="0.8635%" height="15" fill="rgb(231,122,1)"/><text x="52.0768%" y="687.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (3,723 samples, 0.86%)</title><rect x="51.8295%" y="661" width="0.8607%" height="15" fill="rgb(245,119,9)"/><text x="52.0795%" y="671.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (3,696 samples, 0.85%)</title><rect x="51.8358%" y="645" width="0.8545%" height="15" fill="rgb(241,163,25)"/><text x="52.0858%" y="655.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (3,658 samples, 0.85%)</title><rect x="51.8446%" y="629" width="0.8457%" height="15" fill="rgb(217,214,3)"/><text x="52.0946%" y="639.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u16&gt;::fmt (1,509 samples, 0.35%)</title><rect x="52.3414%" y="613" width="0.3489%" height="15" fill="rgb(240,86,28)"/><text x="52.5914%" y="623.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1,471 samples, 0.34%)</title><rect x="52.3502%" y="597" width="0.3401%" height="15" fill="rgb(215,47,9)"/><text x="52.6002%" y="607.50"></text></g><g><title>core::array::&lt;impl core::fmt::Debug for [T: N]&gt;::fmt (3,882 samples, 0.90%)</title><rect x="51.7942%" y="741" width="0.8975%" height="15" fill="rgb(252,25,45)"/><text x="52.0442%" y="751.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (3,882 samples, 0.90%)</title><rect x="51.7942%" y="725" width="0.8975%" height="15" fill="rgb(251,164,9)"/><text x="52.0442%" y="735.50"></text></g><g><title>&lt;[T] as core::fmt::Debug&gt;::fmt (3,882 samples, 0.90%)</title><rect x="51.7942%" y="709" width="0.8975%" height="15" fill="rgb(233,194,0)"/><text x="52.0442%" y="719.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (68,668 samples, 15.88%)</title><rect x="36.8192%" y="757" width="15.8754%" height="15" fill="rgb(249,111,24)"/><text x="37.0692%" y="767.50">&lt;&amp;T as core::fmt::Debug&gt;..</text></g><g><title>core::fmt::Formatter::write_str (929 samples, 0.21%)</title><rect x="52.6946%" y="757" width="0.2148%" height="15" fill="rgb(250,223,3)"/><text x="52.9446%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (893 samples, 0.21%)</title><rect x="52.7030%" y="741" width="0.2065%" height="15" fill="rgb(236,178,37)"/><text x="52.9530%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (846 samples, 0.20%)</title><rect x="52.7138%" y="725" width="0.1956%" height="15" fill="rgb(241,158,50)"/><text x="52.9638%" y="735.50"></text></g><g><title>alloc::string::String::push_str (846 samples, 0.20%)</title><rect x="52.7138%" y="709" width="0.1956%" height="15" fill="rgb(213,121,41)"/><text x="52.9638%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (846 samples, 0.20%)</title><rect x="52.7138%" y="693" width="0.1956%" height="15" fill="rgb(240,92,3)"/><text x="52.9638%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (846 samples, 0.20%)</title><rect x="52.7138%" y="677" width="0.1956%" height="15" fill="rgb(205,123,3)"/><text x="52.9638%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (846 samples, 0.20%)</title><rect x="52.7138%" y="661" width="0.1956%" height="15" fill="rgb(205,97,47)"/><text x="52.9638%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (462 samples, 0.11%)</title><rect x="52.9302%" y="725" width="0.1068%" height="15" fill="rgb(247,152,14)"/><text x="53.1802%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (449 samples, 0.10%)</title><rect x="52.9332%" y="709" width="0.1038%" height="15" fill="rgb(248,195,53)"/><text x="53.1832%" y="719.50"></text></g><g><title>alloc::string::String::push_str (449 samples, 0.10%)</title><rect x="52.9332%" y="693" width="0.1038%" height="15" fill="rgb(226,201,16)"/><text x="53.1832%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (449 samples, 0.10%)</title><rect x="52.9332%" y="677" width="0.1038%" height="15" fill="rgb(205,98,0)"/><text x="53.1832%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (449 samples, 0.10%)</title><rect x="52.9332%" y="661" width="0.1038%" height="15" fill="rgb(214,191,48)"/><text x="53.1832%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (449 samples, 0.10%)</title><rect x="52.9332%" y="645" width="0.1038%" height="15" fill="rgb(237,112,39)"/><text x="53.1832%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (526 samples, 0.12%)</title><rect x="52.9205%" y="741" width="0.1216%" height="15" fill="rgb(247,203,27)"/><text x="53.1705%" y="751.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_shortest (1,792 samples, 0.41%)</title><rect x="52.9164%" y="757" width="0.4143%" height="15" fill="rgb(235,124,28)"/><text x="53.1664%" y="767.50"></text></g><g><title>core::num::flt2dec::to_shortest_str (1,248 samples, 0.29%)</title><rect x="53.0421%" y="741" width="0.2885%" height="15" fill="rgb(208,207,46)"/><text x="53.2921%" y="751.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,119 samples, 0.26%)</title><rect x="53.0719%" y="725" width="0.2587%" height="15" fill="rgb(234,176,4)"/><text x="53.3219%" y="735.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_shortest (1,119 samples, 0.26%)</title><rect x="53.0719%" y="709" width="0.2587%" height="15" fill="rgb(230,133,28)"/><text x="53.3219%" y="719.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_shortest_opt (981 samples, 0.23%)</title><rect x="53.1039%" y="693" width="0.2268%" height="15" fill="rgb(211,137,40)"/><text x="53.3539%" y="703.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (71,679 samples, 16.57%)</title><rect x="36.7954%" y="805" width="16.5715%" height="15" fill="rgb(254,35,13)"/><text x="37.0454%" y="815.50">core::fmt::builders::Debug..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (71,644 samples, 16.56%)</title><rect x="36.8035%" y="789" width="16.5634%" height="15" fill="rgb(225,49,51)"/><text x="37.0535%" y="799.50">core::result::Result&lt;T,E&gt;:..</text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (71,640 samples, 16.56%)</title><rect x="36.8044%" y="773" width="16.5625%" height="15" fill="rgb(251,10,15)"/><text x="37.0544%" y="783.50">core::fmt::builders::Debug..</text></g><g><title>&lt;mcts_policy::state::State as core::fmt::Debug&gt;::fmt (71,874 samples, 16.62%)</title><rect x="36.7624%" y="821" width="16.6166%" height="15" fill="rgb(228,207,15)"/><text x="37.0124%" y="831.50">&lt;mcts_policy::state::State..</text></g><g><title>alloc::fmt::format (71,969 samples, 16.64%)</title><rect x="36.7406%" y="869" width="16.6386%" height="15" fill="rgb(241,99,19)"/><text x="36.9906%" y="879.50">alloc::fmt::format</text></g><g><title>core::fmt::Write::write_fmt (71,936 samples, 16.63%)</title><rect x="36.7483%" y="853" width="16.6309%" height="15" fill="rgb(207,104,49)"/><text x="36.9983%" y="863.50">core::fmt::Write::write_fmt</text></g><g><title>core::fmt::write (71,917 samples, 16.63%)</title><rect x="36.7526%" y="837" width="16.6266%" height="15" fill="rgb(234,99,18)"/><text x="37.0026%" y="847.50">core::fmt::write</text></g><g><title>mcts_policy::game_graph::is_better (73,025 samples, 16.88%)</title><rect x="36.5372%" y="901" width="16.8827%" height="15" fill="rgb(213,191,49)"/><text x="36.7872%" y="911.50">mcts_policy::game_graph::i..</text></g><g><title>mcts_policy::game_graph::calculate_qu (72,944 samples, 16.86%)</title><rect x="36.5559%" y="885" width="16.8640%" height="15" fill="rgb(210,226,19)"/><text x="36.8059%" y="895.50">mcts_policy::game_graph::c..</text></g><g><title>hashbrown::map::make_insert_hash (541 samples, 0.13%)</title><rect x="53.6784%" y="725" width="0.1251%" height="15" fill="rgb(229,97,18)"/><text x="53.9284%" y="735.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (703 samples, 0.16%)</title><rect x="53.8587%" y="661" width="0.1625%" height="15" fill="rgb(211,167,15)"/><text x="54.1087%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (702 samples, 0.16%)</title><rect x="53.8589%" y="645" width="0.1623%" height="15" fill="rgb(210,169,34)"/><text x="54.1089%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (523 samples, 0.12%)</title><rect x="53.9003%" y="629" width="0.1209%" height="15" fill="rgb(241,121,31)"/><text x="54.1503%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1,153 samples, 0.27%)</title><rect x="53.8381%" y="677" width="0.2666%" height="15" fill="rgb(232,40,11)"/><text x="54.0881%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1,163 samples, 0.27%)</title><rect x="53.8363%" y="709" width="0.2689%" height="15" fill="rgb(205,86,26)"/><text x="54.0863%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,163 samples, 0.27%)</title><rect x="53.8363%" y="693" width="0.2689%" height="15" fill="rgb(231,126,28)"/><text x="54.0863%" y="703.50"></text></g><g><title>&lt;itertools::unique_impl::UniqueBy&lt;I,V,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,033 samples, 0.47%)</title><rect x="53.6638%" y="773" width="0.4700%" height="15" fill="rgb(219,221,18)"/><text x="53.9138%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (2,018 samples, 0.47%)</title><rect x="53.6673%" y="757" width="0.4665%" height="15" fill="rgb(211,40,0)"/><text x="53.9173%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,998 samples, 0.46%)</title><rect x="53.6719%" y="741" width="0.4619%" height="15" fill="rgb(239,85,43)"/><text x="53.9219%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1,323 samples, 0.31%)</title><rect x="53.8279%" y="725" width="0.3059%" height="15" fill="rgb(231,55,21)"/><text x="54.0779%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,320 samples, 0.54%)</title><rect x="53.6018%" y="789" width="0.5364%" height="15" fill="rgb(225,184,43)"/><text x="53.8518%" y="799.50"></text></g><g><title>__GI___libc_realloc (436 samples, 0.10%)</title><rect x="54.1486%" y="661" width="0.1008%" height="15" fill="rgb(251,158,41)"/><text x="54.3986%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (452 samples, 0.10%)</title><rect x="54.1465%" y="725" width="0.1045%" height="15" fill="rgb(234,159,37)"/><text x="54.3965%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (445 samples, 0.10%)</title><rect x="54.1481%" y="709" width="0.1029%" height="15" fill="rgb(216,204,22)"/><text x="54.3981%" y="719.50"></text></g><g><title>alloc::alloc::Global::grow_impl (445 samples, 0.10%)</title><rect x="54.1481%" y="693" width="0.1029%" height="15" fill="rgb(214,17,3)"/><text x="54.3981%" y="703.50"></text></g><g><title>alloc::alloc::realloc (445 samples, 0.10%)</title><rect x="54.1481%" y="677" width="0.1029%" height="15" fill="rgb(212,111,17)"/><text x="54.3981%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (485 samples, 0.11%)</title><rect x="54.1407%" y="789" width="0.1121%" height="15" fill="rgb(221,157,24)"/><text x="54.3907%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (485 samples, 0.11%)</title><rect x="54.1407%" y="773" width="0.1121%" height="15" fill="rgb(252,16,13)"/><text x="54.3907%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (485 samples, 0.11%)</title><rect x="54.1407%" y="757" width="0.1121%" height="15" fill="rgb(221,62,2)"/><text x="54.3907%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (485 samples, 0.11%)</title><rect x="54.1407%" y="741" width="0.1121%" height="15" fill="rgb(247,87,22)"/><text x="54.3907%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,921 samples, 0.68%)</title><rect x="53.6011%" y="821" width="0.6753%" height="15" fill="rgb(215,73,9)"/><text x="53.8511%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2,919 samples, 0.67%)</title><rect x="53.6016%" y="805" width="0.6748%" height="15" fill="rgb(207,175,33)"/><text x="53.8516%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,364 samples, 0.78%)</title><rect x="53.5907%" y="885" width="0.7777%" height="15" fill="rgb(243,129,54)"/><text x="53.8407%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,364 samples, 0.78%)</title><rect x="53.5907%" y="869" width="0.7777%" height="15" fill="rgb(227,119,45)"/><text x="53.8407%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,355 samples, 0.78%)</title><rect x="53.5928%" y="853" width="0.7756%" height="15" fill="rgb(205,109,36)"/><text x="53.8428%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3,325 samples, 0.77%)</title><rect x="53.5998%" y="837" width="0.7687%" height="15" fill="rgb(205,6,39)"/><text x="53.8498%" y="847.50"></text></g><g><title>mcts_policy::game_graph::reconcile_node (4,727 samples, 1.09%)</title><rect x="53.4199%" y="901" width="1.0928%" height="15" fill="rgb(221,32,16)"/><text x="53.6699%" y="911.50"></text></g><g><title>_int_malloc (1,718 samples, 0.40%)</title><rect x="54.5879%" y="709" width="0.3972%" height="15" fill="rgb(228,144,50)"/><text x="54.8379%" y="719.50"></text></g><g><title>malloc_consolidate (796 samples, 0.18%)</title><rect x="54.8010%" y="693" width="0.1840%" height="15" fill="rgb(229,201,53)"/><text x="55.0510%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,720 samples, 0.40%)</title><rect x="54.5876%" y="821" width="0.3976%" height="15" fill="rgb(249,153,27)"/><text x="54.8376%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,720 samples, 0.40%)</title><rect x="54.5876%" y="805" width="0.3976%" height="15" fill="rgb(227,106,25)"/><text x="54.8376%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,720 samples, 0.40%)</title><rect x="54.5876%" y="789" width="0.3976%" height="15" fill="rgb(230,65,29)"/><text x="54.8376%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,720 samples, 0.40%)</title><rect x="54.5876%" y="773" width="0.3976%" height="15" fill="rgb(221,57,46)"/><text x="54.8376%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,720 samples, 0.40%)</title><rect x="54.5876%" y="757" width="0.3976%" height="15" fill="rgb(229,161,17)"/><text x="54.8376%" y="767.50"></text></g><g><title>alloc::alloc::alloc (1,720 samples, 0.40%)</title><rect x="54.5876%" y="741" width="0.3976%" height="15" fill="rgb(222,213,11)"/><text x="54.8376%" y="751.50"></text></g><g><title>__GI___libc_malloc (1,720 samples, 0.40%)</title><rect x="54.5876%" y="725" width="0.3976%" height="15" fill="rgb(235,35,13)"/><text x="54.8376%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,742 samples, 0.40%)</title><rect x="54.5876%" y="885" width="0.4027%" height="15" fill="rgb(233,158,34)"/><text x="54.8376%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,742 samples, 0.40%)</title><rect x="54.5876%" y="869" width="0.4027%" height="15" fill="rgb(215,151,48)"/><text x="54.8376%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (1,742 samples, 0.40%)</title><rect x="54.5876%" y="853" width="0.4027%" height="15" fill="rgb(229,84,14)"/><text x="54.8376%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,742 samples, 0.40%)</title><rect x="54.5876%" y="837" width="0.4027%" height="15" fill="rgb(229,68,14)"/><text x="54.8376%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (479 samples, 0.11%)</title><rect x="55.1154%" y="885" width="0.1107%" height="15" fill="rgb(243,106,26)"/><text x="55.3654%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (479 samples, 0.11%)</title><rect x="55.1154%" y="869" width="0.1107%" height="15" fill="rgb(206,45,38)"/><text x="55.3654%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (479 samples, 0.11%)</title><rect x="55.1154%" y="853" width="0.1107%" height="15" fill="rgb(226,6,15)"/><text x="55.3654%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (479 samples, 0.11%)</title><rect x="55.1154%" y="837" width="0.1107%" height="15" fill="rgb(232,22,54)"/><text x="55.3654%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (451 samples, 0.10%)</title><rect x="55.8074%" y="757" width="0.1043%" height="15" fill="rgb(229,222,32)"/><text x="56.0574%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (451 samples, 0.10%)</title><rect x="55.8074%" y="741" width="0.1043%" height="15" fill="rgb(228,62,29)"/><text x="56.0574%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (683 samples, 0.16%)</title><rect x="55.8074%" y="773" width="0.1579%" height="15" fill="rgb(251,103,34)"/><text x="56.0574%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,041 samples, 0.24%)</title><rect x="55.7963%" y="805" width="0.2407%" height="15" fill="rgb(233,12,30)"/><text x="56.0463%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,041 samples, 0.24%)</title><rect x="55.7963%" y="789" width="0.2407%" height="15" fill="rgb(238,52,0)"/><text x="56.0463%" y="799.50"></text></g><g><title>__GI___libc_malloc (669 samples, 0.15%)</title><rect x="56.0589%" y="693" width="0.1547%" height="15" fill="rgb(223,98,5)"/><text x="56.3089%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (699 samples, 0.16%)</title><rect x="56.0589%" y="741" width="0.1616%" height="15" fill="rgb(228,75,37)"/><text x="56.3089%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (699 samples, 0.16%)</title><rect x="56.0589%" y="725" width="0.1616%" height="15" fill="rgb(205,115,49)"/><text x="56.3089%" y="735.50"></text></g><g><title>alloc::alloc::alloc (699 samples, 0.16%)</title><rect x="56.0589%" y="709" width="0.1616%" height="15" fill="rgb(250,154,43)"/><text x="56.3089%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (713 samples, 0.16%)</title><rect x="56.0589%" y="805" width="0.1648%" height="15" fill="rgb(226,43,29)"/><text x="56.3089%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (713 samples, 0.16%)</title><rect x="56.0589%" y="789" width="0.1648%" height="15" fill="rgb(249,228,39)"/><text x="56.3089%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (713 samples, 0.16%)</title><rect x="56.0589%" y="773" width="0.1648%" height="15" fill="rgb(216,79,43)"/><text x="56.3089%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (713 samples, 0.16%)</title><rect x="56.0589%" y="757" width="0.1648%" height="15" fill="rgb(228,95,12)"/><text x="56.3089%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,954 samples, 0.45%)</title><rect x="55.7748%" y="821" width="0.4517%" height="15" fill="rgb(249,221,15)"/><text x="56.0248%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,986 samples, 0.46%)</title><rect x="55.7686%" y="869" width="0.4591%" height="15" fill="rgb(233,34,13)"/><text x="56.0186%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,986 samples, 0.46%)</title><rect x="55.7686%" y="853" width="0.4591%" height="15" fill="rgb(214,103,39)"/><text x="56.0186%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,969 samples, 0.46%)</title><rect x="55.7725%" y="837" width="0.4552%" height="15" fill="rgb(251,126,39)"/><text x="56.0225%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1,027 samples, 0.24%)</title><rect x="56.2349%" y="869" width="0.2374%" height="15" fill="rgb(214,216,36)"/><text x="56.4849%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (448 samples, 0.10%)</title><rect x="56.5488%" y="805" width="0.1036%" height="15" fill="rgb(220,221,8)"/><text x="56.7988%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (448 samples, 0.10%)</title><rect x="56.5488%" y="789" width="0.1036%" height="15" fill="rgb(240,216,3)"/><text x="56.7988%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;mcts_policy::game_rules::Move,bool&gt;&gt; (451 samples, 0.10%)</title><rect x="56.5488%" y="869" width="0.1043%" height="15" fill="rgb(232,218,17)"/><text x="56.7988%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;mcts_policy::game_rules::Move,bool,std::collections::hash::map::RandomState&gt;&gt; (451 samples, 0.10%)</title><rect x="56.5488%" y="853" width="0.1043%" height="15" fill="rgb(229,163,45)"/><text x="56.7988%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(mcts_policy::game_rules::Move,bool)&gt;&gt; (451 samples, 0.10%)</title><rect x="56.5488%" y="837" width="0.1043%" height="15" fill="rgb(231,110,42)"/><text x="56.7988%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (451 samples, 0.10%)</title><rect x="56.5488%" y="821" width="0.1043%" height="15" fill="rgb(208,170,48)"/><text x="56.7988%" y="831.50"></text></g><g><title>hashbrown::map::make_hash (1,043 samples, 0.24%)</title><rect x="56.7090%" y="805" width="0.2411%" height="15" fill="rgb(239,116,25)"/><text x="56.9590%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (599 samples, 0.14%)</title><rect x="56.8117%" y="789" width="0.1385%" height="15" fill="rgb(219,200,50)"/><text x="57.0617%" y="799.50"></text></g><g><title>&lt;&amp;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (812 samples, 0.19%)</title><rect x="56.9987%" y="757" width="0.1877%" height="15" fill="rgb(245,200,0)"/><text x="57.2487%" y="767.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1,501 samples, 0.35%)</title><rect x="56.9987%" y="773" width="0.3470%" height="15" fill="rgb(245,119,33)"/><text x="57.2487%" y="783.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (689 samples, 0.16%)</title><rect x="57.1865%" y="757" width="0.1593%" height="15" fill="rgb(231,125,12)"/><text x="57.4365%" y="767.50"></text></g><g><title>core::array::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (689 samples, 0.16%)</title><rect x="57.1865%" y="741" width="0.1593%" height="15" fill="rgb(216,96,41)"/><text x="57.4365%" y="751.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (689 samples, 0.16%)</title><rect x="57.1865%" y="725" width="0.1593%" height="15" fill="rgb(248,43,45)"/><text x="57.4365%" y="735.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (689 samples, 0.16%)</title><rect x="57.1865%" y="709" width="0.1593%" height="15" fill="rgb(217,222,7)"/><text x="57.4365%" y="719.50"></text></g><g><title>mcts_policy::game_rules::Move::index (3,315 samples, 0.77%)</title><rect x="56.6545%" y="869" width="0.7664%" height="15" fill="rgb(233,28,6)"/><text x="56.9045%" y="879.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3,087 samples, 0.71%)</title><rect x="56.7072%" y="853" width="0.7137%" height="15" fill="rgb(231,218,15)"/><text x="56.9572%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3,087 samples, 0.71%)</title><rect x="56.7072%" y="837" width="0.7137%" height="15" fill="rgb(226,171,48)"/><text x="56.9572%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3,085 samples, 0.71%)</title><rect x="56.7077%" y="821" width="0.7132%" height="15" fill="rgb(235,201,9)"/><text x="56.9577%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2,036 samples, 0.47%)</title><rect x="56.9502%" y="805" width="0.4707%" height="15" fill="rgb(217,80,15)"/><text x="57.2002%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2,036 samples, 0.47%)</title><rect x="56.9502%" y="789" width="0.4707%" height="15" fill="rgb(219,152,8)"/><text x="57.2002%" y="799.50"></text></g><g><title>mcts_policy::game_rules::Move::new_well (539 samples, 0.12%)</title><rect x="57.4209%" y="869" width="0.1246%" height="15" fill="rgb(243,107,38)"/><text x="57.6709%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (858 samples, 0.20%)</title><rect x="59.3506%" y="853" width="0.1984%" height="15" fill="rgb(231,17,5)"/><text x="59.6006%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (858 samples, 0.20%)</title><rect x="59.3506%" y="837" width="0.1984%" height="15" fill="rgb(209,25,54)"/><text x="59.6006%" y="847.50"></text></g><g><title>mcts_policy::game_rules::Move::one_move (8,952 samples, 2.07%)</title><rect x="57.5455%" y="869" width="2.0696%" height="15" fill="rgb(219,0,2)"/><text x="57.7955%" y="879.50">m..</text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3,356 samples, 0.78%)</title><rect x="63.2314%" y="693" width="0.7759%" height="15" fill="rgb(246,9,5)"/><text x="63.4814%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7,129 samples, 1.65%)</title><rect x="62.7824%" y="709" width="1.6482%" height="15" fill="rgb(226,159,4)"/><text x="63.0324%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,831 samples, 0.42%)</title><rect x="64.0073%" y="693" width="0.4233%" height="15" fill="rgb(219,175,34)"/><text x="64.2573%" y="703.50"></text></g><g><title>core::hash::sip::u8to64_le (4,972 samples, 1.15%)</title><rect x="64.4366%" y="709" width="1.1495%" height="15" fill="rgb(236,10,46)"/><text x="64.6866%" y="719.50"></text></g><g><title>&lt;mcts_policy::game_rules::Move as core::hash::Hash&gt;::hash (24,752 samples, 5.72%)</title><rect x="59.8664%" y="805" width="5.7224%" height="15" fill="rgb(240,211,16)"/><text x="60.1164%" y="815.50">&lt;mcts_p..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (24,299 samples, 5.62%)</title><rect x="59.9711%" y="789" width="5.6177%" height="15" fill="rgb(205,3,43)"/><text x="60.2211%" y="799.50">core::h..</text></g><g><title>core::hash::Hasher::write_usize (22,608 samples, 5.23%)</title><rect x="60.3621%" y="773" width="5.2268%" height="15" fill="rgb(245,7,22)"/><text x="60.6121%" y="783.50">core::..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (21,159 samples, 4.89%)</title><rect x="60.6971%" y="757" width="4.8918%" height="15" fill="rgb(239,132,32)"/><text x="60.9471%" y="767.50">&lt;std::..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (21,159 samples, 4.89%)</title><rect x="60.6971%" y="741" width="4.8918%" height="15" fill="rgb(228,202,34)"/><text x="60.9471%" y="751.50">&lt;core:..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (21,159 samples, 4.89%)</title><rect x="60.6971%" y="725" width="4.8918%" height="15" fill="rgb(254,200,22)"/><text x="60.9471%" y="735.50">&lt;core:..</text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (878 samples, 0.20%)</title><rect x="65.9435%" y="741" width="0.2030%" height="15" fill="rgb(219,10,39)"/><text x="66.1935%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,784 samples, 0.41%)</title><rect x="65.8390%" y="757" width="0.4124%" height="15" fill="rgb(226,210,39)"/><text x="66.0890%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (454 samples, 0.10%)</title><rect x="66.1465%" y="741" width="0.1050%" height="15" fill="rgb(208,219,16)"/><text x="66.3965%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2,774 samples, 0.64%)</title><rect x="66.4383%" y="741" width="0.6413%" height="15" fill="rgb(216,158,51)"/><text x="66.6883%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5,041 samples, 1.17%)</title><rect x="66.2514%" y="757" width="1.1654%" height="15" fill="rgb(233,14,44)"/><text x="66.5014%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,459 samples, 0.34%)</title><rect x="67.0796%" y="741" width="0.3373%" height="15" fill="rgb(237,97,39)"/><text x="67.3296%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7,909 samples, 1.83%)</title><rect x="65.5889%" y="805" width="1.8285%" height="15" fill="rgb(218,198,43)"/><text x="65.8389%" y="815.50">&lt;..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7,909 samples, 1.83%)</title><rect x="65.5889%" y="789" width="1.8285%" height="15" fill="rgb(231,104,20)"/><text x="65.8389%" y="799.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7,909 samples, 1.83%)</title><rect x="65.5889%" y="773" width="1.8285%" height="15" fill="rgb(254,36,13)"/><text x="65.8389%" y="783.50">&lt;..</text></g><g><title>hashbrown::map::make_hash (35,225 samples, 8.14%)</title><rect x="59.8336%" y="821" width="8.1437%" height="15" fill="rgb(248,14,50)"/><text x="60.0836%" y="831.50">hashbrown::..</text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2,422 samples, 0.56%)</title><rect x="67.4173%" y="805" width="0.5599%" height="15" fill="rgb(217,107,29)"/><text x="67.6673%" y="815.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1,851 samples, 0.43%)</title><rect x="67.5494%" y="789" width="0.4279%" height="15" fill="rgb(251,169,33)"/><text x="67.7994%" y="799.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (912 samples, 0.21%)</title><rect x="67.7664%" y="773" width="0.2108%" height="15" fill="rgb(217,108,32)"/><text x="68.0164%" y="783.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (912 samples, 0.21%)</title><rect x="67.7664%" y="757" width="0.2108%" height="15" fill="rgb(219,66,42)"/><text x="68.0164%" y="767.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1,490 samples, 0.34%)</title><rect x="68.6937%" y="741" width="0.3445%" height="15" fill="rgb(206,180,7)"/><text x="68.9437%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,967 samples, 0.45%)</title><rect x="68.6642%" y="757" width="0.4548%" height="15" fill="rgb(208,226,31)"/><text x="68.9142%" y="767.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (482 samples, 0.11%)</title><rect x="69.1189%" y="757" width="0.1114%" height="15" fill="rgb(218,26,49)"/><text x="69.3689%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,978 samples, 0.69%)</title><rect x="68.6080%" y="773" width="0.6885%" height="15" fill="rgb(233,197,48)"/><text x="68.8580%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,111 samples, 0.72%)</title><rect x="68.6080%" y="789" width="0.7192%" height="15" fill="rgb(252,181,51)"/><text x="68.8580%" y="799.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (685 samples, 0.16%)</title><rect x="69.3277%" y="789" width="0.1584%" height="15" fill="rgb(253,90,19)"/><text x="69.5777%" y="799.50"></text></g><g><title>&lt;mcts_policy::game_rules::Move as core::cmp::PartialEq&gt;::eq (685 samples, 0.16%)</title><rect x="69.3277%" y="773" width="0.1584%" height="15" fill="rgb(215,171,30)"/><text x="69.5777%" y="783.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1,546 samples, 0.36%)</title><rect x="69.6382%" y="741" width="0.3574%" height="15" fill="rgb(214,222,9)"/><text x="69.8882%" y="751.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1,546 samples, 0.36%)</title><rect x="69.6382%" y="725" width="0.3574%" height="15" fill="rgb(223,3,22)"/><text x="69.8882%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,546 samples, 0.36%)</title><rect x="69.6382%" y="709" width="0.3574%" height="15" fill="rgb(225,196,46)"/><text x="69.8882%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (45,214 samples, 10.45%)</title><rect x="59.6463%" y="869" width="10.4531%" height="15" fill="rgb(209,110,37)"/><text x="59.8963%" y="879.50">std::collection..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (44,954 samples, 10.39%)</title><rect x="59.7064%" y="853" width="10.3930%" height="15" fill="rgb(249,89,12)"/><text x="59.9564%" y="863.50">hashbrown::map:..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (44,404 samples, 10.27%)</title><rect x="59.8336%" y="837" width="10.2658%" height="15" fill="rgb(226,27,33)"/><text x="60.0836%" y="847.50">hashbrown::map:..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9,179 samples, 2.12%)</title><rect x="67.9773%" y="821" width="2.1221%" height="15" fill="rgb(213,82,22)"/><text x="68.2273%" y="831.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9,179 samples, 2.12%)</title><rect x="67.9773%" y="805" width="2.1221%" height="15" fill="rgb(248,140,0)"/><text x="68.2273%" y="815.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2,478 samples, 0.57%)</title><rect x="69.5265%" y="789" width="0.5729%" height="15" fill="rgb(228,106,3)"/><text x="69.7765%" y="799.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2,478 samples, 0.57%)</title><rect x="69.5265%" y="773" width="0.5729%" height="15" fill="rgb(209,23,37)"/><text x="69.7765%" y="783.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2,478 samples, 0.57%)</title><rect x="69.5265%" y="757" width="0.5729%" height="15" fill="rgb(241,93,50)"/><text x="69.7765%" y="767.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (449 samples, 0.10%)</title><rect x="69.9956%" y="741" width="0.1038%" height="15" fill="rgb(253,46,43)"/><text x="70.2456%" y="751.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (449 samples, 0.10%)</title><rect x="69.9956%" y="725" width="0.1038%" height="15" fill="rgb(226,206,43)"/><text x="70.2456%" y="735.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (449 samples, 0.10%)</title><rect x="69.9956%" y="709" width="0.1038%" height="15" fill="rgb(217,54,7)"/><text x="70.2456%" y="719.50"></text></g><g><title>core::core_arch::simd::i8x16::new (449 samples, 0.10%)</title><rect x="69.9956%" y="693" width="0.1038%" height="15" fill="rgb(223,5,52)"/><text x="70.2456%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2,641 samples, 0.61%)</title><rect x="73.7686%" y="709" width="0.6106%" height="15" fill="rgb(206,52,46)"/><text x="74.0186%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5,433 samples, 1.26%)</title><rect x="73.4302%" y="725" width="1.2561%" height="15" fill="rgb(253,136,11)"/><text x="73.6802%" y="735.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,328 samples, 0.31%)</title><rect x="74.3792%" y="709" width="0.3070%" height="15" fill="rgb(208,106,33)"/><text x="74.6292%" y="719.50"></text></g><g><title>core::hash::sip::u8to64_le (3,863 samples, 0.89%)</title><rect x="74.6918%" y="725" width="0.8931%" height="15" fill="rgb(206,54,4)"/><text x="74.9418%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (16,020 samples, 3.70%)</title><rect x="71.8826%" y="773" width="3.7037%" height="15" fill="rgb(213,3,15)"/><text x="72.1326%" y="783.50">&lt;std..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (16,020 samples, 3.70%)</title><rect x="71.8826%" y="757" width="3.7037%" height="15" fill="rgb(252,211,39)"/><text x="72.1326%" y="767.50">&lt;cor..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (16,020 samples, 3.70%)</title><rect x="71.8826%" y="741" width="3.7037%" height="15" fill="rgb(223,6,36)"/><text x="72.1326%" y="751.50">&lt;cor..</text></g><g><title>&lt;mcts_policy::game_rules::Move as core::hash::Hash&gt;::hash (19,109 samples, 4.42%)</title><rect x="71.1686%" y="821" width="4.4178%" height="15" fill="rgb(252,169,45)"/><text x="71.4186%" y="831.50">&lt;mcts..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (18,405 samples, 4.26%)</title><rect x="71.3314%" y="805" width="4.2551%" height="15" fill="rgb(212,48,26)"/><text x="71.5814%" y="815.50">core:..</text></g><g><title>core::hash::Hasher::write_usize (17,099 samples, 3.95%)</title><rect x="71.6333%" y="789" width="3.9531%" height="15" fill="rgb(251,102,48)"/><text x="71.8833%" y="799.50">core..</text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (630 samples, 0.15%)</title><rect x="75.8470%" y="757" width="0.1457%" height="15" fill="rgb(243,208,16)"/><text x="76.0970%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,326 samples, 0.31%)</title><rect x="75.7705%" y="773" width="0.3066%" height="15" fill="rgb(219,96,24)"/><text x="76.0205%" y="783.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2,189 samples, 0.51%)</title><rect x="76.2007%" y="757" width="0.5061%" height="15" fill="rgb(219,33,29)"/><text x="76.4507%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (5,969 samples, 1.38%)</title><rect x="75.5865%" y="821" width="1.3800%" height="15" fill="rgb(223,176,5)"/><text x="75.8365%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5,969 samples, 1.38%)</title><rect x="75.5865%" y="805" width="1.3800%" height="15" fill="rgb(228,140,14)"/><text x="75.8365%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5,969 samples, 1.38%)</title><rect x="75.5865%" y="789" width="1.3800%" height="15" fill="rgb(217,179,31)"/><text x="75.8365%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3,847 samples, 0.89%)</title><rect x="76.0771%" y="773" width="0.8894%" height="15" fill="rgb(230,9,30)"/><text x="76.3271%" y="783.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,123 samples, 0.26%)</title><rect x="76.7068%" y="757" width="0.2596%" height="15" fill="rgb(230,136,20)"/><text x="76.9568%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1,425 samples, 0.33%)</title><rect x="76.9665%" y="821" width="0.3294%" height="15" fill="rgb(215,210,22)"/><text x="77.2165%" y="831.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1,042 samples, 0.24%)</title><rect x="77.0550%" y="805" width="0.2409%" height="15" fill="rgb(218,43,5)"/><text x="77.3050%" y="815.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (547 samples, 0.13%)</title><rect x="77.1694%" y="789" width="0.1265%" height="15" fill="rgb(216,11,5)"/><text x="77.4194%" y="799.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (547 samples, 0.13%)</title><rect x="77.1694%" y="773" width="0.1265%" height="15" fill="rgb(209,82,29)"/><text x="77.4194%" y="783.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (518 samples, 0.12%)</title><rect x="77.2980%" y="789" width="0.1198%" height="15" fill="rgb(244,115,12)"/><text x="77.5480%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (518 samples, 0.12%)</title><rect x="77.2980%" y="773" width="0.1198%" height="15" fill="rgb(222,82,18)"/><text x="77.5480%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (666 samples, 0.15%)</title><rect x="77.2980%" y="805" width="0.1540%" height="15" fill="rgb(249,227,8)"/><text x="77.5480%" y="815.50"></text></g><g><title>hashbrown::map::make_insert_hash (27,342 samples, 6.32%)</title><rect x="71.1686%" y="837" width="6.3212%" height="15" fill="rgb(253,141,45)"/><text x="71.4186%" y="847.50">hashbrow..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (839 samples, 0.19%)</title><rect x="77.2959%" y="821" width="0.1940%" height="15" fill="rgb(234,184,4)"/><text x="77.5459%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,687 samples, 0.39%)</title><rect x="77.8639%" y="773" width="0.3900%" height="15" fill="rgb(218,194,23)"/><text x="78.1139%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,101 samples, 0.49%)</title><rect x="77.8274%" y="789" width="0.4857%" height="15" fill="rgb(235,66,41)"/><text x="78.0774%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,261 samples, 0.52%)</title><rect x="77.8274%" y="805" width="0.5227%" height="15" fill="rgb(245,217,1)"/><text x="78.0774%" y="815.50"></text></g><g><title>&lt;mcts_policy::game_rules::Move as core::cmp::PartialEq&gt;::eq (885 samples, 0.20%)</title><rect x="78.3504%" y="789" width="0.2046%" height="15" fill="rgb(229,91,1)"/><text x="78.6004%" y="799.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1,137 samples, 0.26%)</title><rect x="78.3504%" y="805" width="0.2629%" height="15" fill="rgb(207,101,30)"/><text x="78.6004%" y="815.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (700 samples, 0.16%)</title><rect x="78.7933%" y="757" width="0.1618%" height="15" fill="rgb(223,82,49)"/><text x="79.0433%" y="767.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (700 samples, 0.16%)</title><rect x="78.7933%" y="741" width="0.1618%" height="15" fill="rgb(218,167,17)"/><text x="79.0433%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (700 samples, 0.16%)</title><rect x="78.7933%" y="725" width="0.1618%" height="15" fill="rgb(208,103,14)"/><text x="79.0433%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (6,674 samples, 1.54%)</title><rect x="77.4899%" y="837" width="1.5430%" height="15" fill="rgb(238,20,8)"/><text x="77.7399%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6,674 samples, 1.54%)</title><rect x="77.4899%" y="821" width="1.5430%" height="15" fill="rgb(218,80,54)"/><text x="77.7399%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1,677 samples, 0.39%)</title><rect x="78.6451%" y="805" width="0.3877%" height="15" fill="rgb(240,144,17)"/><text x="78.8951%" y="815.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1,677 samples, 0.39%)</title><rect x="78.6451%" y="789" width="0.3877%" height="15" fill="rgb(245,27,50)"/><text x="78.8951%" y="799.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1,677 samples, 0.39%)</title><rect x="78.6451%" y="773" width="0.3877%" height="15" fill="rgb(251,51,7)"/><text x="78.8951%" y="783.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (759 samples, 0.18%)</title><rect x="79.1789%" y="821" width="0.1755%" height="15" fill="rgb(245,217,29)"/><text x="79.4289%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (759 samples, 0.18%)</title><rect x="79.1789%" y="805" width="0.1755%" height="15" fill="rgb(221,176,29)"/><text x="79.4289%" y="815.50"></text></g><g><title>core::ptr::write (759 samples, 0.18%)</title><rect x="79.1789%" y="789" width="0.1755%" height="15" fill="rgb(212,180,24)"/><text x="79.4289%" y="799.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (435 samples, 0.10%)</title><rect x="79.5327%" y="741" width="0.1006%" height="15" fill="rgb(254,24,2)"/><text x="79.7827%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (863 samples, 0.20%)</title><rect x="79.4469%" y="773" width="0.1995%" height="15" fill="rgb(230,100,2)"/><text x="79.6969%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (863 samples, 0.20%)</title><rect x="79.4469%" y="757" width="0.1995%" height="15" fill="rgb(219,142,25)"/><text x="79.6969%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (834 samples, 0.19%)</title><rect x="79.6954%" y="709" width="0.1928%" height="15" fill="rgb(240,73,43)"/><text x="79.9454%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (828 samples, 0.19%)</title><rect x="79.6968%" y="693" width="0.1914%" height="15" fill="rgb(214,114,15)"/><text x="79.9468%" y="703.50"></text></g><g><title>_int_free (569 samples, 0.13%)</title><rect x="79.7567%" y="677" width="0.1315%" height="15" fill="rgb(207,130,4)"/><text x="80.0067%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (897 samples, 0.21%)</title><rect x="79.6954%" y="725" width="0.2074%" height="15" fill="rgb(221,25,40)"/><text x="79.9454%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (915 samples, 0.21%)</title><rect x="79.6929%" y="773" width="0.2115%" height="15" fill="rgb(241,184,7)"/><text x="79.9429%" y="783.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (915 samples, 0.21%)</title><rect x="79.6929%" y="757" width="0.2115%" height="15" fill="rgb(235,159,4)"/><text x="79.9429%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (915 samples, 0.21%)</title><rect x="79.6929%" y="741" width="0.2115%" height="15" fill="rgb(214,87,48)"/><text x="79.9429%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,174 samples, 0.27%)</title><rect x="81.8608%" y="629" width="0.2714%" height="15" fill="rgb(246,198,24)"/><text x="82.1108%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5,119 samples, 1.18%)</title><rect x="81.3891%" y="645" width="1.1835%" height="15" fill="rgb(209,66,40)"/><text x="81.6391%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,905 samples, 0.44%)</title><rect x="82.1322%" y="629" width="0.4404%" height="15" fill="rgb(233,147,39)"/><text x="82.3822%" y="639.50"></text></g><g><title>core::hash::sip::u8to64_le (3,075 samples, 0.71%)</title><rect x="82.5742%" y="645" width="0.7109%" height="15" fill="rgb(231,145,52)"/><text x="82.8242%" y="655.50"></text></g><g><title>&lt;mcts_policy::game_rules::Move as core::hash::Hash&gt;::hash (14,420 samples, 3.33%)</title><rect x="79.9530%" y="741" width="3.3338%" height="15" fill="rgb(206,20,26)"/><text x="80.2030%" y="751.50">&lt;mc..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (14,211 samples, 3.29%)</title><rect x="80.0013%" y="725" width="3.2855%" height="15" fill="rgb(238,220,4)"/><text x="80.2513%" y="735.50">cor..</text></g><g><title>core::hash::Hasher::write_usize (13,150 samples, 3.04%)</title><rect x="80.2466%" y="709" width="3.0402%" height="15" fill="rgb(252,195,42)"/><text x="80.4966%" y="719.50">cor..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13,029 samples, 3.01%)</title><rect x="80.2746%" y="693" width="3.0122%" height="15" fill="rgb(209,10,6)"/><text x="80.5246%" y="703.50">&lt;st..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13,029 samples, 3.01%)</title><rect x="80.2746%" y="677" width="3.0122%" height="15" fill="rgb(229,3,52)"/><text x="80.5246%" y="687.50">&lt;co..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13,029 samples, 3.01%)</title><rect x="80.2746%" y="661" width="3.0122%" height="15" fill="rgb(253,49,37)"/><text x="80.5246%" y="671.50">&lt;co..</text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (582 samples, 0.13%)</title><rect x="83.4964%" y="677" width="0.1346%" height="15" fill="rgb(240,103,49)"/><text x="83.7464%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,157 samples, 0.27%)</title><rect x="83.4275%" y="693" width="0.2675%" height="15" fill="rgb(250,182,30)"/><text x="83.6775%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,607 samples, 0.37%)</title><rect x="83.7861%" y="677" width="0.3715%" height="15" fill="rgb(248,8,30)"/><text x="84.0361%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4,656 samples, 1.08%)</title><rect x="83.2867%" y="741" width="1.0764%" height="15" fill="rgb(237,120,30)"/><text x="83.5367%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4,656 samples, 1.08%)</title><rect x="83.2867%" y="725" width="1.0764%" height="15" fill="rgb(221,146,34)"/><text x="83.5367%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4,656 samples, 1.08%)</title><rect x="83.2867%" y="709" width="1.0764%" height="15" fill="rgb(242,55,13)"/><text x="83.5367%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2,890 samples, 0.67%)</title><rect x="83.6950%" y="693" width="0.6681%" height="15" fill="rgb(242,112,31)"/><text x="83.9450%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (889 samples, 0.21%)</title><rect x="84.1576%" y="677" width="0.2055%" height="15" fill="rgb(249,192,27)"/><text x="84.4076%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (977 samples, 0.23%)</title><rect x="84.3632%" y="741" width="0.2259%" height="15" fill="rgb(208,204,44)"/><text x="84.6132%" y="751.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (631 samples, 0.15%)</title><rect x="84.4432%" y="725" width="0.1459%" height="15" fill="rgb(208,93,54)"/><text x="84.6932%" y="735.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (615 samples, 0.14%)</title><rect x="84.4469%" y="709" width="0.1422%" height="15" fill="rgb(242,1,31)"/><text x="84.6969%" y="719.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (615 samples, 0.14%)</title><rect x="84.4469%" y="693" width="0.1422%" height="15" fill="rgb(241,83,25)"/><text x="84.6969%" y="703.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (528 samples, 0.12%)</title><rect x="84.5893%" y="709" width="0.1221%" height="15" fill="rgb(205,169,50)"/><text x="84.8393%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (528 samples, 0.12%)</title><rect x="84.5893%" y="693" width="0.1221%" height="15" fill="rgb(239,186,37)"/><text x="84.8393%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (670 samples, 0.15%)</title><rect x="84.5893%" y="725" width="0.1549%" height="15" fill="rgb(205,221,10)"/><text x="84.8393%" y="735.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (21,071 samples, 4.87%)</title><rect x="79.9044%" y="773" width="4.8714%" height="15" fill="rgb(218,196,15)"/><text x="80.1544%" y="783.50">hashbr..</text></g><g><title>hashbrown::map::make_hash (21,058 samples, 4.87%)</title><rect x="79.9074%" y="757" width="4.8684%" height="15" fill="rgb(218,196,35)"/><text x="80.1574%" y="767.50">hashbr..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (808 samples, 0.19%)</title><rect x="84.5890%" y="741" width="0.1868%" height="15" fill="rgb(233,63,24)"/><text x="84.8390%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (1,213 samples, 0.28%)</title><rect x="84.8445%" y="757" width="0.2804%" height="15" fill="rgb(225,8,4)"/><text x="85.0945%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,213 samples, 0.28%)</title><rect x="84.8445%" y="741" width="0.2804%" height="15" fill="rgb(234,105,35)"/><text x="85.0945%" y="751.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (1,239 samples, 0.29%)</title><rect x="84.8445%" y="773" width="0.2864%" height="15" fill="rgb(236,21,32)"/><text x="85.0945%" y="783.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (582 samples, 0.13%)</title><rect x="85.3360%" y="741" width="0.1346%" height="15" fill="rgb(228,109,6)"/><text x="85.5860%" y="751.50"></text></g><g><title>hashbrown::raw::is_full (937 samples, 0.22%)</title><rect x="85.4706%" y="741" width="0.2166%" height="15" fill="rgb(229,215,31)"/><text x="85.7206%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2,698 samples, 0.62%)</title><rect x="85.1666%" y="757" width="0.6238%" height="15" fill="rgb(221,52,54)"/><text x="85.4166%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (1,099 samples, 0.25%)</title><rect x="85.7903%" y="741" width="0.2541%" height="15" fill="rgb(252,129,43)"/><text x="86.0403%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (3,799 samples, 0.88%)</title><rect x="85.1666%" y="773" width="0.8783%" height="15" fill="rgb(248,183,27)"/><text x="85.4166%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (1,101 samples, 0.25%)</title><rect x="85.7903%" y="757" width="0.2545%" height="15" fill="rgb(250,0,22)"/><text x="86.0403%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1,409 samples, 0.33%)</title><rect x="86.0953%" y="741" width="0.3257%" height="15" fill="rgb(213,166,10)"/><text x="86.3453%" y="751.50"></text></g><g><title>core::intrinsics::write_bytes (1,409 samples, 0.33%)</title><rect x="86.0953%" y="725" width="0.3257%" height="15" fill="rgb(207,163,36)"/><text x="86.3453%" y="735.50"></text></g><g><title>__memset_avx2_unaligned_erms (1,381 samples, 0.32%)</title><rect x="86.1017%" y="709" width="0.3193%" height="15" fill="rgb(208,122,22)"/><text x="86.3517%" y="719.50"></text></g><g><title>_int_malloc (2,247 samples, 0.52%)</title><rect x="86.6534%" y="645" width="0.5195%" height="15" fill="rgb(207,104,49)"/><text x="86.9034%" y="655.50"></text></g><g><title>__GI___libc_malloc (3,307 samples, 0.76%)</title><rect x="86.4756%" y="661" width="0.7645%" height="15" fill="rgb(248,211,50)"/><text x="86.7256%" y="671.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3,423 samples, 0.79%)</title><rect x="86.4709%" y="725" width="0.7914%" height="15" fill="rgb(217,13,45)"/><text x="86.7209%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,423 samples, 0.79%)</title><rect x="86.4709%" y="709" width="0.7914%" height="15" fill="rgb(211,216,49)"/><text x="86.7209%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,423 samples, 0.79%)</title><rect x="86.4709%" y="693" width="0.7914%" height="15" fill="rgb(221,58,53)"/><text x="86.7209%" y="703.50"></text></g><g><title>alloc::alloc::alloc (3,412 samples, 0.79%)</title><rect x="86.4735%" y="677" width="0.7888%" height="15" fill="rgb(220,112,41)"/><text x="86.7235%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (3,663 samples, 0.85%)</title><rect x="86.4210%" y="741" width="0.8469%" height="15" fill="rgb(236,38,28)"/><text x="86.6710%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (34,228 samples, 7.91%)</title><rect x="79.4159%" y="789" width="7.9132%" height="15" fill="rgb(227,195,22)"/><text x="79.6659%" y="799.50">hashbrown::..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (5,555 samples, 1.28%)</title><rect x="86.0449%" y="773" width="1.2843%" height="15" fill="rgb(214,55,33)"/><text x="86.2949%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (5,503 samples, 1.27%)</title><rect x="86.0569%" y="757" width="1.2722%" height="15" fill="rgb(248,80,13)"/><text x="86.3069%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (34,498 samples, 7.98%)</title><rect x="79.3664%" y="821" width="7.9756%" height="15" fill="rgb(238,52,6)"/><text x="79.6164%" y="831.50">hashbrown::..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (34,476 samples, 7.97%)</title><rect x="79.3715%" y="805" width="7.9705%" height="15" fill="rgb(224,198,47)"/><text x="79.6215%" y="815.50">hashbrown::..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2,994 samples, 0.69%)</title><rect x="87.3421%" y="821" width="0.6922%" height="15" fill="rgb(233,171,20)"/><text x="87.5921%" y="831.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (622 samples, 0.14%)</title><rect x="87.8905%" y="805" width="0.1438%" height="15" fill="rgb(241,30,25)"/><text x="88.1405%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (622 samples, 0.14%)</title><rect x="87.8905%" y="789" width="0.1438%" height="15" fill="rgb(207,171,38)"/><text x="88.1405%" y="799.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (78,674 samples, 18.19%)</title><rect x="70.0994%" y="869" width="18.1887%" height="15" fill="rgb(234,70,1)"/><text x="70.3494%" y="879.50">std::collections::hash::map:..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (77,441 samples, 17.90%)</title><rect x="70.3844%" y="853" width="17.9037%" height="15" fill="rgb(232,178,18)"/><text x="70.6344%" y="863.50">hashbrown::map::HashMap&lt;K,V,..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (40,033 samples, 9.26%)</title><rect x="79.0328%" y="837" width="9.2553%" height="15" fill="rgb(241,78,40)"/><text x="79.2828%" y="847.50">hashbrown::ra..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (1,098 samples, 0.25%)</title><rect x="88.0343%" y="821" width="0.2538%" height="15" fill="rgb(222,35,25)"/><text x="88.2843%" y="831.50"></text></g><g><title>mcts_policy::game_rules::legal_moves (143,133 samples, 33.09%)</title><rect x="55.2488%" y="885" width="33.0910%" height="15" fill="rgb(207,92,16)"/><text x="55.4988%" y="895.50">mcts_policy::game_rules::legal_moves</text></g><g><title>at_free (749 samples, 0.17%)</title><rect x="88.3919%" y="821" width="0.1732%" height="15" fill="rgb(216,59,51)"/><text x="88.6419%" y="831.50"></text></g><g><title>at::Tensor::~Tensor (739 samples, 0.17%)</title><rect x="88.3942%" y="805" width="0.1709%" height="15" fill="rgb(213,80,28)"/><text x="88.6442%" y="815.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (739 samples, 0.17%)</title><rect x="88.3942%" y="789" width="0.1709%" height="15" fill="rgb(220,93,7)"/><text x="88.6442%" y="799.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (739 samples, 0.17%)</title><rect x="88.3942%" y="773" width="0.1709%" height="15" fill="rgb(225,24,44)"/><text x="88.6442%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tch::wrappers::tensor::Tensor&gt; (810 samples, 0.19%)</title><rect x="88.3803%" y="853" width="0.1873%" height="15" fill="rgb(243,74,40)"/><text x="88.6303%" y="863.50"></text></g><g><title>&lt;tch::wrappers::tensor::Tensor as core::ops::drop::Drop&gt;::drop (810 samples, 0.19%)</title><rect x="88.3803%" y="837" width="0.1873%" height="15" fill="rgb(228,39,7)"/><text x="88.6303%" y="847.50"></text></g><g><title>at::native::convolution (482 samples, 0.11%)</title><rect x="88.6966%" y="693" width="0.1114%" height="15" fill="rgb(227,79,8)"/><text x="88.9466%" y="703.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_convolution&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, bool, c10::ArrayRef&lt;long&gt;, long)&gt;::call (544 samples, 0.13%)</title><rect x="88.6931%" y="709" width="0.1258%" height="15" fill="rgb(236,58,11)"/><text x="88.9431%" y="719.50"></text></g><g><title>at::convolution (617 samples, 0.14%)</title><rect x="88.6788%" y="725" width="0.1426%" height="15" fill="rgb(249,63,35)"/><text x="88.9288%" y="735.50"></text></g><g><title>at::native::conv2d (691 samples, 0.16%)</title><rect x="88.6698%" y="741" width="0.1598%" height="15" fill="rgb(252,114,16)"/><text x="88.9198%" y="751.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_conv2d&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, long)&gt;::call (728 samples, 0.17%)</title><rect x="88.6689%" y="757" width="0.1683%" height="15" fill="rgb(254,151,24)"/><text x="88.9189%" y="767.50"></text></g><g><title>at::conv2d (936 samples, 0.22%)</title><rect x="88.6238%" y="773" width="0.2164%" height="15" fill="rgb(253,54,39)"/><text x="88.8738%" y="783.50"></text></g><g><title>atg_conv2d (1,211 samples, 0.28%)</title><rect x="88.5789%" y="789" width="0.2800%" height="15" fill="rgb(243,25,45)"/><text x="88.8289%" y="799.50"></text></g><g><title>&lt;tch::nn::conv::Conv&lt;[i64: 2]&gt; as tch::nn::module::Module&gt;::forward (1,291 samples, 0.30%)</title><rect x="88.5676%" y="837" width="0.2985%" height="15" fill="rgb(234,134,9)"/><text x="88.8176%" y="847.50"></text></g><g><title>tch::wrappers::tensor_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::conv2d (1,259 samples, 0.29%)</title><rect x="88.5750%" y="821" width="0.2911%" height="15" fill="rgb(227,166,31)"/><text x="88.8250%" y="831.50"></text></g><g><title>tch::wrappers::tensor_fallible_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::f_conv2d (1,259 samples, 0.29%)</title><rect x="88.5750%" y="805" width="0.2911%" height="15" fill="rgb(245,143,41)"/><text x="88.8250%" y="815.50"></text></g><g><title>tch::tensor::ops::&lt;impl core::ops::arith::Add&lt;&amp;tch::wrappers::tensor::Tensor&gt; for tch::wrappers::tensor::Tensor&gt;::add (450 samples, 0.10%)</title><rect x="88.8689%" y="821" width="0.1040%" height="15" fill="rgb(238,181,32)"/><text x="89.1189%" y="831.50"></text></g><g><title>at::native::matmul (721 samples, 0.17%)</title><rect x="88.9780%" y="741" width="0.1667%" height="15" fill="rgb(224,113,18)"/><text x="89.2280%" y="751.50"></text></g><g><title>at::native::matmul (702 samples, 0.16%)</title><rect x="88.9824%" y="725" width="0.1623%" height="15" fill="rgb(240,229,28)"/><text x="89.2324%" y="735.50"></text></g><g><title>at::matmul (739 samples, 0.17%)</title><rect x="88.9747%" y="773" width="0.1709%" height="15" fill="rgb(250,185,3)"/><text x="89.2247%" y="783.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_matmul&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;)&gt;::call (727 samples, 0.17%)</title><rect x="88.9775%" y="757" width="0.1681%" height="15" fill="rgb(212,59,25)"/><text x="89.2275%" y="767.50"></text></g><g><title>atg_matmul (749 samples, 0.17%)</title><rect x="88.9736%" y="789" width="0.1732%" height="15" fill="rgb(221,87,20)"/><text x="89.2236%" y="799.50"></text></g><g><title>tch::wrappers::tensor_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::matmul (754 samples, 0.17%)</title><rect x="88.9729%" y="821" width="0.1743%" height="15" fill="rgb(213,74,28)"/><text x="89.2229%" y="831.50"></text></g><g><title>tch::wrappers::tensor_fallible_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::f_matmul (754 samples, 0.17%)</title><rect x="88.9729%" y="805" width="0.1743%" height="15" fill="rgb(224,132,34)"/><text x="89.2229%" y="815.50"></text></g><g><title>&lt;tch::nn::linear::Linear as tch::nn::module::Module&gt;::forward (1,438 samples, 0.33%)</title><rect x="88.8661%" y="837" width="0.3325%" height="15" fill="rgb(222,101,24)"/><text x="89.1161%" y="847.50"></text></g><g><title>tch::nn::module::&lt;impl tch::wrappers::tensor::Tensor&gt;::apply (2,730 samples, 0.63%)</title><rect x="88.5676%" y="853" width="0.6312%" height="15" fill="rgb(254,142,4)"/><text x="88.8176%" y="863.50"></text></g><g><title>at::native::_batch_norm_impl_index (903 samples, 0.21%)</title><rect x="89.3715%" y="693" width="0.2088%" height="15" fill="rgb(230,229,49)"/><text x="89.6215%" y="703.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper__batch_norm_impl_index&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt; (at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (951 samples, 0.22%)</title><rect x="89.3698%" y="709" width="0.2199%" height="15" fill="rgb(238,70,47)"/><text x="89.6198%" y="719.50"></text></g><g><title>at::_batch_norm_impl_index (1,097 samples, 0.25%)</title><rect x="89.3437%" y="725" width="0.2536%" height="15" fill="rgb(231,160,17)"/><text x="89.5937%" y="735.50"></text></g><g><title>at::native::batch_norm (1,439 samples, 0.33%)</title><rect x="89.3183%" y="741" width="0.3327%" height="15" fill="rgb(218,68,53)"/><text x="89.5683%" y="751.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_batch_norm&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool&gt; &gt;, at::Tensor (at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double, bool)&gt;::call (1,490 samples, 0.34%)</title><rect x="89.3157%" y="757" width="0.3445%" height="15" fill="rgb(236,111,10)"/><text x="89.5657%" y="767.50"></text></g><g><title>at::batch_norm (1,623 samples, 0.38%)</title><rect x="89.2938%" y="773" width="0.3752%" height="15" fill="rgb(224,34,41)"/><text x="89.5438%" y="783.50"></text></g><g><title>atg_batch_norm (2,093 samples, 0.48%)</title><rect x="89.2244%" y="789" width="0.4839%" height="15" fill="rgb(241,118,19)"/><text x="89.4744%" y="799.50"></text></g><g><title>tch::nn::module::&lt;impl tch::wrappers::tensor::Tensor&gt;::apply_t (2,225 samples, 0.51%)</title><rect x="89.1988%" y="853" width="0.5144%" height="15" fill="rgb(238,129,25)"/><text x="89.4488%" y="863.50"></text></g><g><title>&lt;tch::nn::batch_norm::BatchNorm as tch::nn::module::ModuleT&gt;::forward_t (2,225 samples, 0.51%)</title><rect x="89.1988%" y="837" width="0.5144%" height="15" fill="rgb(238,22,31)"/><text x="89.4488%" y="847.50"></text></g><g><title>tch::wrappers::tensor_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::batch_norm (2,122 samples, 0.49%)</title><rect x="89.2226%" y="821" width="0.4906%" height="15" fill="rgb(222,174,48)"/><text x="89.4726%" y="831.50"></text></g><g><title>tch::wrappers::tensor_fallible_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::f_batch_norm (2,122 samples, 0.49%)</title><rect x="89.2226%" y="805" width="0.4906%" height="15" fill="rgb(206,152,40)"/><text x="89.4726%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tch::wrappers::tensor::Tensor&gt; (444 samples, 0.10%)</title><rect x="89.8003%" y="837" width="0.1026%" height="15" fill="rgb(218,99,54)"/><text x="90.0503%" y="847.50"></text></g><g><title>&lt;tch::wrappers::tensor::Tensor as core::ops::drop::Drop&gt;::drop (444 samples, 0.10%)</title><rect x="89.8003%" y="821" width="0.1026%" height="15" fill="rgb(220,174,26)"/><text x="90.0503%" y="831.50"></text></g><g><title>at::TensorIteratorBase::build (487 samples, 0.11%)</title><rect x="89.9864%" y="645" width="0.1126%" height="15" fill="rgb(245,116,9)"/><text x="90.2364%" y="655.50"></text></g><g><title>at::TensorIteratorBase::build_borrowing_binary_op (518 samples, 0.12%)</title><rect x="89.9841%" y="661" width="0.1198%" height="15" fill="rgb(209,72,35)"/><text x="90.2341%" y="671.50"></text></g><g><title>at::meta::add_Tensor::meta (548 samples, 0.13%)</title><rect x="89.9806%" y="677" width="0.1267%" height="15" fill="rgb(226,126,21)"/><text x="90.2306%" y="687.50"></text></g><g><title>c10::Dispatcher::redispatch&lt;at::Tensor, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; (894 samples, 0.21%)</title><rect x="89.9538%" y="725" width="0.2067%" height="15" fill="rgb(227,192,1)"/><text x="90.2038%" y="735.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::wrapper_add_Tensor&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor (at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (864 samples, 0.20%)</title><rect x="89.9608%" y="709" width="0.1997%" height="15" fill="rgb(237,180,29)"/><text x="90.2108%" y="719.50"></text></g><g><title>at::(anonymous namespace)::wrapper_add_Tensor (859 samples, 0.20%)</title><rect x="89.9619%" y="693" width="0.1986%" height="15" fill="rgb(230,197,35)"/><text x="90.2119%" y="703.50"></text></g><g><title>at::redispatch::add (923 samples, 0.21%)</title><rect x="89.9511%" y="741" width="0.2134%" height="15" fill="rgb(246,193,31)"/><text x="90.2011%" y="751.50"></text></g><g><title>at::add (1,763 samples, 0.41%)</title><rect x="89.9161%" y="789" width="0.4076%" height="15" fill="rgb(241,36,4)"/><text x="90.1661%" y="799.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::add_Tensor&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;, at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (1,696 samples, 0.39%)</title><rect x="89.9316%" y="773" width="0.3921%" height="15" fill="rgb(241,130,17)"/><text x="90.1816%" y="783.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::add_Tensor (1,695 samples, 0.39%)</title><rect x="89.9319%" y="757" width="0.3919%" height="15" fill="rgb(206,137,32)"/><text x="90.1819%" y="767.50"></text></g><g><title>atg_add (1,846 samples, 0.43%)</title><rect x="89.9044%" y="805" width="0.4268%" height="15" fill="rgb(237,228,51)"/><text x="90.1544%" y="815.50"></text></g><g><title>tch::tensor::ops::&lt;impl core::ops::arith::Add&lt;&amp;tch::wrappers::tensor::Tensor&gt; for tch::wrappers::tensor::Tensor&gt;::add (2,313 samples, 0.53%)</title><rect x="89.7999%" y="853" width="0.5347%" height="15" fill="rgb(243,6,42)"/><text x="90.0499%" y="863.50"></text></g><g><title>tch::wrappers::tensor_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::g_add (1,867 samples, 0.43%)</title><rect x="89.9030%" y="837" width="0.4316%" height="15" fill="rgb(251,74,28)"/><text x="90.1530%" y="847.50"></text></g><g><title>tch::wrappers::tensor_fallible_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::f_add (1,867 samples, 0.43%)</title><rect x="89.9030%" y="821" width="0.4316%" height="15" fill="rgb(218,20,49)"/><text x="90.1530%" y="831.50"></text></g><g><title>at::TensorIteratorBase::build (684 samples, 0.16%)</title><rect x="90.6696%" y="549" width="0.1581%" height="15" fill="rgb(238,28,14)"/><text x="90.9196%" y="559.50"></text></g><g><title>at::TensorIteratorBase::build_unary_op (843 samples, 0.19%)</title><rect x="90.6608%" y="565" width="0.1949%" height="15" fill="rgb(229,40,46)"/><text x="90.9108%" y="575.50"></text></g><g><title>at::TensorIterator::unary_op (946 samples, 0.22%)</title><rect x="90.6421%" y="581" width="0.2187%" height="15" fill="rgb(244,195,20)"/><text x="90.8921%" y="591.50"></text></g><g><title>_int_malloc (561 samples, 0.13%)</title><rect x="90.9160%" y="533" width="0.1297%" height="15" fill="rgb(253,56,35)"/><text x="91.1660%" y="543.50"></text></g><g><title>operator new (610 samples, 0.14%)</title><rect x="90.9054%" y="565" width="0.1410%" height="15" fill="rgb(210,149,44)"/><text x="91.1554%" y="575.50"></text></g><g><title>__GI___libc_malloc (609 samples, 0.14%)</title><rect x="90.9056%" y="549" width="0.1408%" height="15" fill="rgb(240,135,12)"/><text x="91.1556%" y="559.50"></text></g><g><title>at::native::(anonymous namespace)::clamp_min_scalar_kernel_impl (787 samples, 0.18%)</title><rect x="90.8675%" y="581" width="0.1819%" height="15" fill="rgb(251,24,50)"/><text x="91.1175%" y="591.50"></text></g><g><title>at::native::clamp_min_out (1,935 samples, 0.45%)</title><rect x="90.6130%" y="597" width="0.4474%" height="15" fill="rgb(243,200,47)"/><text x="90.8630%" y="607.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_clamp_min_out_out (2,137 samples, 0.49%)</title><rect x="90.6019%" y="613" width="0.4941%" height="15" fill="rgb(224,166,26)"/><text x="90.8519%" y="623.50"></text></g><g><title>at::clamp_min_outf (2,255 samples, 0.52%)</title><rect x="90.5808%" y="629" width="0.5213%" height="15" fill="rgb(233,0,47)"/><text x="90.8308%" y="639.50"></text></g><g><title>at::empty (544 samples, 0.13%)</title><rect x="91.1061%" y="629" width="0.1258%" height="15" fill="rgb(253,80,5)"/><text x="91.3561%" y="639.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::empty_memory_format&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (447 samples, 0.10%)</title><rect x="91.1285%" y="613" width="0.1033%" height="15" fill="rgb(214,133,25)"/><text x="91.3785%" y="623.50"></text></g><g><title>at::native::clamp_min (2,931 samples, 0.68%)</title><rect x="90.5552%" y="645" width="0.6776%" height="15" fill="rgb(209,27,14)"/><text x="90.8052%" y="655.50"></text></g><g><title>at::clamp_min (3,096 samples, 0.72%)</title><rect x="90.5286%" y="677" width="0.7158%" height="15" fill="rgb(219,102,51)"/><text x="90.7786%" y="687.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, c10::Scalar const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_clamp_min&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::Scalar const&amp;&gt; &gt;, at::Tensor (at::Tensor const&amp;, c10::Scalar const&amp;)&gt;::call (3,005 samples, 0.69%)</title><rect x="90.5496%" y="661" width="0.6947%" height="15" fill="rgb(237,18,16)"/><text x="90.7996%" y="671.50"></text></g><g><title>at::native::relu (3,164 samples, 0.73%)</title><rect x="90.5228%" y="693" width="0.7315%" height="15" fill="rgb(241,85,17)"/><text x="90.7728%" y="703.50"></text></g><g><title>c10::Dispatcher::redispatch&lt;at::Tensor, at::Tensor const&amp;&gt; (3,530 samples, 0.82%)</title><rect x="90.4865%" y="741" width="0.8161%" height="15" fill="rgb(236,90,42)"/><text x="90.7365%" y="751.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_relu&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;&gt; &gt;, at::Tensor (at::Tensor const&amp;)&gt;::call (3,438 samples, 0.79%)</title><rect x="90.5078%" y="725" width="0.7948%" height="15" fill="rgb(249,57,21)"/><text x="90.7578%" y="735.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_relu (3,431 samples, 0.79%)</title><rect x="90.5094%" y="709" width="0.7932%" height="15" fill="rgb(243,12,36)"/><text x="90.7594%" y="719.50"></text></g><g><title>at::redispatch::relu (3,624 samples, 0.84%)</title><rect x="90.4724%" y="757" width="0.8378%" height="15" fill="rgb(253,128,47)"/><text x="90.7224%" y="767.50"></text></g><g><title>torch::autograd::SavedVariable::SavedVariable (437 samples, 0.10%)</title><rect x="91.4163%" y="757" width="0.1010%" height="15" fill="rgb(207,33,20)"/><text x="91.6663%" y="767.50"></text></g><g><title>at::relu (5,736 samples, 1.33%)</title><rect x="90.4118%" y="805" width="1.3261%" height="15" fill="rgb(233,215,35)"/><text x="90.6618%" y="815.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;), &amp;torch::autograd::VariableType::(anonymous namespace)::relu&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;&gt; &gt;, at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;)&gt;::call (5,627 samples, 1.30%)</title><rect x="90.4370%" y="789" width="1.3009%" height="15" fill="rgb(249,188,52)"/><text x="90.6870%" y="799.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::relu (5,615 samples, 1.30%)</title><rect x="90.4398%" y="773" width="1.2981%" height="15" fill="rgb(225,12,32)"/><text x="90.6898%" y="783.50"></text></g><g><title>atg_relu (5,911 samples, 1.37%)</title><rect x="90.3845%" y="821" width="1.3666%" height="15" fill="rgb(247,98,14)"/><text x="90.6345%" y="831.50"></text></g><g><title>tch::wrappers::tensor_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::relu (5,947 samples, 1.37%)</title><rect x="90.3769%" y="853" width="1.3749%" height="15" fill="rgb(247,219,48)"/><text x="90.6269%" y="863.50"></text></g><g><title>tch::wrappers::tensor_fallible_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::f_relu (5,946 samples, 1.37%)</title><rect x="90.3771%" y="837" width="1.3747%" height="15" fill="rgb(253,60,48)"/><text x="90.6271%" y="847.50"></text></g><g><title>&lt;mcts_policy::neural_net::Net as tch::nn::module::ModuleT&gt;::forward_t (14,853 samples, 3.43%)</title><rect x="88.3401%" y="869" width="3.4339%" height="15" fill="rgb(245,15,52)"/><text x="88.5901%" y="879.50">&lt;mc..</text></g><g><title>at::detail::empty_generic (563 samples, 0.13%)</title><rect x="92.4389%" y="293" width="0.1302%" height="15" fill="rgb(220,133,28)"/><text x="92.6889%" y="303.50"></text></g><g><title>at::detail::empty_cpu (673 samples, 0.16%)</title><rect x="92.4308%" y="309" width="0.1556%" height="15" fill="rgb(217,180,4)"/><text x="92.6808%" y="319.50"></text></g><g><title>at::native::empty_cpu (694 samples, 0.16%)</title><rect x="92.4278%" y="325" width="0.1604%" height="15" fill="rgb(251,24,1)"/><text x="92.6778%" y="335.50"></text></g><g><title>at::empty (1,213 samples, 0.28%)</title><rect x="92.3087%" y="373" width="0.2804%" height="15" fill="rgb(212,185,49)"/><text x="92.5587%" y="383.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::empty_memory_format&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (899 samples, 0.21%)</title><rect x="92.3813%" y="357" width="0.2078%" height="15" fill="rgb(215,175,22)"/><text x="92.6313%" y="367.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_empty_memory_format&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (755 samples, 0.17%)</title><rect x="92.4146%" y="341" width="0.1745%" height="15" fill="rgb(250,205,14)"/><text x="92.6646%" y="351.50"></text></g><g><title>at::native::zeros (2,049 samples, 0.47%)</title><rect x="92.1319%" y="389" width="0.4737%" height="15" fill="rgb(225,211,22)"/><text x="92.3819%" y="399.50"></text></g><g><title>c10::Dispatcher::redispatch&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt; &gt; (2,162 samples, 0.50%)</title><rect x="92.1088%" y="421" width="0.4998%" height="15" fill="rgb(251,179,42)"/><text x="92.3588%" y="431.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_zeros&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt; &gt; &gt;, at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;::call (2,118 samples, 0.49%)</title><rect x="92.1189%" y="405" width="0.4897%" height="15" fill="rgb(208,216,51)"/><text x="92.3689%" y="415.50"></text></g><g><title>at::zeros (2,586 samples, 0.60%)</title><rect x="92.0200%" y="453" width="0.5979%" height="15" fill="rgb(235,36,11)"/><text x="92.2700%" y="463.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;), &amp;at::(anonymous namespace)::zeros&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt; &gt; &gt;, at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;::call (2,289 samples, 0.53%)</title><rect x="92.0886%" y="437" width="0.5292%" height="15" fill="rgb(213,189,28)"/><text x="92.3386%" y="447.50"></text></g><g><title>at_tensor_of_data (3,429 samples, 0.79%)</title><rect x="91.8505%" y="485" width="0.7928%" height="15" fill="rgb(227,203,42)"/><text x="92.1005%" y="495.50"></text></g><g><title>torch::zeros (2,810 samples, 0.65%)</title><rect x="91.9936%" y="469" width="0.6496%" height="15" fill="rgb(244,72,36)"/><text x="92.2436%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3,537 samples, 0.82%)</title><rect x="91.8320%" y="613" width="0.8177%" height="15" fill="rgb(213,53,17)"/><text x="92.0820%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3,537 samples, 0.82%)</title><rect x="91.8320%" y="597" width="0.8177%" height="15" fill="rgb(207,167,3)"/><text x="92.0820%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,537 samples, 0.82%)</title><rect x="91.8320%" y="581" width="0.8177%" height="15" fill="rgb(216,98,30)"/><text x="92.0820%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3,537 samples, 0.82%)</title><rect x="91.8320%" y="565" width="0.8177%" height="15" fill="rgb(236,123,15)"/><text x="92.0820%" y="575.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3,481 samples, 0.80%)</title><rect x="91.8450%" y="549" width="0.8048%" height="15" fill="rgb(248,81,50)"/><text x="92.0950%" y="559.50"></text></g><g><title>tch::tensor::&lt;impl tch::wrappers::tensor::Tensor&gt;::of_slice2::{{closure}} (3,466 samples, 0.80%)</title><rect x="91.8484%" y="533" width="0.8013%" height="15" fill="rgb(214,120,4)"/><text x="92.0984%" y="543.50"></text></g><g><title>tch::wrappers::tensor::Tensor::of_slice (3,463 samples, 0.80%)</title><rect x="91.8491%" y="517" width="0.8006%" height="15" fill="rgb(208,179,34)"/><text x="92.0991%" y="527.50"></text></g><g><title>tch::wrappers::tensor::Tensor::f_of_slice (3,459 samples, 0.80%)</title><rect x="91.8501%" y="501" width="0.7997%" height="15" fill="rgb(227,140,7)"/><text x="92.1001%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,544 samples, 0.82%)</title><rect x="91.8320%" y="677" width="0.8193%" height="15" fill="rgb(214,22,6)"/><text x="92.0820%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,544 samples, 0.82%)</title><rect x="91.8320%" y="661" width="0.8193%" height="15" fill="rgb(207,137,27)"/><text x="92.0820%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,544 samples, 0.82%)</title><rect x="91.8320%" y="645" width="0.8193%" height="15" fill="rgb(210,8,46)"/><text x="92.0820%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3,544 samples, 0.82%)</title><rect x="91.8320%" y="629" width="0.8193%" height="15" fill="rgb(240,16,54)"/><text x="92.0820%" y="639.50"></text></g><g><title>at_free (927 samples, 0.21%)</title><rect x="92.6768%" y="597" width="0.2143%" height="15" fill="rgb(211,209,29)"/><text x="92.9268%" y="607.50"></text></g><g><title>at::Tensor::~Tensor (916 samples, 0.21%)</title><rect x="92.6793%" y="581" width="0.2118%" height="15" fill="rgb(226,228,24)"/><text x="92.9293%" y="591.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (916 samples, 0.21%)</title><rect x="92.6793%" y="565" width="0.2118%" height="15" fill="rgb(222,84,9)"/><text x="92.9293%" y="575.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (890 samples, 0.21%)</title><rect x="92.6854%" y="549" width="0.2058%" height="15" fill="rgb(234,203,30)"/><text x="92.9354%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,052 samples, 0.24%)</title><rect x="92.6514%" y="661" width="0.2432%" height="15" fill="rgb(238,109,14)"/><text x="92.9014%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[tch::wrappers::tensor::Tensor]&gt; (1,052 samples, 0.24%)</title><rect x="92.6514%" y="645" width="0.2432%" height="15" fill="rgb(233,206,34)"/><text x="92.9014%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;tch::wrappers::tensor::Tensor&gt; (1,049 samples, 0.24%)</title><rect x="92.6521%" y="629" width="0.2425%" height="15" fill="rgb(220,167,47)"/><text x="92.9021%" y="639.50"></text></g><g><title>&lt;tch::wrappers::tensor::Tensor as core::ops::drop::Drop&gt;::drop (1,049 samples, 0.24%)</title><rect x="92.6521%" y="613" width="0.2425%" height="15" fill="rgb(238,105,10)"/><text x="92.9021%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;tch::wrappers::tensor::Tensor&gt;&gt; (1,058 samples, 0.24%)</title><rect x="92.6514%" y="677" width="0.2446%" height="15" fill="rgb(213,227,17)"/><text x="92.9014%" y="687.50"></text></g><g><title>at::native::_cat_cpu (568 samples, 0.13%)</title><rect x="92.9554%" y="453" width="0.1313%" height="15" fill="rgb(217,132,38)"/><text x="93.2054%" y="463.50"></text></g><g><title>at::_cat (594 samples, 0.14%)</title><rect x="92.9505%" y="485" width="0.1373%" height="15" fill="rgb(242,146,4)"/><text x="93.2005%" y="495.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;at::Tensor&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper__cat&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;at::Tensor&gt;, long&gt; &gt;, at::Tensor (c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;::call (575 samples, 0.13%)</title><rect x="92.9549%" y="469" width="0.1329%" height="15" fill="rgb(212,61,9)"/><text x="93.2049%" y="479.50"></text></g><g><title>at::native::cat (702 samples, 0.16%)</title><rect x="92.9408%" y="501" width="0.1623%" height="15" fill="rgb(247,126,22)"/><text x="93.1908%" y="511.50"></text></g><g><title>at::cat (725 samples, 0.17%)</title><rect x="92.9357%" y="533" width="0.1676%" height="15" fill="rgb(220,196,2)"/><text x="93.1857%" y="543.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;at::Tensor&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_cat&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;at::Tensor&gt;, long&gt; &gt;, at::Tensor (c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;::call (708 samples, 0.16%)</title><rect x="92.9397%" y="517" width="0.1637%" height="15" fill="rgb(208,46,4)"/><text x="93.1897%" y="527.50"></text></g><g><title>at::Tensor::as_strided (588 samples, 0.14%)</title><rect x="93.1831%" y="469" width="0.1359%" height="15" fill="rgb(252,104,46)"/><text x="93.4331%" y="479.50"></text></g><g><title>at::native::unsqueeze (787 samples, 0.18%)</title><rect x="93.1706%" y="485" width="0.1819%" height="15" fill="rgb(237,152,48)"/><text x="93.4206%" y="495.50"></text></g><g><title>at::Tensor::unsqueeze (977 samples, 0.23%)</title><rect x="93.1281%" y="517" width="0.2259%" height="15" fill="rgb(221,59,37)"/><text x="93.3781%" y="527.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_unsqueeze&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, long&gt; &gt;, at::Tensor (at::Tensor const&amp;, long)&gt;::call (801 samples, 0.19%)</title><rect x="93.1688%" y="501" width="0.1852%" height="15" fill="rgb(209,202,51)"/><text x="93.4188%" y="511.50"></text></g><g><title>at::native::get_stack_inputs (1,113 samples, 0.26%)</title><rect x="93.1054%" y="533" width="0.2573%" height="15" fill="rgb(228,81,30)"/><text x="93.3554%" y="543.50"></text></g><g><title>std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;::~vector (571 samples, 0.13%)</title><rect x="93.3641%" y="533" width="0.1320%" height="15" fill="rgb(227,42,39)"/><text x="93.6141%" y="543.50"></text></g><g><title>std::_Destroy&lt;at::Tensor*, at::Tensor&gt; (567 samples, 0.13%)</title><rect x="93.3651%" y="517" width="0.1311%" height="15" fill="rgb(221,26,2)"/><text x="93.6151%" y="527.50"></text></g><g><title>std::_Destroy&lt;at::Tensor*&gt; (567 samples, 0.13%)</title><rect x="93.3651%" y="501" width="0.1311%" height="15" fill="rgb(254,61,31)"/><text x="93.6151%" y="511.50"></text></g><g><title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;at::Tensor*&gt; (567 samples, 0.13%)</title><rect x="93.3651%" y="485" width="0.1311%" height="15" fill="rgb(222,173,38)"/><text x="93.6151%" y="495.50"></text></g><g><title>std::_Destroy&lt;at::Tensor&gt; (562 samples, 0.13%)</title><rect x="93.3662%" y="469" width="0.1299%" height="15" fill="rgb(218,50,12)"/><text x="93.6162%" y="479.50"></text></g><g><title>at::Tensor::~Tensor (562 samples, 0.13%)</title><rect x="93.3662%" y="453" width="0.1299%" height="15" fill="rgb(223,88,40)"/><text x="93.6162%" y="463.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (562 samples, 0.13%)</title><rect x="93.3662%" y="437" width="0.1299%" height="15" fill="rgb(237,54,19)"/><text x="93.6162%" y="447.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (562 samples, 0.13%)</title><rect x="93.3662%" y="421" width="0.1299%" height="15" fill="rgb(251,129,25)"/><text x="93.6162%" y="431.50"></text></g><g><title>at::native::stack (2,436 samples, 0.56%)</title><rect x="92.9343%" y="549" width="0.5632%" height="15" fill="rgb(238,97,19)"/><text x="93.1843%" y="559.50"></text></g><g><title>at::redispatch::stack (2,458 samples, 0.57%)</title><rect x="92.9300%" y="581" width="0.5683%" height="15" fill="rgb(240,169,18)"/><text x="93.1800%" y="591.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;at::Tensor&gt;, long), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_stack&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;at::Tensor&gt;, long&gt; &gt;, at::Tensor (c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;::call (2,441 samples, 0.56%)</title><rect x="92.9339%" y="565" width="0.5643%" height="15" fill="rgb(230,187,49)"/><text x="93.1839%" y="575.50"></text></g><g><title>at::stack (2,901 samples, 0.67%)</title><rect x="92.8985%" y="629" width="0.6707%" height="15" fill="rgb(209,44,26)"/><text x="93.1485%" y="639.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::DispatchKeySet, c10::ArrayRef&lt;at::Tensor&gt;, long), &amp;torch::autograd::VariableType::(anonymous namespace)::stack&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, c10::ArrayRef&lt;at::Tensor&gt;, long&gt; &gt;, at::Tensor (c10::DispatchKeySet, c10::ArrayRef&lt;at::Tensor&gt;, long)&gt;::call (2,866 samples, 0.66%)</title><rect x="92.9066%" y="613" width="0.6626%" height="15" fill="rgb(244,0,6)"/><text x="93.1566%" y="623.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::stack (2,865 samples, 0.66%)</title><rect x="92.9068%" y="597" width="0.6624%" height="15" fill="rgb(248,18,21)"/><text x="93.1568%" y="607.50"></text></g><g><title>atg_stack (3,164 samples, 0.73%)</title><rect x="92.8960%" y="645" width="0.7315%" height="15" fill="rgb(245,180,19)"/><text x="93.1460%" y="655.50"></text></g><g><title>tch::tensor::&lt;impl tch::wrappers::tensor::Tensor&gt;::of_slice2 (7,793 samples, 1.80%)</title><rect x="91.8316%" y="693" width="1.8017%" height="15" fill="rgb(252,118,36)"/><text x="92.0816%" y="703.50">t..</text></g><g><title>tch::wrappers::tensor_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::stack (3,189 samples, 0.74%)</title><rect x="92.8960%" y="677" width="0.7373%" height="15" fill="rgb(210,224,19)"/><text x="93.1460%" y="687.50"></text></g><g><title>tch::wrappers::tensor_fallible_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::f_stack (3,189 samples, 0.74%)</title><rect x="92.8960%" y="661" width="0.7373%" height="15" fill="rgb(218,30,24)"/><text x="93.1460%" y="671.50"></text></g><g><title>at::native::to (653 samples, 0.15%)</title><rect x="93.6473%" y="597" width="0.1510%" height="15" fill="rgb(219,75,50)"/><text x="93.8973%" y="607.50"></text></g><g><title>at::Tensor::to (709 samples, 0.16%)</title><rect x="93.6367%" y="629" width="0.1639%" height="15" fill="rgb(234,72,50)"/><text x="93.8867%" y="639.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_to_dtype_layout&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor (at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (665 samples, 0.15%)</title><rect x="93.6469%" y="613" width="0.1537%" height="15" fill="rgb(219,100,48)"/><text x="93.8969%" y="623.50"></text></g><g><title>atg_to (764 samples, 0.18%)</title><rect x="93.6337%" y="645" width="0.1766%" height="15" fill="rgb(253,5,41)"/><text x="93.8837%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8,760 samples, 2.03%)</title><rect x="91.7856%" y="789" width="2.0252%" height="15" fill="rgb(247,181,11)"/><text x="92.0356%" y="799.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8,760 samples, 2.03%)</title><rect x="91.7856%" y="773" width="2.0252%" height="15" fill="rgb(222,223,25)"/><text x="92.0356%" y="783.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,760 samples, 2.03%)</title><rect x="91.7856%" y="757" width="2.0252%" height="15" fill="rgb(214,198,28)"/><text x="92.0356%" y="767.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (8,759 samples, 2.03%)</title><rect x="91.7858%" y="741" width="2.0250%" height="15" fill="rgb(230,46,43)"/><text x="92.0358%" y="751.50">c..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (8,734 samples, 2.02%)</title><rect x="91.7916%" y="725" width="2.0192%" height="15" fill="rgb(233,65,53)"/><text x="92.0416%" y="735.50">c..</text></g><g><title>mcts_policy::training::generate_t_wells::{{closure}} (8,734 samples, 2.02%)</title><rect x="91.7916%" y="709" width="2.0192%" height="15" fill="rgb(221,121,27)"/><text x="92.0416%" y="719.50">m..</text></g><g><title>tch::tensor::&lt;impl tch::wrappers::tensor::Tensor&gt;::to_device (768 samples, 0.18%)</title><rect x="93.6332%" y="693" width="0.1776%" height="15" fill="rgb(247,70,47)"/><text x="93.8832%" y="703.50"></text></g><g><title>tch::wrappers::tensor_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::to (768 samples, 0.18%)</title><rect x="93.6332%" y="677" width="0.1776%" height="15" fill="rgb(228,85,35)"/><text x="93.8832%" y="687.50"></text></g><g><title>tch::wrappers::tensor_fallible_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::f_to (768 samples, 0.18%)</title><rect x="93.6332%" y="661" width="0.1776%" height="15" fill="rgb(209,50,18)"/><text x="93.8832%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8,761 samples, 2.03%)</title><rect x="91.7856%" y="853" width="2.0255%" height="15" fill="rgb(250,19,35)"/><text x="92.0356%" y="863.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8,761 samples, 2.03%)</title><rect x="91.7856%" y="837" width="2.0255%" height="15" fill="rgb(253,107,29)"/><text x="92.0356%" y="847.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8,761 samples, 2.03%)</title><rect x="91.7856%" y="821" width="2.0255%" height="15" fill="rgb(252,179,29)"/><text x="92.0356%" y="831.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8,761 samples, 2.03%)</title><rect x="91.7856%" y="805" width="2.0255%" height="15" fill="rgb(238,194,6)"/><text x="92.0356%" y="815.50">&lt;..</text></g><g><title>atg_stack (448 samples, 0.10%)</title><rect x="93.8610%" y="821" width="0.1036%" height="15" fill="rgb(238,164,29)"/><text x="94.1110%" y="831.50"></text></g><g><title>tch::wrappers::tensor_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::stack (453 samples, 0.10%)</title><rect x="93.8610%" y="853" width="0.1047%" height="15" fill="rgb(224,25,9)"/><text x="94.1110%" y="863.50"></text></g><g><title>tch::wrappers::tensor_fallible_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::f_stack (453 samples, 0.10%)</title><rect x="93.8610%" y="837" width="0.1047%" height="15" fill="rgb(244,153,23)"/><text x="94.1110%" y="847.50"></text></g><g><title>mcts_policy::game_rules::generate_t_wells (9,522 samples, 2.20%)</title><rect x="91.7844%" y="869" width="2.2014%" height="15" fill="rgb(212,203,14)"/><text x="92.0344%" y="879.50">m..</text></g><g><title>torch::autograd::deleteNode (984 samples, 0.23%)</title><rect x="94.1157%" y="693" width="0.2275%" height="15" fill="rgb(220,164,20)"/><text x="94.3657%" y="703.50"></text></g><g><title>c10::TensorImpl::release_resources (599 samples, 0.14%)</title><rect x="94.5444%" y="645" width="0.1385%" height="15" fill="rgb(222,203,48)"/><text x="94.7944%" y="655.50"></text></g><g><title>c10::cuda::CUDACachingAllocator::raw_delete (442 samples, 0.10%)</title><rect x="94.5807%" y="629" width="0.1022%" height="15" fill="rgb(215,159,22)"/><text x="94.8307%" y="639.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (1,113 samples, 0.26%)</title><rect x="94.4595%" y="661" width="0.2573%" height="15" fill="rgb(216,183,47)"/><text x="94.7095%" y="671.50"></text></g><g><title>torch::autograd::generated::CudnnBatchNormBackward::release_variables (1,162 samples, 0.27%)</title><rect x="94.4535%" y="677" width="0.2686%" height="15" fill="rgb(229,195,25)"/><text x="94.7035%" y="687.50"></text></g><g><title>c10::TensorImpl::release_resources (460 samples, 0.11%)</title><rect x="94.7598%" y="645" width="0.1063%" height="15" fill="rgb(224,132,51)"/><text x="95.0098%" y="655.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (653 samples, 0.15%)</title><rect x="94.7251%" y="661" width="0.1510%" height="15" fill="rgb(240,63,7)"/><text x="94.9751%" y="671.50"></text></g><g><title>torch::autograd::generated::CudnnConvolutionBackward::release_variables (681 samples, 0.16%)</title><rect x="94.7221%" y="677" width="0.1574%" height="15" fill="rgb(249,182,41)"/><text x="94.9721%" y="687.50"></text></g><g><title>c10::TensorImpl::release_resources (600 samples, 0.14%)</title><rect x="94.9230%" y="645" width="0.1387%" height="15" fill="rgb(243,47,26)"/><text x="95.1730%" y="655.50"></text></g><g><title>c10::cuda::CUDACachingAllocator::raw_delete (563 samples, 0.13%)</title><rect x="94.9316%" y="629" width="0.1302%" height="15" fill="rgb(233,48,2)"/><text x="95.1816%" y="639.50"></text></g><g><title>torch::autograd::gatherFunctions (3,153 samples, 0.73%)</title><rect x="94.3432%" y="693" width="0.7289%" height="15" fill="rgb(244,165,34)"/><text x="94.5932%" y="703.50"></text></g><g><title>torch::autograd::generated::ReluBackward0::release_variables (765 samples, 0.18%)</title><rect x="94.8953%" y="677" width="0.1769%" height="15" fill="rgb(207,89,7)"/><text x="95.1453%" y="687.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (738 samples, 0.17%)</title><rect x="94.9015%" y="661" width="0.1706%" height="15" fill="rgb(244,117,36)"/><text x="95.1515%" y="671.50"></text></g><g><title>c10::TensorImpl::release_resources (4,703 samples, 1.09%)</title><rect x="93.9863%" y="757" width="1.0873%" height="15" fill="rgb(226,144,34)"/><text x="94.2363%" y="767.50"></text></g><g><title>torch::autograd::DifferentiableViewMeta::~DifferentiableViewMeta (4,683 samples, 1.08%)</title><rect x="93.9909%" y="741" width="1.0827%" height="15" fill="rgb(213,23,19)"/><text x="94.2409%" y="751.50"></text></g><g><title>torch::autograd::AutogradMeta::~AutogradMeta (4,677 samples, 1.08%)</title><rect x="93.9923%" y="725" width="1.0813%" height="15" fill="rgb(217,75,12)"/><text x="94.2423%" y="735.50"></text></g><g><title>torch::autograd::deleteNode (4,672 samples, 1.08%)</title><rect x="93.9934%" y="709" width="1.0801%" height="15" fill="rgb(224,159,17)"/><text x="94.2434%" y="719.50"></text></g><g><title>at_free (4,707 samples, 1.09%)</title><rect x="93.9860%" y="821" width="1.0882%" height="15" fill="rgb(217,118,1)"/><text x="94.2360%" y="831.50"></text></g><g><title>at::Tensor::~Tensor (4,707 samples, 1.09%)</title><rect x="93.9860%" y="805" width="1.0882%" height="15" fill="rgb(232,180,48)"/><text x="94.2360%" y="815.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (4,707 samples, 1.09%)</title><rect x="93.9860%" y="789" width="1.0882%" height="15" fill="rgb(230,27,33)"/><text x="94.2360%" y="799.50"></text></g><g><title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (4,707 samples, 1.09%)</title><rect x="93.9860%" y="773" width="1.0882%" height="15" fill="rgb(205,31,21)"/><text x="94.2360%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tch::wrappers::tensor::Tensor&gt; (4,708 samples, 1.09%)</title><rect x="93.9860%" y="853" width="1.0884%" height="15" fill="rgb(253,59,4)"/><text x="94.2360%" y="863.50"></text></g><g><title>&lt;tch::wrappers::tensor::Tensor as core::ops::drop::Drop&gt;::drop (4,708 samples, 1.09%)</title><rect x="93.9860%" y="837" width="1.0884%" height="15" fill="rgb(224,201,9)"/><text x="94.2360%" y="847.50"></text></g><g><title>alloc::vec::from_elem (544 samples, 0.13%)</title><rect x="95.1133%" y="645" width="0.1258%" height="15" fill="rgb(229,206,30)"/><text x="95.3633%" y="655.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (544 samples, 0.13%)</title><rect x="95.1133%" y="629" width="0.1258%" height="15" fill="rgb(212,67,47)"/><text x="95.3633%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (544 samples, 0.13%)</title><rect x="95.1133%" y="613" width="0.1258%" height="15" fill="rgb(211,96,50)"/><text x="95.3633%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (544 samples, 0.13%)</title><rect x="95.1133%" y="597" width="0.1258%" height="15" fill="rgb(252,114,18)"/><text x="95.3633%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (544 samples, 0.13%)</title><rect x="95.1133%" y="581" width="0.1258%" height="15" fill="rgb(223,58,37)"/><text x="95.3633%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (544 samples, 0.13%)</title><rect x="95.1133%" y="565" width="0.1258%" height="15" fill="rgb(237,70,4)"/><text x="95.3633%" y="575.50"></text></g><g><title>alloc::alloc::alloc_zeroed (544 samples, 0.13%)</title><rect x="95.1133%" y="549" width="0.1258%" height="15" fill="rgb(244,85,46)"/><text x="95.3633%" y="559.50"></text></g><g><title>__libc_calloc (544 samples, 0.13%)</title><rect x="95.1133%" y="533" width="0.1258%" height="15" fill="rgb(223,39,52)"/><text x="95.3633%" y="543.50"></text></g><g><title>at::Tensor::copy_ (493 samples, 0.11%)</title><rect x="95.3646%" y="549" width="0.1140%" height="15" fill="rgb(218,200,14)"/><text x="95.6146%" y="559.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool), &amp;torch::autograd::VariableType::(anonymous namespace)::copy_&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool)&gt;::call (482 samples, 0.11%)</title><rect x="95.3672%" y="533" width="0.1114%" height="15" fill="rgb(208,171,16)"/><text x="95.6172%" y="543.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::copy_ (481 samples, 0.11%)</title><rect x="95.3674%" y="517" width="0.1112%" height="15" fill="rgb(234,200,18)"/><text x="95.6174%" y="527.50"></text></g><g><title>at::native::to (970 samples, 0.22%)</title><rect x="95.3403%" y="565" width="0.2243%" height="15" fill="rgb(228,45,11)"/><text x="95.5903%" y="575.50"></text></g><g><title>at::Tensor::to (1,012 samples, 0.23%)</title><rect x="95.3323%" y="597" width="0.2340%" height="15" fill="rgb(237,182,11)"/><text x="95.5823%" y="607.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_to_dtype_layout&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor (at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (985 samples, 0.23%)</title><rect x="95.3385%" y="581" width="0.2277%" height="15" fill="rgb(241,175,49)"/><text x="95.5885%" y="591.50"></text></g><g><title>at_copy_data (533 samples, 0.12%)</title><rect x="95.6279%" y="597" width="0.1232%" height="15" fill="rgb(247,38,35)"/><text x="95.8779%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (519 samples, 0.12%)</title><rect x="95.6312%" y="581" width="0.1200%" height="15" fill="rgb(228,39,49)"/><text x="95.8812%" y="591.50"></text></g><g><title>at_copy_data (1,888 samples, 0.44%)</title><rect x="95.3191%" y="613" width="0.4365%" height="15" fill="rgb(226,101,26)"/><text x="95.5691%" y="623.50"></text></g><g><title>tch::wrappers::tensor::Tensor::copy_data (1,919 samples, 0.44%)</title><rect x="95.3175%" y="645" width="0.4437%" height="15" fill="rgb(206,141,19)"/><text x="95.5675%" y="655.50"></text></g><g><title>tch::wrappers::tensor::Tensor::f_copy_data (1,918 samples, 0.44%)</title><rect x="95.3177%" y="629" width="0.4434%" height="15" fill="rgb(211,200,13)"/><text x="95.5677%" y="639.50"></text></g><g><title>at::Tensor::copy_ (614 samples, 0.14%)</title><rect x="95.8307%" y="533" width="0.1420%" height="15" fill="rgb(241,121,6)"/><text x="96.0807%" y="543.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool), &amp;torch::autograd::VariableType::(anonymous namespace)::copy_&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool)&gt;::call (592 samples, 0.14%)</title><rect x="95.8358%" y="517" width="0.1369%" height="15" fill="rgb(234,221,29)"/><text x="96.0858%" y="527.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::copy_ (592 samples, 0.14%)</title><rect x="95.8358%" y="501" width="0.1369%" height="15" fill="rgb(229,136,5)"/><text x="96.0858%" y="511.50"></text></g><g><title>at::empty_strided (530 samples, 0.12%)</title><rect x="95.9773%" y="533" width="0.1225%" height="15" fill="rgb(238,36,11)"/><text x="96.2273%" y="543.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;), &amp;at::(anonymous namespace)::empty_strided&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt; &gt; &gt;, at::Tensor (c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;::call (486 samples, 0.11%)</title><rect x="95.9875%" y="517" width="0.1124%" height="15" fill="rgb(251,55,41)"/><text x="96.2375%" y="527.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_empty_strided&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt; &gt; &gt;, at::Tensor (c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;::call (446 samples, 0.10%)</title><rect x="95.9967%" y="501" width="0.1031%" height="15" fill="rgb(242,34,40)"/><text x="96.2467%" y="511.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_empty_strided (445 samples, 0.10%)</title><rect x="95.9969%" y="485" width="0.1029%" height="15" fill="rgb(215,42,17)"/><text x="96.2469%" y="495.50"></text></g><g><title>at::native::to (1,290 samples, 0.30%)</title><rect x="95.8039%" y="549" width="0.2982%" height="15" fill="rgb(207,44,46)"/><text x="96.0539%" y="559.50"></text></g><g><title>at::Tensor::to (1,338 samples, 0.31%)</title><rect x="95.7935%" y="581" width="0.3093%" height="15" fill="rgb(211,206,28)"/><text x="96.0435%" y="591.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_to_dtype_layout&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor (at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, bool, bool, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (1,298 samples, 0.30%)</title><rect x="95.8027%" y="565" width="0.3001%" height="15" fill="rgb(237,167,16)"/><text x="96.0527%" y="575.50"></text></g><g><title>at::Tensor::toType (1,367 samples, 0.32%)</title><rect x="95.7870%" y="597" width="0.3160%" height="15" fill="rgb(233,66,6)"/><text x="96.0370%" y="607.50"></text></g><g><title>atg_totype (1,397 samples, 0.32%)</title><rect x="95.7838%" y="613" width="0.3230%" height="15" fill="rgb(246,123,29)"/><text x="96.0338%" y="623.50"></text></g><g><title>tch::tensor::convert::&lt;impl core::convert::From&lt;tch::wrappers::tensor::Tensor&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from (4,461 samples, 1.03%)</title><rect x="95.0759%" y="677" width="1.0313%" height="15" fill="rgb(209,62,40)"/><text x="95.3259%" y="687.50"></text></g><g><title>tch::tensor::convert::&lt;impl core::convert::From&lt;&amp;tch::wrappers::tensor::Tensor&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from (4,302 samples, 0.99%)</title><rect x="95.1126%" y="661" width="0.9946%" height="15" fill="rgb(218,4,25)"/><text x="95.3626%" y="671.50"></text></g><g><title>tch::wrappers::tensor_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::totype (1,406 samples, 0.33%)</title><rect x="95.7822%" y="645" width="0.3251%" height="15" fill="rgb(253,91,49)"/><text x="96.0322%" y="655.50"></text></g><g><title>tch::wrappers::tensor_fallible_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::f_totype (1,405 samples, 0.32%)</title><rect x="95.7824%" y="629" width="0.3248%" height="15" fill="rgb(228,155,29)"/><text x="96.0324%" y="639.50"></text></g><g><title>at::Tensor::select (877 samples, 0.20%)</title><rect x="96.1107%" y="613" width="0.2028%" height="15" fill="rgb(243,57,37)"/><text x="96.3607%" y="623.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;, long, long), &amp;torch::autograd::VariableType::(anonymous namespace)::select_int&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor const&amp;, long, long&gt; &gt;, at::Tensor (c10::DispatchKeySet, at::Tensor const&amp;, long, long)&gt;::call (854 samples, 0.20%)</title><rect x="96.1160%" y="597" width="0.1974%" height="15" fill="rgb(244,167,17)"/><text x="96.3660%" y="607.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::select_int (854 samples, 0.20%)</title><rect x="96.1160%" y="581" width="0.1974%" height="15" fill="rgb(207,181,38)"/><text x="96.3660%" y="591.50"></text></g><g><title>at::Tensor::operator[] (882 samples, 0.20%)</title><rect x="96.1107%" y="629" width="0.2039%" height="15" fill="rgb(211,8,23)"/><text x="96.3607%" y="639.50"></text></g><g><title>at_get (896 samples, 0.21%)</title><rect x="96.1086%" y="645" width="0.2071%" height="15" fill="rgb(235,11,44)"/><text x="96.3586%" y="655.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5,369 samples, 1.24%)</title><rect x="95.0747%" y="709" width="1.2413%" height="15" fill="rgb(248,18,52)"/><text x="95.3247%" y="719.50"></text></g><g><title>tch::tensor::convert::&lt;impl core::convert::From&lt;&amp;tch::wrappers::tensor::Tensor&gt; for alloc::vec::Vec&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from::{{closure}} (5,368 samples, 1.24%)</title><rect x="95.0749%" y="693" width="1.2410%" height="15" fill="rgb(208,4,7)"/><text x="95.3249%" y="703.50"></text></g><g><title>tch::wrappers::tensor::Tensor::get (903 samples, 0.21%)</title><rect x="96.1072%" y="677" width="0.2088%" height="15" fill="rgb(240,17,39)"/><text x="96.3572%" y="687.50"></text></g><g><title>tch::wrappers::tensor::Tensor::f_get (903 samples, 0.21%)</title><rect x="96.1072%" y="661" width="0.2088%" height="15" fill="rgb(207,170,3)"/><text x="96.3572%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5,371 samples, 1.24%)</title><rect x="95.0747%" y="773" width="1.2417%" height="15" fill="rgb(236,100,52)"/><text x="95.3247%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5,371 samples, 1.24%)</title><rect x="95.0747%" y="757" width="1.2417%" height="15" fill="rgb(246,78,51)"/><text x="95.3247%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5,371 samples, 1.24%)</title><rect x="95.0747%" y="741" width="1.2417%" height="15" fill="rgb(211,17,15)"/><text x="95.3247%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5,371 samples, 1.24%)</title><rect x="95.0747%" y="725" width="1.2417%" height="15" fill="rgb(209,59,46)"/><text x="95.3247%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5,372 samples, 1.24%)</title><rect x="95.0747%" y="837" width="1.2420%" height="15" fill="rgb(210,92,25)"/><text x="95.3247%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5,372 samples, 1.24%)</title><rect x="95.0747%" y="821" width="1.2420%" height="15" fill="rgb(238,174,52)"/><text x="95.3247%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5,372 samples, 1.24%)</title><rect x="95.0747%" y="805" width="1.2420%" height="15" fill="rgb(230,73,7)"/><text x="95.3247%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5,372 samples, 1.24%)</title><rect x="95.0747%" y="789" width="1.2420%" height="15" fill="rgb(243,124,40)"/><text x="95.3247%" y="799.50"></text></g><g><title>mcts_policy::game_rules::possible_moves (180,826 samples, 41.81%)</title><rect x="54.5127%" y="901" width="41.8053%" height="15" fill="rgb(244,170,11)"/><text x="54.7627%" y="911.50">mcts_policy::game_rules::possible_moves</text></g><g><title>mcts_policy::game_rules::net_pass (34,509 samples, 7.98%)</title><rect x="88.3399%" y="885" width="7.9782%" height="15" fill="rgb(207,114,54)"/><text x="88.5899%" y="895.50">mcts_policy..</text></g><g><title>tch::tensor::convert::&lt;impl core::convert::From&lt;tch::wrappers::tensor::Tensor&gt; for alloc::vec::Vec&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (10,088 samples, 2.33%)</title><rect x="93.9858%" y="869" width="2.3323%" height="15" fill="rgb(205,42,20)"/><text x="94.2358%" y="879.50">t..</text></g><g><title>tch::tensor::convert::&lt;impl core::convert::From&lt;&amp;tch::wrappers::tensor::Tensor&gt; for alloc::vec::Vec&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (5,379 samples, 1.24%)</title><rect x="95.0745%" y="853" width="1.2436%" height="15" fill="rgb(230,30,28)"/><text x="95.3245%" y="863.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (621 samples, 0.14%)</title><rect x="96.3183%" y="901" width="0.1436%" height="15" fill="rgb(205,73,54)"/><text x="96.5683%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (621 samples, 0.14%)</title><rect x="96.3183%" y="885" width="0.1436%" height="15" fill="rgb(254,227,23)"/><text x="96.5683%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (621 samples, 0.14%)</title><rect x="96.3183%" y="869" width="0.1436%" height="15" fill="rgb(228,202,34)"/><text x="96.5683%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (514 samples, 0.12%)</title><rect x="96.3430%" y="853" width="0.1188%" height="15" fill="rgb(222,225,37)"/><text x="96.5930%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (514 samples, 0.12%)</title><rect x="96.3430%" y="837" width="0.1188%" height="15" fill="rgb(221,14,54)"/><text x="96.5930%" y="847.50"></text></g><g><title>mcts_policy::game_graph::find_best_child (260,049 samples, 60.12%)</title><rect x="36.3411%" y="917" width="60.1210%" height="15" fill="rgb(254,102,2)"/><text x="36.5911%" y="927.50">mcts_policy::game_graph::find_best_child</text></g><g><title>mcts_policy::game_graph::explore_move (261,568 samples, 60.47%)</title><rect x="35.9906%" y="933" width="60.4721%" height="15" fill="rgb(232,104,17)"/><text x="36.2406%" y="943.50">mcts_policy::game_graph::explore_move</text></g><g><title>mcts_policy::game_graph::play_move (261,587 samples, 60.48%)</title><rect x="35.9906%" y="949" width="60.4765%" height="15" fill="rgb(250,220,14)"/><text x="36.2406%" y="959.50">mcts_policy::game_graph::play_move</text></g><g><title>mcts_policy::game_graph::play_n_games (261,824 samples, 60.53%)</title><rect x="35.9361%" y="981" width="60.5313%" height="15" fill="rgb(241,158,9)"/><text x="36.1861%" y="991.50">mcts_policy::game_graph::play_n_games</text></g><g><title>mcts_policy::game_graph::play_single_game (261,824 samples, 60.53%)</title><rect x="35.9361%" y="965" width="60.5313%" height="15" fill="rgb(246,9,43)"/><text x="36.1861%" y="975.50">mcts_policy::game_graph::play_single_game</text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T: 20]&gt; as serde::de::Visitor&gt;::visit_seq (570 samples, 0.13%)</title><rect x="96.6158%" y="693" width="0.1318%" height="15" fill="rgb(206,73,33)"/><text x="96.8658%" y="703.50"></text></g><g><title>serde::de::SeqAccess::next_element (531 samples, 0.12%)</title><rect x="96.6248%" y="677" width="0.1228%" height="15" fill="rgb(222,79,8)"/><text x="96.8748%" y="687.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (531 samples, 0.12%)</title><rect x="96.6248%" y="661" width="0.1228%" height="15" fill="rgb(234,8,54)"/><text x="96.8748%" y="671.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T: 20]&gt;::deserialize (626 samples, 0.14%)</title><rect x="96.6038%" y="741" width="0.1447%" height="15" fill="rgb(209,134,38)"/><text x="96.8538%" y="751.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_tuple (626 samples, 0.14%)</title><rect x="96.6038%" y="725" width="0.1447%" height="15" fill="rgb(230,127,29)"/><text x="96.8538%" y="735.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (625 samples, 0.14%)</title><rect x="96.6040%" y="709" width="0.1445%" height="15" fill="rgb(242,44,41)"/><text x="96.8540%" y="719.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (631 samples, 0.15%)</title><rect x="96.6038%" y="757" width="0.1459%" height="15" fill="rgb(222,56,43)"/><text x="96.8538%" y="767.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for (T0,T1)&gt;::deserialize::TupleVisitor&lt;T0,T1&gt; as serde::de::Visitor&gt;::visit_seq (663 samples, 0.15%)</title><rect x="96.5980%" y="805" width="0.1533%" height="15" fill="rgb(238,39,47)"/><text x="96.8480%" y="815.50"></text></g><g><title>serde::de::SeqAccess::next_element (651 samples, 0.15%)</title><rect x="96.6008%" y="789" width="0.1505%" height="15" fill="rgb(226,79,43)"/><text x="96.8508%" y="799.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (651 samples, 0.15%)</title><rect x="96.6008%" y="773" width="0.1505%" height="15" fill="rgb(242,105,53)"/><text x="96.8508%" y="783.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for (T0,T1)&gt;::deserialize (672 samples, 0.16%)</title><rect x="96.5969%" y="853" width="0.1554%" height="15" fill="rgb(251,132,46)"/><text x="96.8469%" y="863.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_tuple (672 samples, 0.16%)</title><rect x="96.5969%" y="837" width="0.1554%" height="15" fill="rgb(231,77,14)"/><text x="96.8469%" y="847.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (672 samples, 0.16%)</title><rect x="96.5969%" y="821" width="0.1554%" height="15" fill="rgb(240,135,9)"/><text x="96.8469%" y="831.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (706 samples, 0.16%)</title><rect x="96.5969%" y="869" width="0.1632%" height="15" fill="rgb(248,109,14)"/><text x="96.8469%" y="879.50"></text></g><g><title>serde_json::de::from_str (764 samples, 0.18%)</title><rect x="96.5848%" y="981" width="0.1766%" height="15" fill="rgb(227,146,52)"/><text x="96.8348%" y="991.50"></text></g><g><title>serde_json::de::from_trait (764 samples, 0.18%)</title><rect x="96.5848%" y="965" width="0.1766%" height="15" fill="rgb(232,54,3)"/><text x="96.8348%" y="975.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (764 samples, 0.18%)</title><rect x="96.5848%" y="949" width="0.1766%" height="15" fill="rgb(229,201,43)"/><text x="96.8348%" y="959.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (764 samples, 0.18%)</title><rect x="96.5848%" y="933" width="0.1766%" height="15" fill="rgb(252,161,33)"/><text x="96.8348%" y="943.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (764 samples, 0.18%)</title><rect x="96.5848%" y="917" width="0.1766%" height="15" fill="rgb(226,146,40)"/><text x="96.8348%" y="927.50"></text></g><g><title>serde::de::SeqAccess::next_element (715 samples, 0.17%)</title><rect x="96.5962%" y="901" width="0.1653%" height="15" fill="rgb(219,47,25)"/><text x="96.8462%" y="911.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (714 samples, 0.17%)</title><rect x="96.5964%" y="885" width="0.1651%" height="15" fill="rgb(250,135,13)"/><text x="96.8464%" y="895.50"></text></g><g><title>mcts_policy::main (263,198 samples, 60.85%)</title><rect x="35.9319%" y="997" width="60.8490%" height="15" fill="rgb(219,229,18)"/><text x="36.1819%" y="1007.50">mcts_policy::main</text></g><g><title>[libcuda.so.460.91.03] (473 samples, 0.11%)</title><rect x="96.8403%" y="405" width="0.1094%" height="15" fill="rgb(217,152,27)"/><text x="97.0903%" y="415.50"></text></g><g><title>[libcuda.so.460.91.03] (759 samples, 0.18%)</title><rect x="96.7996%" y="421" width="0.1755%" height="15" fill="rgb(225,71,47)"/><text x="97.0496%" y="431.50"></text></g><g><title>[libcuda.so.460.91.03] (992 samples, 0.23%)</title><rect x="96.7892%" y="437" width="0.2293%" height="15" fill="rgb(220,139,14)"/><text x="97.0392%" y="447.50"></text></g><g><title>[libcuda.so.460.91.03] (1,219 samples, 0.28%)</title><rect x="96.7881%" y="453" width="0.2818%" height="15" fill="rgb(247,54,32)"/><text x="97.0381%" y="463.50"></text></g><g><title>[libcuda.so.460.91.03] (1,220 samples, 0.28%)</title><rect x="96.7881%" y="501" width="0.2821%" height="15" fill="rgb(252,131,39)"/><text x="97.0381%" y="511.50"></text></g><g><title>[libcuda.so.460.91.03] (1,220 samples, 0.28%)</title><rect x="96.7881%" y="485" width="0.2821%" height="15" fill="rgb(210,108,39)"/><text x="97.0381%" y="495.50"></text></g><g><title>[libcuda.so.460.91.03] (1,220 samples, 0.28%)</title><rect x="96.7881%" y="469" width="0.2821%" height="15" fill="rgb(205,23,29)"/><text x="97.0381%" y="479.50"></text></g><g><title>[libcudart-6d56b25a.so.11.0] (1,264 samples, 0.29%)</title><rect x="96.7823%" y="517" width="0.2922%" height="15" fill="rgb(246,139,46)"/><text x="97.0323%" y="527.50"></text></g><g><title>at::native::empty_cuda (1,272 samples, 0.29%)</title><rect x="96.7811%" y="693" width="0.2941%" height="15" fill="rgb(250,81,26)"/><text x="97.0311%" y="703.50"></text></g><g><title>c10::cuda::CUDACachingAllocator::CudaCachingAllocator::allocate (1,272 samples, 0.29%)</title><rect x="96.7811%" y="677" width="0.2941%" height="15" fill="rgb(214,104,7)"/><text x="97.0311%" y="687.50"></text></g><g><title>c10::cuda::CUDACachingAllocator::THCCachingAllocator::malloc (1,272 samples, 0.29%)</title><rect x="96.7811%" y="661" width="0.2941%" height="15" fill="rgb(233,189,8)"/><text x="97.0311%" y="671.50"></text></g><g><title>c10::cuda::CUDACachingAllocator::DeviceCachingAllocator::malloc (1,272 samples, 0.29%)</title><rect x="96.7811%" y="645" width="0.2941%" height="15" fill="rgb(228,141,17)"/><text x="97.0311%" y="655.50"></text></g><g><title>c10::cuda::CUDACachingAllocator::DeviceCachingAllocator::alloc_block (1,272 samples, 0.29%)</title><rect x="96.7811%" y="629" width="0.2941%" height="15" fill="rgb(247,157,1)"/><text x="97.0311%" y="639.50"></text></g><g><title>cudaStreamIsCapturing (1,272 samples, 0.29%)</title><rect x="96.7811%" y="613" width="0.2941%" height="15" fill="rgb(249,225,5)"/><text x="97.0311%" y="623.50"></text></g><g><title>[libcudart-6d56b25a.so.11.0] (1,272 samples, 0.29%)</title><rect x="96.7811%" y="597" width="0.2941%" height="15" fill="rgb(242,55,13)"/><text x="97.0311%" y="607.50"></text></g><g><title>[libcudart-6d56b25a.so.11.0] (1,272 samples, 0.29%)</title><rect x="96.7811%" y="581" width="0.2941%" height="15" fill="rgb(230,49,50)"/><text x="97.0311%" y="591.50"></text></g><g><title>[libcudart-6d56b25a.so.11.0] (1,272 samples, 0.29%)</title><rect x="96.7811%" y="565" width="0.2941%" height="15" fill="rgb(241,111,38)"/><text x="97.0311%" y="575.50"></text></g><g><title>[libcudart-6d56b25a.so.11.0] (1,272 samples, 0.29%)</title><rect x="96.7811%" y="549" width="0.2941%" height="15" fill="rgb(252,155,4)"/><text x="97.0311%" y="559.50"></text></g><g><title>[libcudart-6d56b25a.so.11.0] (1,272 samples, 0.29%)</title><rect x="96.7811%" y="533" width="0.2941%" height="15" fill="rgb(212,69,32)"/><text x="97.0311%" y="543.50"></text></g><g><title>mcts_policy::neural_net::Net::new (1,274 samples, 0.29%)</title><rect x="96.7809%" y="997" width="0.2945%" height="15" fill="rgb(243,107,47)"/><text x="97.0309%" y="1007.50"></text></g><g><title>tch::nn::conv::conv2d (1,274 samples, 0.29%)</title><rect x="96.7809%" y="981" width="0.2945%" height="15" fill="rgb(247,130,12)"/><text x="97.0309%" y="991.50"></text></g><g><title>tch::nn::conv::Create::conv (1,274 samples, 0.29%)</title><rect x="96.7809%" y="965" width="0.2945%" height="15" fill="rgb(233,74,16)"/><text x="97.0309%" y="975.50"></text></g><g><title>tch::nn::conv::conv (1,274 samples, 0.29%)</title><rect x="96.7809%" y="949" width="0.2945%" height="15" fill="rgb(208,58,18)"/><text x="97.0309%" y="959.50"></text></g><g><title>tch::nn::var_store::Path::var (1,274 samples, 0.29%)</title><rect x="96.7809%" y="933" width="0.2945%" height="15" fill="rgb(242,225,1)"/><text x="97.0309%" y="943.50"></text></g><g><title>tch::nn::var_store::Path::f_var (1,274 samples, 0.29%)</title><rect x="96.7809%" y="917" width="0.2945%" height="15" fill="rgb(249,39,40)"/><text x="97.0309%" y="927.50"></text></g><g><title>tch::nn::init::f_init (1,274 samples, 0.29%)</title><rect x="96.7809%" y="901" width="0.2945%" height="15" fill="rgb(207,72,44)"/><text x="97.0309%" y="911.50"></text></g><g><title>tch::wrappers::tensor_fallible_generated::&lt;impl tch::wrappers::tensor::Tensor&gt;::f_zeros (1,273 samples, 0.29%)</title><rect x="96.7811%" y="885" width="0.2943%" height="15" fill="rgb(215,193,12)"/><text x="97.0311%" y="895.50"></text></g><g><title>atg_zeros (1,273 samples, 0.29%)</title><rect x="96.7811%" y="869" width="0.2943%" height="15" fill="rgb(248,41,39)"/><text x="97.0311%" y="879.50"></text></g><g><title>torch::zeros (1,273 samples, 0.29%)</title><rect x="96.7811%" y="853" width="0.2943%" height="15" fill="rgb(253,85,4)"/><text x="97.0311%" y="863.50"></text></g><g><title>at::zeros (1,273 samples, 0.29%)</title><rect x="96.7811%" y="837" width="0.2943%" height="15" fill="rgb(243,70,31)"/><text x="97.0311%" y="847.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;), &amp;at::(anonymous namespace)::zeros&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt; &gt; &gt;, at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;::call (1,273 samples, 0.29%)</title><rect x="96.7811%" y="821" width="0.2943%" height="15" fill="rgb(253,195,26)"/><text x="97.0311%" y="831.50"></text></g><g><title>c10::Dispatcher::redispatch&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt; &gt; (1,273 samples, 0.29%)</title><rect x="96.7811%" y="805" width="0.2943%" height="15" fill="rgb(243,42,11)"/><text x="97.0311%" y="815.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_zeros&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt; &gt; &gt;, at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;)&gt;::call (1,273 samples, 0.29%)</title><rect x="96.7811%" y="789" width="0.2943%" height="15" fill="rgb(239,66,17)"/><text x="97.0311%" y="799.50"></text></g><g><title>at::native::zeros (1,273 samples, 0.29%)</title><rect x="96.7811%" y="773" width="0.2943%" height="15" fill="rgb(217,132,21)"/><text x="97.0311%" y="783.50"></text></g><g><title>at::empty (1,273 samples, 0.29%)</title><rect x="96.7811%" y="757" width="0.2943%" height="15" fill="rgb(252,202,21)"/><text x="97.0311%" y="767.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::empty_memory_format&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (1,273 samples, 0.29%)</title><rect x="96.7811%" y="741" width="0.2943%" height="15" fill="rgb(233,98,36)"/><text x="97.0311%" y="751.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_empty_memory_format&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (1,273 samples, 0.29%)</title><rect x="96.7811%" y="725" width="0.2943%" height="15" fill="rgb(216,153,54)"/><text x="97.0311%" y="735.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_empty_memory_format (1,273 samples, 0.29%)</title><rect x="96.7811%" y="709" width="0.2943%" height="15" fill="rgb(250,99,7)"/><text x="97.0311%" y="719.50"></text></g><g><title>[libcuda.so.460.91.03] (1,063 samples, 0.25%)</title><rect x="98.0340%" y="677" width="0.2458%" height="15" fill="rgb(207,56,50)"/><text x="98.2840%" y="687.50"></text></g><g><title>[libcuda.so.460.91.03] (785 samples, 0.18%)</title><rect x="98.0982%" y="661" width="0.1815%" height="15" fill="rgb(244,61,34)"/><text x="98.3482%" y="671.50"></text></g><g><title>[libcuda.so.460.91.03] (718 samples, 0.17%)</title><rect x="98.1137%" y="645" width="0.1660%" height="15" fill="rgb(241,50,38)"/><text x="98.3637%" y="655.50"></text></g><g><title>__GI___clock_gettime (584 samples, 0.14%)</title><rect x="98.2799%" y="677" width="0.1350%" height="15" fill="rgb(212,166,30)"/><text x="98.5299%" y="687.50"></text></g><g><title>__vdso_clock_gettime (561 samples, 0.13%)</title><rect x="98.2853%" y="661" width="0.1297%" height="15" fill="rgb(249,127,32)"/><text x="98.5353%" y="671.50"></text></g><g><title>[[vdso]] (490 samples, 0.11%)</title><rect x="98.3017%" y="645" width="0.1133%" height="15" fill="rgb(209,103,0)"/><text x="98.5517%" y="655.50"></text></g><g><title>[libcuda.so.460.91.03] (2,145 samples, 0.50%)</title><rect x="97.9336%" y="693" width="0.4959%" height="15" fill="rgb(238,209,51)"/><text x="98.1836%" y="703.50"></text></g><g><title>[libcuda.so.460.91.03] (4,518 samples, 1.04%)</title><rect x="97.4003%" y="709" width="1.0445%" height="15" fill="rgb(237,56,23)"/><text x="97.6503%" y="719.50"></text></g><g><title>[libcuda.so.460.91.03] (4,580 samples, 1.06%)</title><rect x="97.3936%" y="725" width="1.0589%" height="15" fill="rgb(215,153,46)"/><text x="97.6436%" y="735.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::copy_ (4,713 samples, 1.09%)</title><rect x="97.3681%" y="997" width="1.0896%" height="15" fill="rgb(224,49,31)"/><text x="97.6181%" y="1007.50"></text></g><g><title>at::redispatch::copy_ (4,672 samples, 1.08%)</title><rect x="97.3776%" y="981" width="1.0801%" height="15" fill="rgb(250,18,42)"/><text x="97.6276%" y="991.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool), &amp;torch::ADInplaceOrView::copy_&gt;, at::Tensor&amp;, c10::guts::typelist::typelist&lt;c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool&gt; &gt;, at::Tensor&amp; (c10::DispatchKeySet, at::Tensor&amp;, at::Tensor const&amp;, bool)&gt;::call (4,672 samples, 1.08%)</title><rect x="97.3776%" y="965" width="1.0801%" height="15" fill="rgb(215,176,39)"/><text x="97.6276%" y="975.50"></text></g><g><title>torch::ADInplaceOrView::copy_ (4,672 samples, 1.08%)</title><rect x="97.3776%" y="949" width="1.0801%" height="15" fill="rgb(223,77,29)"/><text x="97.6276%" y="959.50"></text></g><g><title>at::redispatch::copy_ (4,672 samples, 1.08%)</title><rect x="97.3776%" y="933" width="1.0801%" height="15" fill="rgb(234,94,52)"/><text x="97.6276%" y="943.50"></text></g><g><title>at::native::copy_ (4,672 samples, 1.08%)</title><rect x="97.3776%" y="917" width="1.0801%" height="15" fill="rgb(220,154,50)"/><text x="97.6276%" y="927.50"></text></g><g><title>at::native::copy_impl (4,672 samples, 1.08%)</title><rect x="97.3776%" y="901" width="1.0801%" height="15" fill="rgb(212,11,10)"/><text x="97.6276%" y="911.50"></text></g><g><title>at::native::copy_kernel_cuda (4,672 samples, 1.08%)</title><rect x="97.3776%" y="885" width="1.0801%" height="15" fill="rgb(205,166,19)"/><text x="97.6276%" y="895.50"></text></g><g><title>cudaMemcpyAsync (4,671 samples, 1.08%)</title><rect x="97.3778%" y="869" width="1.0799%" height="15" fill="rgb(244,198,16)"/><text x="97.6278%" y="879.50"></text></g><g><title>[libcudart-6d56b25a.so.11.0] (4,671 samples, 1.08%)</title><rect x="97.3778%" y="853" width="1.0799%" height="15" fill="rgb(219,69,12)"/><text x="97.6278%" y="863.50"></text></g><g><title>[libcudart-6d56b25a.so.11.0] (4,671 samples, 1.08%)</title><rect x="97.3778%" y="837" width="1.0799%" height="15" fill="rgb(245,30,7)"/><text x="97.6278%" y="847.50"></text></g><g><title>cuMemcpyDtoHAsync_v2 (4,671 samples, 1.08%)</title><rect x="97.3778%" y="821" width="1.0799%" height="15" fill="rgb(218,221,48)"/><text x="97.6278%" y="831.50"></text></g><g><title>[libcuda.so.460.91.03] (4,671 samples, 1.08%)</title><rect x="97.3778%" y="805" width="1.0799%" height="15" fill="rgb(216,66,15)"/><text x="97.6278%" y="815.50"></text></g><g><title>[libcuda.so.460.91.03] (4,671 samples, 1.08%)</title><rect x="97.3778%" y="789" width="1.0799%" height="15" fill="rgb(226,122,50)"/><text x="97.6278%" y="799.50"></text></g><g><title>[libcuda.so.460.91.03] (4,671 samples, 1.08%)</title><rect x="97.3778%" y="773" width="1.0799%" height="15" fill="rgb(239,156,16)"/><text x="97.6278%" y="783.50"></text></g><g><title>[libcuda.so.460.91.03] (4,671 samples, 1.08%)</title><rect x="97.3778%" y="757" width="1.0799%" height="15" fill="rgb(224,27,38)"/><text x="97.6278%" y="767.50"></text></g><g><title>[libcuda.so.460.91.03] (4,671 samples, 1.08%)</title><rect x="97.3778%" y="741" width="1.0799%" height="15" fill="rgb(224,39,27)"/><text x="97.6278%" y="751.50"></text></g><g><title>torch::autograd::VariableType::(anonymous namespace)::cudnn_batch_norm (819 samples, 0.19%)</title><rect x="98.4577%" y="997" width="0.1893%" height="15" fill="rgb(215,92,29)"/><text x="98.7077%" y="1007.50"></text></g><g><title>at::redispatch::cudnn_batch_norm (819 samples, 0.19%)</title><rect x="98.4577%" y="981" width="0.1893%" height="15" fill="rgb(207,159,16)"/><text x="98.7077%" y="991.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_cudnn_batch_norm&gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt;, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double&gt; &gt;, std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor&gt; (at::Tensor const&amp;, at::Tensor const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, c10::optional&lt;at::Tensor&gt; const&amp;, bool, double, double)&gt;::call (819 samples, 0.19%)</title><rect x="98.4577%" y="965" width="0.1893%" height="15" fill="rgb(238,163,47)"/><text x="98.7077%" y="975.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_cudnn_batch_norm (819 samples, 0.19%)</title><rect x="98.4577%" y="949" width="0.1893%" height="15" fill="rgb(219,91,49)"/><text x="98.7077%" y="959.50"></text></g><g><title>at::native::cudnn_batch_norm (819 samples, 0.19%)</title><rect x="98.4577%" y="933" width="0.1893%" height="15" fill="rgb(227,167,31)"/><text x="98.7077%" y="943.50"></text></g><g><title>at::empty_like (819 samples, 0.19%)</title><rect x="98.4577%" y="917" width="0.1893%" height="15" fill="rgb(234,80,54)"/><text x="98.7077%" y="927.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_empty_like&gt;, at::Tensor, c10::guts::typelist::typelist&lt;at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor (at::Tensor const&amp;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (819 samples, 0.19%)</title><rect x="98.4577%" y="901" width="0.1893%" height="15" fill="rgb(212,114,2)"/><text x="98.7077%" y="911.50"></text></g><g><title>at::native::empty_like (819 samples, 0.19%)</title><rect x="98.4577%" y="885" width="0.1893%" height="15" fill="rgb(234,50,24)"/><text x="98.7077%" y="895.50"></text></g><g><title>at::empty (819 samples, 0.19%)</title><rect x="98.4577%" y="869" width="0.1893%" height="15" fill="rgb(221,68,8)"/><text x="98.7077%" y="879.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::empty_memory_format&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (819 samples, 0.19%)</title><rect x="98.4577%" y="853" width="0.1893%" height="15" fill="rgb(254,180,31)"/><text x="98.7077%" y="863.50"></text></g><g><title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoFunctor_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;), &amp;at::(anonymous namespace)::(anonymous namespace)::wrapper_empty_memory_format&gt;, at::Tensor, c10::guts::typelist::typelist&lt;c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; &gt;, at::Tensor (c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt;)&gt;::call (819 samples, 0.19%)</title><rect x="98.4577%" y="837" width="0.1893%" height="15" fill="rgb(247,130,50)"/><text x="98.7077%" y="847.50"></text></g><g><title>at::(anonymous namespace)::(anonymous namespace)::wrapper_empty_memory_format (819 samples, 0.19%)</title><rect x="98.4577%" y="821" width="0.1893%" height="15" fill="rgb(211,109,4)"/><text x="98.7077%" y="831.50"></text></g><g><title>at::native::empty_cuda (819 samples, 0.19%)</title><rect x="98.4577%" y="805" width="0.1893%" height="15" fill="rgb(238,50,21)"/><text x="98.7077%" y="815.50"></text></g><g><title>c10::cuda::CUDACachingAllocator::CudaCachingAllocator::allocate (819 samples, 0.19%)</title><rect x="98.4577%" y="789" width="0.1893%" height="15" fill="rgb(225,57,45)"/><text x="98.7077%" y="799.50"></text></g><g><title>c10::cuda::CUDACachingAllocator::THCCachingAllocator::malloc (819 samples, 0.19%)</title><rect x="98.4577%" y="773" width="0.1893%" height="15" fill="rgb(209,196,50)"/><text x="98.7077%" y="783.50"></text></g><g><title>c10::cuda::CUDACachingAllocator::DeviceCachingAllocator::malloc (819 samples, 0.19%)</title><rect x="98.4577%" y="757" width="0.1893%" height="15" fill="rgb(242,140,13)"/><text x="98.7077%" y="767.50"></text></g><g><title>[unknown] (391,730 samples, 90.56%)</title><rect x="8.2255%" y="1013" width="90.5644%" height="15" fill="rgb(217,111,7)"/><text x="8.4755%" y="1023.50">[unknown]</text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (2,115 samples, 0.49%)</title><rect x="98.9365%" y="997" width="0.4890%" height="15" fill="rgb(253,193,51)"/><text x="99.1865%" y="1007.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::Debug for u16&gt;::fmt (1,377 samples, 0.32%)</title><rect x="99.1071%" y="981" width="0.3183%" height="15" fill="rgb(252,70,29)"/><text x="99.3571%" y="991.50"></text></g><g><title>anon.88955c43e64dfb12b3dceadcc8a9d270.20.llvm.13419202916738561045 (2,161 samples, 0.50%)</title><rect x="98.9365%" y="1013" width="0.4996%" height="15" fill="rgb(232,127,12)"/><text x="99.1865%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (483 samples, 0.11%)</title><rect x="99.6472%" y="1013" width="0.1117%" height="15" fill="rgb(211,180,21)"/><text x="99.8972%" y="1023.50"></text></g><g><title>mcts-policy (432,415 samples, 99.97%)</title><rect x="0.0284%" y="1029" width="99.9704%" height="15" fill="rgb(229,72,13)"/><text x="0.2784%" y="1039.50">mcts-policy</text></g><g><title>all (432,543 samples, 100%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(240,211,49)"/><text x="0.2500%" y="1055.50"></text></g></svg></svg>